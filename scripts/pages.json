[{"name":"ACTIVATE_FACTOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ACTIVATE_FACTOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-a-c-t-i-v-a-t-e_-f-a-c-t-o-r/index.html","searchKeys":["ACTIVATE_FACTOR","ACTIVATE_FACTOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.ACTIVATE_FACTOR"]},{"name":"APP","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.APP","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-a-p-p/index.html","searchKeys":["APP","APP","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.APP"]},{"name":"AUTHENTICATING","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.AUTHENTICATING","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/-a-u-t-h-e-n-t-i-c-a-t-i-n-g/index.html","searchKeys":["AUTHENTICATING","AUTHENTICATING","com.okta.idx.kotlin.dto.IdxAuthenticator.State.AUTHENTICATING"]},{"name":"AUTHENTICATOR_ENROLLMENT_DATA","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.AUTHENTICATOR_ENROLLMENT_DATA","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-a-u-t-h-e-n-t-i-c-a-t-o-r_-e-n-r-o-l-l-m-e-n-t_-d-a-t-a/index.html","searchKeys":["AUTHENTICATOR_ENROLLMENT_DATA","AUTHENTICATOR_ENROLLMENT_DATA","com.okta.idx.kotlin.dto.IdxRemediation.Type.AUTHENTICATOR_ENROLLMENT_DATA"]},{"name":"AUTHENTICATOR_VERIFICATION_DATA","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.AUTHENTICATOR_VERIFICATION_DATA","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-a-u-t-h-e-n-t-i-c-a-t-o-r_-v-e-r-i-f-i-c-a-t-i-o-n_-d-a-t-a/index.html","searchKeys":["AUTHENTICATOR_VERIFICATION_DATA","AUTHENTICATOR_VERIFICATION_DATA","com.okta.idx.kotlin.dto.IdxRemediation.Type.AUTHENTICATOR_VERIFICATION_DATA"]},{"name":"CANCEL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-a-n-c-e-l/index.html","searchKeys":["CANCEL","CANCEL","com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL"]},{"name":"CANCEL_POLLING","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL_POLLING","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-a-n-c-e-l_-p-o-l-l-i-n-g/index.html","searchKeys":["CANCEL_POLLING","CANCEL_POLLING","com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL_POLLING"]},{"name":"CANCEL_TRANSACTION","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL_TRANSACTION","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-a-n-c-e-l_-t-r-a-n-s-a-c-t-i-o-n/index.html","searchKeys":["CANCEL_TRANSACTION","CANCEL_TRANSACTION","com.okta.idx.kotlin.dto.IdxRemediation.Type.CANCEL_TRANSACTION"]},{"name":"CHALLENGE_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-h-a-l-l-e-n-g-e_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["CHALLENGE_AUTHENTICATOR","CHALLENGE_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_AUTHENTICATOR"]},{"name":"CHALLENGE_FACTOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_FACTOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-h-a-l-l-e-n-g-e_-f-a-c-t-o-r/index.html","searchKeys":["CHALLENGE_FACTOR","CHALLENGE_FACTOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_FACTOR"]},{"name":"CHALLENGE_POLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_POLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-h-a-l-l-e-n-g-e_-p-o-l-l/index.html","searchKeys":["CHALLENGE_POLL","CHALLENGE_POLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_POLL"]},{"name":"CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-c-h-a-l-l-e-n-g-e_-w-e-b-a-u-t-h-n_-a-u-t-o-f-i-l-l-u-i_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR"]},{"name":"CREDENTIAL_ENROLLMENT","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_ENROLLMENT","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-c-r-e-d-e-n-t-i-a-l_-e-n-r-o-l-l-m-e-n-t/index.html","searchKeys":["CREDENTIAL_ENROLLMENT","CREDENTIAL_ENROLLMENT","com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_ENROLLMENT"]},{"name":"CREDENTIAL_MODIFY","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_MODIFY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-c-r-e-d-e-n-t-i-a-l_-m-o-d-i-f-y/index.html","searchKeys":["CREDENTIAL_MODIFY","CREDENTIAL_MODIFY","com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_MODIFY"]},{"name":"CREDENTIAL_RECOVERY","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_RECOVERY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-c-r-e-d-e-n-t-i-a-l_-r-e-c-o-v-e-r-y/index.html","searchKeys":["CREDENTIAL_RECOVERY","CREDENTIAL_RECOVERY","com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_RECOVERY"]},{"name":"CREDENTIAL_UNENROLLMENT","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_UNENROLLMENT","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-c-r-e-d-e-n-t-i-a-l_-u-n-e-n-r-o-l-l-m-e-n-t/index.html","searchKeys":["CREDENTIAL_UNENROLLMENT","CREDENTIAL_UNENROLLMENT","com.okta.idx.kotlin.dto.IdxResponse.Intent.CREDENTIAL_UNENROLLMENT"]},{"name":"CRYPTO","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.CRYPTO","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-c-r-y-p-t-o/index.html","searchKeys":["CRYPTO","CRYPTO","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.CRYPTO"]},{"name":"DEVICE","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.DEVICE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-d-e-v-i-c-e/index.html","searchKeys":["DEVICE","DEVICE","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.DEVICE"]},{"name":"DEVICE_APPLE_SSO_EXTENSION","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.DEVICE_APPLE_SSO_EXTENSION","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-d-e-v-i-c-e_-a-p-p-l-e_-s-s-o_-e-x-t-e-n-s-i-o-n/index.html","searchKeys":["DEVICE_APPLE_SSO_EXTENSION","DEVICE_APPLE_SSO_EXTENSION","com.okta.idx.kotlin.dto.IdxRemediation.Type.DEVICE_APPLE_SSO_EXTENSION"]},{"name":"DEVICE_CHALLENGE_POLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.DEVICE_CHALLENGE_POLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-d-e-v-i-c-e_-c-h-a-l-l-e-n-g-e_-p-o-l-l/index.html","searchKeys":["DEVICE_CHALLENGE_POLL","DEVICE_CHALLENGE_POLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.DEVICE_CHALLENGE_POLL"]},{"name":"EMAIL","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.EMAIL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-e-m-a-i-l/index.html","searchKeys":["EMAIL","EMAIL","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.EMAIL"]},{"name":"EMAIL","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.EMAIL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-e-m-a-i-l/index.html","searchKeys":["EMAIL","EMAIL","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.EMAIL"]},{"name":"ENROLLED","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.ENROLLED","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/-e-n-r-o-l-l-e-d/index.html","searchKeys":["ENROLLED","ENROLLED","com.okta.idx.kotlin.dto.IdxAuthenticator.State.ENROLLED"]},{"name":"ENROLLING","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.ENROLLING","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/-e-n-r-o-l-l-i-n-g/index.html","searchKeys":["ENROLLING","ENROLLING","com.okta.idx.kotlin.dto.IdxAuthenticator.State.ENROLLING"]},{"name":"ENROLLMENT_CHANNEL_DATA","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLLMENT_CHANNEL_DATA","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-e-n-r-o-l-l-m-e-n-t_-c-h-a-n-n-e-l_-d-a-t-a/index.html","searchKeys":["ENROLLMENT_CHANNEL_DATA","ENROLLMENT_CHANNEL_DATA","com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLLMENT_CHANNEL_DATA"]},{"name":"ENROLL_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-e-n-r-o-l-l_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["ENROLL_AUTHENTICATOR","ENROLL_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_AUTHENTICATOR"]},{"name":"ENROLL_FACTOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_FACTOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-e-n-r-o-l-l_-f-a-c-t-o-r/index.html","searchKeys":["ENROLL_FACTOR","ENROLL_FACTOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_FACTOR"]},{"name":"ENROLL_NEW_USER","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.ENROLL_NEW_USER","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-e-n-r-o-l-l_-n-e-w_-u-s-e-r/index.html","searchKeys":["ENROLL_NEW_USER","ENROLL_NEW_USER","com.okta.idx.kotlin.dto.IdxResponse.Intent.ENROLL_NEW_USER"]},{"name":"ENROLL_POLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_POLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-e-n-r-o-l-l_-p-o-l-l/index.html","searchKeys":["ENROLL_POLL","ENROLL_POLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_POLL"]},{"name":"ENROLL_PROFILE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_PROFILE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-e-n-r-o-l-l_-p-r-o-f-i-l-e/index.html","searchKeys":["ENROLL_PROFILE","ENROLL_PROFILE","com.okta.idx.kotlin.dto.IdxRemediation.Type.ENROLL_PROFILE"]},{"name":"ERROR","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.ERROR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","com.okta.idx.kotlin.dto.IdxMessage.Severity.ERROR"]},{"name":"FACTOR_POLL_VERIFICATION","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.FACTOR_POLL_VERIFICATION","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-f-a-c-t-o-r_-p-o-l-l_-v-e-r-i-f-i-c-a-t-i-o-n/index.html","searchKeys":["FACTOR_POLL_VERIFICATION","FACTOR_POLL_VERIFICATION","com.okta.idx.kotlin.dto.IdxRemediation.Type.FACTOR_POLL_VERIFICATION"]},{"name":"FEDERATED","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.FEDERATED","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-f-e-d-e-r-a-t-e-d/index.html","searchKeys":["FEDERATED","FEDERATED","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.FEDERATED"]},{"name":"IDENTIFY","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.IDENTIFY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-i-d-e-n-t-i-f-y/index.html","searchKeys":["IDENTIFY","IDENTIFY","com.okta.idx.kotlin.dto.IdxRemediation.Type.IDENTIFY"]},{"name":"IDENTIFY_RECOVERY","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.IDENTIFY_RECOVERY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-i-d-e-n-t-i-f-y_-r-e-c-o-v-e-r-y/index.html","searchKeys":["IDENTIFY_RECOVERY","IDENTIFY_RECOVERY","com.okta.idx.kotlin.dto.IdxRemediation.Type.IDENTIFY_RECOVERY"]},{"name":"INFO","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.INFO","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/-i-n-f-o/index.html","searchKeys":["INFO","INFO","com.okta.idx.kotlin.dto.IdxMessage.Severity.INFO"]},{"name":"ISSUE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.ISSUE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-i-s-s-u-e/index.html","searchKeys":["ISSUE","ISSUE","com.okta.idx.kotlin.dto.IdxRemediation.Type.ISSUE"]},{"name":"LAUNCH_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.LAUNCH_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-l-a-u-n-c-h_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["LAUNCH_AUTHENTICATOR","LAUNCH_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.LAUNCH_AUTHENTICATOR"]},{"name":"LOGIN","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.LOGIN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-l-o-g-i-n/index.html","searchKeys":["LOGIN","LOGIN","com.okta.idx.kotlin.dto.IdxResponse.Intent.LOGIN"]},{"name":"NORMAL","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.NORMAL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/-n-o-r-m-a-l/index.html","searchKeys":["NORMAL","NORMAL","com.okta.idx.kotlin.dto.IdxAuthenticator.State.NORMAL"]},{"name":"PASSWORD","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.PASSWORD","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-p-a-s-s-w-o-r-d/index.html","searchKeys":["PASSWORD","PASSWORD","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.PASSWORD"]},{"name":"PASSWORD","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.PASSWORD","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-p-a-s-s-w-o-r-d/index.html","searchKeys":["PASSWORD","PASSWORD","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.PASSWORD"]},{"name":"PHONE","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.PHONE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-p-h-o-n-e/index.html","searchKeys":["PHONE","PHONE","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.PHONE"]},{"name":"POLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.POLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-p-o-l-l/index.html","searchKeys":["POLL","POLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.POLL"]},{"name":"PROFILE_ATTRIBUTES","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.PROFILE_ATTRIBUTES","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-p-r-o-f-i-l-e_-a-t-t-r-i-b-u-t-e-s/index.html","searchKeys":["PROFILE_ATTRIBUTES","PROFILE_ATTRIBUTES","com.okta.idx.kotlin.dto.IdxRemediation.Type.PROFILE_ATTRIBUTES"]},{"name":"PUSH","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.PUSH","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-p-u-s-h/index.html","searchKeys":["PUSH","PUSH","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.PUSH"]},{"name":"QR_REFRESH","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.QR_REFRESH","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-q-r_-r-e-f-r-e-s-h/index.html","searchKeys":["QR_REFRESH","QR_REFRESH","com.okta.idx.kotlin.dto.IdxRemediation.Type.QR_REFRESH"]},{"name":"RECOVER","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.RECOVER","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-c-o-v-e-r/index.html","searchKeys":["RECOVER","RECOVER","com.okta.idx.kotlin.dto.IdxRemediation.Type.RECOVER"]},{"name":"RECOVERY","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.RECOVERY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/-r-e-c-o-v-e-r-y/index.html","searchKeys":["RECOVERY","RECOVERY","com.okta.idx.kotlin.dto.IdxAuthenticator.State.RECOVERY"]},{"name":"REDIRECT","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.REDIRECT","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-d-i-r-e-c-t/index.html","searchKeys":["REDIRECT","REDIRECT","com.okta.idx.kotlin.dto.IdxRemediation.Type.REDIRECT"]},{"name":"REDIRECT_IDP","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.REDIRECT_IDP","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-d-i-r-e-c-t_-i-d-p/index.html","searchKeys":["REDIRECT_IDP","REDIRECT_IDP","com.okta.idx.kotlin.dto.IdxRemediation.Type.REDIRECT_IDP"]},{"name":"REENROLL_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.REENROLL_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-e-n-r-o-l-l_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["REENROLL_AUTHENTICATOR","REENROLL_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.REENROLL_AUTHENTICATOR"]},{"name":"REENROLL_AUTHENTICATOR_WARNING","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.REENROLL_AUTHENTICATOR_WARNING","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-e-n-r-o-l-l_-a-u-t-h-e-n-t-i-c-a-t-o-r_-w-a-r-n-i-n-g/index.html","searchKeys":["REENROLL_AUTHENTICATOR_WARNING","REENROLL_AUTHENTICATOR_WARNING","com.okta.idx.kotlin.dto.IdxRemediation.Type.REENROLL_AUTHENTICATOR_WARNING"]},{"name":"RESEND_CHALLENGE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.RESEND_CHALLENGE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-s-e-n-d_-c-h-a-l-l-e-n-g-e/index.html","searchKeys":["RESEND_CHALLENGE","RESEND_CHALLENGE","com.okta.idx.kotlin.dto.IdxRemediation.Type.RESEND_CHALLENGE"]},{"name":"RESET_AUTHENTICATOR","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.RESET_AUTHENTICATOR","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-r-e-s-e-t_-a-u-t-h-e-n-t-i-c-a-t-o-r/index.html","searchKeys":["RESET_AUTHENTICATOR","RESET_AUTHENTICATOR","com.okta.idx.kotlin.dto.IdxRemediation.Type.RESET_AUTHENTICATOR"]},{"name":"SECURITY_KEY","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.SECURITY_KEY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-s-e-c-u-r-i-t-y_-k-e-y/index.html","searchKeys":["SECURITY_KEY","SECURITY_KEY","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.SECURITY_KEY"]},{"name":"SECURITY_QUESTION","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.SECURITY_QUESTION","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-s-e-c-u-r-i-t-y_-q-u-e-s-t-i-o-n/index.html","searchKeys":["SECURITY_QUESTION","SECURITY_QUESTION","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.SECURITY_QUESTION"]},{"name":"SECURITY_QUESTION","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SECURITY_QUESTION","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-s-e-c-u-r-i-t-y_-q-u-e-s-t-i-o-n/index.html","searchKeys":["SECURITY_QUESTION","SECURITY_QUESTION","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SECURITY_QUESTION"]},{"name":"SELECT_AUTHENTICATOR_AUTHENTICATE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_AUTHENTICATOR_AUTHENTICATE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-a-u-t-h-e-n-t-i-c-a-t-o-r_-a-u-t-h-e-n-t-i-c-a-t-e/index.html","searchKeys":["SELECT_AUTHENTICATOR_AUTHENTICATE","SELECT_AUTHENTICATOR_AUTHENTICATE","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_AUTHENTICATOR_AUTHENTICATE"]},{"name":"SELECT_AUTHENTICATOR_ENROLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_AUTHENTICATOR_ENROLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-a-u-t-h-e-n-t-i-c-a-t-o-r_-e-n-r-o-l-l/index.html","searchKeys":["SELECT_AUTHENTICATOR_ENROLL","SELECT_AUTHENTICATOR_ENROLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_AUTHENTICATOR_ENROLL"]},{"name":"SELECT_ENROLLMENT_CHANNEL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_ENROLLMENT_CHANNEL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-e-n-r-o-l-l-m-e-n-t_-c-h-a-n-n-e-l/index.html","searchKeys":["SELECT_ENROLLMENT_CHANNEL","SELECT_ENROLLMENT_CHANNEL","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_ENROLLMENT_CHANNEL"]},{"name":"SELECT_ENROLL_PROFILE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_ENROLL_PROFILE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-e-n-r-o-l-l_-p-r-o-f-i-l-e/index.html","searchKeys":["SELECT_ENROLL_PROFILE","SELECT_ENROLL_PROFILE","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_ENROLL_PROFILE"]},{"name":"SELECT_FACTOR_AUTHENTICATE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_FACTOR_AUTHENTICATE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-f-a-c-t-o-r_-a-u-t-h-e-n-t-i-c-a-t-e/index.html","searchKeys":["SELECT_FACTOR_AUTHENTICATE","SELECT_FACTOR_AUTHENTICATE","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_FACTOR_AUTHENTICATE"]},{"name":"SELECT_FACTOR_ENROLL","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_FACTOR_ENROLL","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-f-a-c-t-o-r_-e-n-r-o-l-l/index.html","searchKeys":["SELECT_FACTOR_ENROLL","SELECT_FACTOR_ENROLL","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_FACTOR_ENROLL"]},{"name":"SELECT_IDENTIFY","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_IDENTIFY","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-i-d-e-n-t-i-f-y/index.html","searchKeys":["SELECT_IDENTIFY","SELECT_IDENTIFY","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_IDENTIFY"]},{"name":"SELECT_IDP","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_IDP","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-i-d-p/index.html","searchKeys":["SELECT_IDP","SELECT_IDP","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_IDP"]},{"name":"SELECT_PLATFORM","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_PLATFORM","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-l-e-c-t_-p-l-a-t-f-o-r-m/index.html","searchKeys":["SELECT_PLATFORM","SELECT_PLATFORM","com.okta.idx.kotlin.dto.IdxRemediation.Type.SELECT_PLATFORM"]},{"name":"SEND_CHALLENGE","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SEND_CHALLENGE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-e-n-d_-c-h-a-l-l-e-n-g-e/index.html","searchKeys":["SEND_CHALLENGE","SEND_CHALLENGE","com.okta.idx.kotlin.dto.IdxRemediation.Type.SEND_CHALLENGE"]},{"name":"SIGNED_NONCE","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SIGNED_NONCE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-s-i-g-n-e-d_-n-o-n-c-e/index.html","searchKeys":["SIGNED_NONCE","SIGNED_NONCE","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SIGNED_NONCE"]},{"name":"SKIP","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.SKIP","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-s-k-i-p/index.html","searchKeys":["SKIP","SKIP","com.okta.idx.kotlin.dto.IdxRemediation.Type.SKIP"]},{"name":"SMS","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SMS","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-s-m-s/index.html","searchKeys":["SMS","SMS","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.SMS"]},{"name":"TOTP","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.TOTP","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-t-o-t-p/index.html","searchKeys":["TOTP","TOTP","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.TOTP"]},{"name":"UNKNOWN","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.UNKNOWN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.UNKNOWN"]},{"name":"UNKNOWN","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.UNKNOWN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.UNKNOWN"]},{"name":"UNKNOWN","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.UNKNOWN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.okta.idx.kotlin.dto.IdxMessage.Severity.UNKNOWN"]},{"name":"UNKNOWN","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.UNKNOWN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.okta.idx.kotlin.dto.IdxRemediation.Type.UNKNOWN"]},{"name":"UNKNOWN","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.UNKNOWN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.okta.idx.kotlin.dto.IdxResponse.Intent.UNKNOWN"]},{"name":"UNLOCK_ACCOUNT","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.UNLOCK_ACCOUNT","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/-u-n-l-o-c-k_-a-c-c-o-u-n-t/index.html","searchKeys":["UNLOCK_ACCOUNT","UNLOCK_ACCOUNT","com.okta.idx.kotlin.dto.IdxRemediation.Type.UNLOCK_ACCOUNT"]},{"name":"VOICE","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.VOICE","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-v-o-i-c-e/index.html","searchKeys":["VOICE","VOICE","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.VOICE"]},{"name":"WEB_AUTHN","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.WEB_AUTHN","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/-w-e-b_-a-u-t-h-n/index.html","searchKeys":["WEB_AUTHN","WEB_AUTHN","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.WEB_AUTHN"]},{"name":"class Age","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-age/index.html","searchKeys":["Age","class Age","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age"]},{"name":"class Complexity","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/index.html","searchKeys":["Complexity","class Complexity","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity"]},{"name":"class DeviceTokenProvider(aesEncryptionHandler: AesEncryptionHandler = AesEncryptionHandler())","description":"com.okta.authfoundation.client.DeviceTokenProvider","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/index.html","searchKeys":["DeviceTokenProvider","class DeviceTokenProvider(aesEncryptionHandler: AesEncryptionHandler = AesEncryptionHandler())","com.okta.authfoundation.client.DeviceTokenProvider"]},{"name":"class Error : IdxRedirectResult","description":"com.okta.idx.kotlin.client.IdxRedirectResult.Error","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-error/index.html","searchKeys":["Error","class Error : IdxRedirectResult","com.okta.idx.kotlin.client.IdxRedirectResult.Error"]},{"name":"class Field","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/index.html","searchKeys":["Field","class Field","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field"]},{"name":"class Form","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/index.html","searchKeys":["Form","class Form","com.okta.idx.kotlin.dto.IdxRemediation.Form"]},{"name":"class IdxApplication","description":"com.okta.idx.kotlin.dto.IdxApplication","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-application/index.html","searchKeys":["IdxApplication","class IdxApplication","com.okta.idx.kotlin.dto.IdxApplication"]},{"name":"class IdxAuthenticator","description":"com.okta.idx.kotlin.dto.IdxAuthenticator","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/index.html","searchKeys":["IdxAuthenticator","class IdxAuthenticator","com.okta.idx.kotlin.dto.IdxAuthenticator"]},{"name":"class IdxAuthenticatorCollection : List<IdxAuthenticator> ","description":"com.okta.idx.kotlin.dto.IdxAuthenticatorCollection","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator-collection/index.html","searchKeys":["IdxAuthenticatorCollection","class IdxAuthenticatorCollection : List<IdxAuthenticator> ","com.okta.idx.kotlin.dto.IdxAuthenticatorCollection"]},{"name":"class IdxCapabilityCollection<C> : Set<C> ","description":"com.okta.idx.kotlin.dto.IdxCapabilityCollection","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-capability-collection/index.html","searchKeys":["IdxCapabilityCollection","class IdxCapabilityCollection<C> : Set<C> ","com.okta.idx.kotlin.dto.IdxCapabilityCollection"]},{"name":"class IdxIdpCapability : IdxRemediation.Capability","description":"com.okta.idx.kotlin.dto.IdxIdpCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-idp-capability/index.html","searchKeys":["IdxIdpCapability","class IdxIdpCapability : IdxRemediation.Capability","com.okta.idx.kotlin.dto.IdxIdpCapability"]},{"name":"class IdxMessage","description":"com.okta.idx.kotlin.dto.IdxMessage","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/index.html","searchKeys":["IdxMessage","class IdxMessage","com.okta.idx.kotlin.dto.IdxMessage"]},{"name":"class IdxMessageCollection : List<IdxMessage> ","description":"com.okta.idx.kotlin.dto.IdxMessageCollection","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message-collection/index.html","searchKeys":["IdxMessageCollection","class IdxMessageCollection : List<IdxMessage> ","com.okta.idx.kotlin.dto.IdxMessageCollection"]},{"name":"class IdxNumberChallengeCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxNumberChallengeCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-number-challenge-capability/index.html","searchKeys":["IdxNumberChallengeCapability","class IdxNumberChallengeCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxNumberChallengeCapability"]},{"name":"class IdxPasswordSettingsCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/index.html","searchKeys":["IdxPasswordSettingsCapability","class IdxPasswordSettingsCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability"]},{"name":"class IdxPollAuthenticatorCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxPollAuthenticatorCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-poll-authenticator-capability/index.html","searchKeys":["IdxPollAuthenticatorCapability","class IdxPollAuthenticatorCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxPollAuthenticatorCapability"]},{"name":"class IdxPollRemediationCapability : IdxRemediation.Capability","description":"com.okta.idx.kotlin.dto.IdxPollRemediationCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-poll-remediation-capability/index.html","searchKeys":["IdxPollRemediationCapability","class IdxPollRemediationCapability : IdxRemediation.Capability","com.okta.idx.kotlin.dto.IdxPollRemediationCapability"]},{"name":"class IdxProfileCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxProfileCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-profile-capability/index.html","searchKeys":["IdxProfileCapability","class IdxProfileCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxProfileCapability"]},{"name":"class IdxRecoverCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxRecoverCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-recover-capability/index.html","searchKeys":["IdxRecoverCapability","class IdxRecoverCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxRecoverCapability"]},{"name":"class IdxRemediation","description":"com.okta.idx.kotlin.dto.IdxRemediation","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/index.html","searchKeys":["IdxRemediation","class IdxRemediation","com.okta.idx.kotlin.dto.IdxRemediation"]},{"name":"class IdxRemediationCollection : List<IdxRemediation> ","description":"com.okta.idx.kotlin.dto.IdxRemediationCollection","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation-collection/index.html","searchKeys":["IdxRemediationCollection","class IdxRemediationCollection : List<IdxRemediation> ","com.okta.idx.kotlin.dto.IdxRemediationCollection"]},{"name":"class IdxResendCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxResendCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-resend-capability/index.html","searchKeys":["IdxResendCapability","class IdxResendCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxResendCapability"]},{"name":"class IdxResponse","description":"com.okta.idx.kotlin.dto.IdxResponse","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/index.html","searchKeys":["IdxResponse","class IdxResponse","com.okta.idx.kotlin.dto.IdxResponse"]},{"name":"class IdxSendCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxSendCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-send-capability/index.html","searchKeys":["IdxSendCapability","class IdxSendCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxSendCapability"]},{"name":"class IdxTotpCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxTotpCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-totp-capability/index.html","searchKeys":["IdxTotpCapability","class IdxTotpCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxTotpCapability"]},{"name":"class IdxUser","description":"com.okta.idx.kotlin.dto.IdxUser","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/index.html","searchKeys":["IdxUser","class IdxUser","com.okta.idx.kotlin.dto.IdxUser"]},{"name":"class IdxWebAuthnAuthenticationCapability : IdxAuthenticator.Capability, IdxRemediation.Capability","description":"com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-authentication-capability/index.html","searchKeys":["IdxWebAuthnAuthenticationCapability","class IdxWebAuthnAuthenticationCapability : IdxAuthenticator.Capability, IdxRemediation.Capability","com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability"]},{"name":"class IdxWebAuthnRegistrationCapability : IdxAuthenticator.Capability","description":"com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-registration-capability/index.html","searchKeys":["IdxWebAuthnRegistrationCapability","class IdxWebAuthnRegistrationCapability : IdxAuthenticator.Capability","com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability"]},{"name":"class InteractionCodeFlow(val client: OAuth2Client)","description":"com.okta.idx.kotlin.client.InteractionCodeFlow","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/index.html","searchKeys":["InteractionCodeFlow","class InteractionCodeFlow(val client: OAuth2Client)","com.okta.idx.kotlin.client.InteractionCodeFlow"]},{"name":"class InteractionCodeFlowContext","description":"com.okta.idx.kotlin.client.InteractionCodeFlowContext","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow-context/index.html","searchKeys":["InteractionCodeFlowContext","class InteractionCodeFlowContext","com.okta.idx.kotlin.client.InteractionCodeFlowContext"]},{"name":"class InteractionRequired : IdxRedirectResult","description":"com.okta.idx.kotlin.client.IdxRedirectResult.InteractionRequired","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-interaction-required/index.html","searchKeys":["InteractionRequired","class InteractionRequired : IdxRedirectResult","com.okta.idx.kotlin.client.IdxRedirectResult.InteractionRequired"]},{"name":"class Profile","description":"com.okta.idx.kotlin.dto.IdxUser.Profile","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/-profile/index.html","searchKeys":["Profile","class Profile","com.okta.idx.kotlin.dto.IdxUser.Profile"]},{"name":"class Tokens : IdxRedirectResult","description":"com.okta.idx.kotlin.client.IdxRedirectResult.Tokens","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-tokens/index.html","searchKeys":["Tokens","class Tokens : IdxRedirectResult","com.okta.idx.kotlin.client.IdxRedirectResult.Tokens"]},{"name":"const val PREFERENCE_NAME: String","description":"com.okta.authfoundation.client.DeviceTokenProvider.Companion.PREFERENCE_NAME","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/-companion/-p-r-e-f-e-r-e-n-c-e_-n-a-m-e.html","searchKeys":["PREFERENCE_NAME","const val PREFERENCE_NAME: String","com.okta.authfoundation.client.DeviceTokenProvider.Companion.PREFERENCE_NAME"]},{"name":"constructor()","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/-interaction-code-flow.html","searchKeys":["InteractionCodeFlow","constructor()","com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow"]},{"name":"constructor(aesEncryptionHandler: AesEncryptionHandler = AesEncryptionHandler())","description":"com.okta.authfoundation.client.DeviceTokenProvider.DeviceTokenProvider","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/-device-token-provider.html","searchKeys":["DeviceTokenProvider","constructor(aesEncryptionHandler: AesEncryptionHandler = AesEncryptionHandler())","com.okta.authfoundation.client.DeviceTokenProvider.DeviceTokenProvider"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/-interaction-code-flow.html","searchKeys":["InteractionCodeFlow","constructor(client: OAuth2Client)","com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/-interaction-code-flow.html","searchKeys":["InteractionCodeFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.idx.kotlin.client.InteractionCodeFlow.InteractionCodeFlow"]},{"name":"enum Intent : Enum<IdxResponse.Intent> ","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/index.html","searchKeys":["Intent","enum Intent : Enum<IdxResponse.Intent> ","com.okta.idx.kotlin.dto.IdxResponse.Intent"]},{"name":"enum Kind : Enum<IdxAuthenticator.Kind> ","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/index.html","searchKeys":["Kind","enum Kind : Enum<IdxAuthenticator.Kind> ","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind"]},{"name":"enum Method : Enum<IdxAuthenticator.Method> ","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/index.html","searchKeys":["Method","enum Method : Enum<IdxAuthenticator.Method> ","com.okta.idx.kotlin.dto.IdxAuthenticator.Method"]},{"name":"enum Severity : Enum<IdxMessage.Severity> ","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/index.html","searchKeys":["Severity","enum Severity : Enum<IdxMessage.Severity> ","com.okta.idx.kotlin.dto.IdxMessage.Severity"]},{"name":"enum State : Enum<IdxAuthenticator.State> ","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/index.html","searchKeys":["State","enum State : Enum<IdxAuthenticator.State> ","com.okta.idx.kotlin.dto.IdxAuthenticator.State"]},{"name":"enum Type : Enum<IdxRemediation.Type> ","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/index.html","searchKeys":["Type","enum Type : Enum<IdxRemediation.Type> ","com.okta.idx.kotlin.dto.IdxRemediation.Type"]},{"name":"fun asImage(): Bitmap?","description":"com.okta.idx.kotlin.dto.IdxTotpCapability.asImage","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-totp-capability/as-image.html","searchKeys":["asImage","fun asImage(): Bitmap?","com.okta.idx.kotlin.dto.IdxTotpCapability.asImage"]},{"name":"fun challengeData(relyingPartyIdentifier: String? = null): Result<String>","description":"com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability.challengeData","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-authentication-capability/challenge-data.html","searchKeys":["challengeData","fun challengeData(relyingPartyIdentifier: String? = null): Result<String>","com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability.challengeData"]},{"name":"fun publicKeyCredentialCreationOptions(relyingPartyIdentifier: String? = null): Result<String>","description":"com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability.publicKeyCredentialCreationOptions","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-registration-capability/public-key-credential-creation-options.html","searchKeys":["publicKeyCredentialCreationOptions","fun publicKeyCredentialCreationOptions(relyingPartyIdentifier: String? = null): Result<String>","com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability.publicKeyCredentialCreationOptions"]},{"name":"fun valueOf(value: String): IdxAuthenticator.Kind","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxAuthenticator.Kind","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.valueOf"]},{"name":"fun valueOf(value: String): IdxAuthenticator.Method","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxAuthenticator.Method","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.valueOf"]},{"name":"fun valueOf(value: String): IdxAuthenticator.State","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxAuthenticator.State","com.okta.idx.kotlin.dto.IdxAuthenticator.State.valueOf"]},{"name":"fun valueOf(value: String): IdxMessage.Severity","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxMessage.Severity","com.okta.idx.kotlin.dto.IdxMessage.Severity.valueOf"]},{"name":"fun valueOf(value: String): IdxRemediation.Type","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxRemediation.Type","com.okta.idx.kotlin.dto.IdxRemediation.Type.valueOf"]},{"name":"fun valueOf(value: String): IdxResponse.Intent","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.valueOf","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): IdxResponse.Intent","com.okta.idx.kotlin.dto.IdxResponse.Intent.valueOf"]},{"name":"fun values(): Array<IdxAuthenticator.Kind>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/values.html","searchKeys":["values","fun values(): Array<IdxAuthenticator.Kind>","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.values"]},{"name":"fun values(): Array<IdxAuthenticator.Method>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/values.html","searchKeys":["values","fun values(): Array<IdxAuthenticator.Method>","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.values"]},{"name":"fun values(): Array<IdxAuthenticator.State>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/values.html","searchKeys":["values","fun values(): Array<IdxAuthenticator.State>","com.okta.idx.kotlin.dto.IdxAuthenticator.State.values"]},{"name":"fun values(): Array<IdxMessage.Severity>","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/values.html","searchKeys":["values","fun values(): Array<IdxMessage.Severity>","com.okta.idx.kotlin.dto.IdxMessage.Severity.values"]},{"name":"fun values(): Array<IdxRemediation.Type>","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/values.html","searchKeys":["values","fun values(): Array<IdxRemediation.Type>","com.okta.idx.kotlin.dto.IdxRemediation.Type.values"]},{"name":"fun values(): Array<IdxResponse.Intent>","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.values","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/values.html","searchKeys":["values","fun values(): Array<IdxResponse.Intent>","com.okta.idx.kotlin.dto.IdxResponse.Intent.values"]},{"name":"fun withAuthenticationResponseJson(remediation: IdxRemediation, authenticationResponseJson: String): Result<IdxRemediation>","description":"com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability.withAuthenticationResponseJson","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-authentication-capability/with-authentication-response-json.html","searchKeys":["withAuthenticationResponseJson","fun withAuthenticationResponseJson(remediation: IdxRemediation, authenticationResponseJson: String): Result<IdxRemediation>","com.okta.idx.kotlin.dto.IdxWebAuthnAuthenticationCapability.withAuthenticationResponseJson"]},{"name":"fun withRegistrationResponse(remediation: IdxRemediation, registrationResponseJson: String): Result<IdxRemediation>","description":"com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability.withRegistrationResponse","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-web-authn-registration-capability/with-registration-response.html","searchKeys":["withRegistrationResponse","fun withRegistrationResponse(remediation: IdxRemediation, registrationResponseJson: String): Result<IdxRemediation>","com.okta.idx.kotlin.dto.IdxWebAuthnRegistrationCapability.withRegistrationResponse"]},{"name":"inline fun <Capability : C> get(): Capability?","description":"com.okta.idx.kotlin.dto.IdxCapabilityCollection.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-capability-collection/get.html","searchKeys":["get","inline fun <Capability : C> get(): Capability?","com.okta.idx.kotlin.dto.IdxCapabilityCollection.get"]},{"name":"interface Capability","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Capability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-capability/index.html","searchKeys":["Capability","interface Capability","com.okta.idx.kotlin.dto.IdxAuthenticator.Capability"]},{"name":"interface Capability","description":"com.okta.idx.kotlin.dto.IdxRemediation.Capability","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-capability/index.html","searchKeys":["Capability","interface Capability","com.okta.idx.kotlin.dto.IdxRemediation.Capability"]},{"name":"object Companion","description":"com.okta.authfoundation.client.DeviceTokenProvider.Companion","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.client.DeviceTokenProvider.Companion"]},{"name":"object Companion","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.Companion","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.idx.kotlin.client.InteractionCodeFlow.Companion"]},{"name":"operator fun get(index: Int): IdxRemediation.Form.Field","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/get.html","searchKeys":["get","operator fun get(index: Int): IdxRemediation.Form.Field","com.okta.idx.kotlin.dto.IdxRemediation.Form.get"]},{"name":"operator fun get(kind: IdxAuthenticator.Kind): IdxAuthenticator?","description":"com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator-collection/get.html","searchKeys":["get","operator fun get(kind: IdxAuthenticator.Kind): IdxAuthenticator?","com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.get"]},{"name":"operator fun get(name: String): IdxRemediation.Form.Field?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/get.html","searchKeys":["get","operator fun get(name: String): IdxRemediation.Form.Field?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.get"]},{"name":"operator fun get(name: String): IdxRemediation.Form.Field?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/get.html","searchKeys":["get","operator fun get(name: String): IdxRemediation.Form.Field?","com.okta.idx.kotlin.dto.IdxRemediation.Form.get"]},{"name":"operator fun get(name: String): IdxRemediation.Form.Field?","description":"com.okta.idx.kotlin.dto.IdxRemediation.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/get.html","searchKeys":["get","operator fun get(name: String): IdxRemediation.Form.Field?","com.okta.idx.kotlin.dto.IdxRemediation.get"]},{"name":"operator fun get(name: String): IdxRemediation?","description":"com.okta.idx.kotlin.dto.IdxRemediationCollection.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation-collection/get.html","searchKeys":["get","operator fun get(name: String): IdxRemediation?","com.okta.idx.kotlin.dto.IdxRemediationCollection.get"]},{"name":"operator fun get(type: IdxRemediation.Type): IdxRemediation?","description":"com.okta.idx.kotlin.dto.IdxRemediationCollection.get","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation-collection/get.html","searchKeys":["get","operator fun get(type: IdxRemediation.Type): IdxRemediation?","com.okta.idx.kotlin.dto.IdxRemediationCollection.get"]},{"name":"sealed class IdxRedirectResult","description":"com.okta.idx.kotlin.client.IdxRedirectResult","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/index.html","searchKeys":["IdxRedirectResult","sealed class IdxRedirectResult","com.okta.idx.kotlin.client.IdxRedirectResult"]},{"name":"suspend fun evaluateRedirectUri(uri: Uri): IdxRedirectResult","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.evaluateRedirectUri","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/evaluate-redirect-uri.html","searchKeys":["evaluateRedirectUri","suspend fun evaluateRedirectUri(uri: Uri): IdxRedirectResult","com.okta.idx.kotlin.client.InteractionCodeFlow.evaluateRedirectUri"]},{"name":"suspend fun exchangeInteractionCodeForTokens(remediation: IdxRemediation): OAuth2ClientResult<Token>","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.exchangeInteractionCodeForTokens","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/exchange-interaction-code-for-tokens.html","searchKeys":["exchangeInteractionCodeForTokens","suspend fun exchangeInteractionCodeForTokens(remediation: IdxRemediation): OAuth2ClientResult<Token>","com.okta.idx.kotlin.client.InteractionCodeFlow.exchangeInteractionCodeForTokens"]},{"name":"suspend fun getDeviceToken(): String","description":"com.okta.authfoundation.client.DeviceTokenProvider.getDeviceToken","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/get-device-token.html","searchKeys":["getDeviceToken","suspend fun getDeviceToken(): String","com.okta.authfoundation.client.DeviceTokenProvider.getDeviceToken"]},{"name":"suspend fun poll(flow: InteractionCodeFlow): OAuth2ClientResult<IdxResponse>","description":"com.okta.idx.kotlin.dto.IdxPollAuthenticatorCapability.poll","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-poll-authenticator-capability/poll.html","searchKeys":["poll","suspend fun poll(flow: InteractionCodeFlow): OAuth2ClientResult<IdxResponse>","com.okta.idx.kotlin.dto.IdxPollAuthenticatorCapability.poll"]},{"name":"suspend fun poll(flow: InteractionCodeFlow): OAuth2ClientResult<IdxResponse>","description":"com.okta.idx.kotlin.dto.IdxPollRemediationCapability.poll","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-poll-remediation-capability/poll.html","searchKeys":["poll","suspend fun poll(flow: InteractionCodeFlow): OAuth2ClientResult<IdxResponse>","com.okta.idx.kotlin.dto.IdxPollRemediationCapability.poll"]},{"name":"suspend fun proceed(remediation: IdxRemediation): OAuth2ClientResult<IdxResponse>","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.proceed","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/proceed.html","searchKeys":["proceed","suspend fun proceed(remediation: IdxRemediation): OAuth2ClientResult<IdxResponse>","com.okta.idx.kotlin.client.InteractionCodeFlow.proceed"]},{"name":"suspend fun resume(): OAuth2ClientResult<IdxResponse>","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.resume","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/resume.html","searchKeys":["resume","suspend fun resume(): OAuth2ClientResult<IdxResponse>","com.okta.idx.kotlin.client.InteractionCodeFlow.resume"]},{"name":"suspend fun start(redirectUri: Uri, extraStartRequestParameters: Map<String, String> = emptyMap()): OAuth2ClientResult<Unit>","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.start","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/start.html","searchKeys":["start","suspend fun start(redirectUri: Uri, extraStartRequestParameters: Map<String, String> = emptyMap()): OAuth2ClientResult<Unit>","com.okta.idx.kotlin.client.InteractionCodeFlow.start"]},{"name":"val PREFERENCE_KEY: Preferences.Key<String>","description":"com.okta.authfoundation.client.DeviceTokenProvider.Companion.PREFERENCE_KEY","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/-companion/-p-r-e-f-e-r-e-n-c-e_-k-e-y.html","searchKeys":["PREFERENCE_KEY","val PREFERENCE_KEY: Preferences.Key<String>","com.okta.authfoundation.client.DeviceTokenProvider.Companion.PREFERENCE_KEY"]},{"name":"val age: IdxPasswordSettingsCapability.Age? = null","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.age","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/age.html","searchKeys":["age","val age: IdxPasswordSettingsCapability.Age? = null","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.age"]},{"name":"val app: IdxApplication?","description":"com.okta.idx.kotlin.dto.IdxResponse.app","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/app.html","searchKeys":["app","val app: IdxApplication?","com.okta.idx.kotlin.dto.IdxResponse.app"]},{"name":"val authenticator: IdxAuthenticator?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.authenticator","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/authenticator.html","searchKeys":["authenticator","val authenticator: IdxAuthenticator?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.authenticator"]},{"name":"val authenticators: IdxAuthenticatorCollection","description":"com.okta.idx.kotlin.dto.IdxRemediation.authenticators","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/authenticators.html","searchKeys":["authenticators","val authenticators: IdxAuthenticatorCollection","com.okta.idx.kotlin.dto.IdxRemediation.authenticators"]},{"name":"val authenticators: IdxAuthenticatorCollection","description":"com.okta.idx.kotlin.dto.IdxResponse.authenticators","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/authenticators.html","searchKeys":["authenticators","val authenticators: IdxAuthenticatorCollection","com.okta.idx.kotlin.dto.IdxResponse.authenticators"]},{"name":"val capabilities: IdxCapabilityCollection<IdxAuthenticator.Capability>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.capabilities","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/capabilities.html","searchKeys":["capabilities","val capabilities: IdxCapabilityCollection<IdxAuthenticator.Capability>","com.okta.idx.kotlin.dto.IdxAuthenticator.capabilities"]},{"name":"val capabilities: IdxCapabilityCollection<IdxRemediation.Capability>","description":"com.okta.idx.kotlin.dto.IdxRemediation.capabilities","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/capabilities.html","searchKeys":["capabilities","val capabilities: IdxCapabilityCollection<IdxRemediation.Capability>","com.okta.idx.kotlin.dto.IdxRemediation.capabilities"]},{"name":"val client: OAuth2Client","description":"com.okta.idx.kotlin.client.InteractionCodeFlow.client","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-interaction-code-flow/client.html","searchKeys":["client","val client: OAuth2Client","com.okta.idx.kotlin.client.InteractionCodeFlow.client"]},{"name":"val complexity: IdxPasswordSettingsCapability.Complexity","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.complexity","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/complexity.html","searchKeys":["complexity","val complexity: IdxPasswordSettingsCapability.Complexity","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.complexity"]},{"name":"val correctAnswer: String","description":"com.okta.idx.kotlin.dto.IdxNumberChallengeCapability.correctAnswer","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-number-challenge-capability/correct-answer.html","searchKeys":["correctAnswer","val correctAnswer: String","com.okta.idx.kotlin.dto.IdxNumberChallengeCapability.correctAnswer"]},{"name":"val current: IdxAuthenticator?","description":"com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.current","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator-collection/current.html","searchKeys":["current","val current: IdxAuthenticator?","com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.current"]},{"name":"val displayName: String?","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.displayName","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/display-name.html","searchKeys":["displayName","val displayName: String?","com.okta.idx.kotlin.dto.IdxAuthenticator.displayName"]},{"name":"val enrolled: List<IdxAuthenticator>","description":"com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.enrolled","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator-collection/enrolled.html","searchKeys":["enrolled","val enrolled: List<IdxAuthenticator>","com.okta.idx.kotlin.dto.IdxAuthenticatorCollection.enrolled"]},{"name":"val entries: EnumEntries<IdxAuthenticator.Kind>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-kind/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxAuthenticator.Kind>","com.okta.idx.kotlin.dto.IdxAuthenticator.Kind.entries"]},{"name":"val entries: EnumEntries<IdxAuthenticator.Method>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.Method.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-method/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxAuthenticator.Method>","com.okta.idx.kotlin.dto.IdxAuthenticator.Method.entries"]},{"name":"val entries: EnumEntries<IdxAuthenticator.State>","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.State.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/-state/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxAuthenticator.State>","com.okta.idx.kotlin.dto.IdxAuthenticator.State.entries"]},{"name":"val entries: EnumEntries<IdxMessage.Severity>","description":"com.okta.idx.kotlin.dto.IdxMessage.Severity.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/-severity/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxMessage.Severity>","com.okta.idx.kotlin.dto.IdxMessage.Severity.entries"]},{"name":"val entries: EnumEntries<IdxRemediation.Type>","description":"com.okta.idx.kotlin.dto.IdxRemediation.Type.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxRemediation.Type>","com.okta.idx.kotlin.dto.IdxRemediation.Type.entries"]},{"name":"val entries: EnumEntries<IdxResponse.Intent>","description":"com.okta.idx.kotlin.dto.IdxResponse.Intent.entries","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/-intent/entries.html","searchKeys":["entries","val entries: EnumEntries<IdxResponse.Intent>","com.okta.idx.kotlin.dto.IdxResponse.Intent.entries"]},{"name":"val errorMessage: String","description":"com.okta.idx.kotlin.client.IdxRedirectResult.Error.errorMessage","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-error/error-message.html","searchKeys":["errorMessage","val errorMessage: String","com.okta.idx.kotlin.client.IdxRedirectResult.Error.errorMessage"]},{"name":"val exception: Exception? = null","description":"com.okta.idx.kotlin.client.IdxRedirectResult.Error.exception","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-error/exception.html","searchKeys":["exception","val exception: Exception? = null","com.okta.idx.kotlin.client.IdxRedirectResult.Error.exception"]},{"name":"val excludeAttributes: List<String>","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.excludeAttributes","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/exclude-attributes.html","searchKeys":["excludeAttributes","val excludeAttributes: List<String>","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.excludeAttributes"]},{"name":"val excludeUsername: Boolean","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.excludeUsername","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/exclude-username.html","searchKeys":["excludeUsername","val excludeUsername: Boolean","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.excludeUsername"]},{"name":"val expiresAt: Date?","description":"com.okta.idx.kotlin.dto.IdxResponse.expiresAt","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/expires-at.html","searchKeys":["expiresAt","val expiresAt: Date?","com.okta.idx.kotlin.dto.IdxResponse.expiresAt"]},{"name":"val firstName: String?","description":"com.okta.idx.kotlin.dto.IdxUser.Profile.firstName","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/-profile/first-name.html","searchKeys":["firstName","val firstName: String?","com.okta.idx.kotlin.dto.IdxUser.Profile.firstName"]},{"name":"val form: IdxRemediation.Form","description":"com.okta.idx.kotlin.dto.IdxRemediation.form","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/form.html","searchKeys":["form","val form: IdxRemediation.Form","com.okta.idx.kotlin.dto.IdxRemediation.form"]},{"name":"val form: IdxRemediation.Form?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.form","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/form.html","searchKeys":["form","val form: IdxRemediation.Form?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.form"]},{"name":"val historyCount: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age.historyCount","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-age/history-count.html","searchKeys":["historyCount","val historyCount: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age.historyCount"]},{"name":"val id: String","description":"com.okta.idx.kotlin.dto.IdxApplication.id","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-application/id.html","searchKeys":["id","val id: String","com.okta.idx.kotlin.dto.IdxApplication.id"]},{"name":"val id: String","description":"com.okta.idx.kotlin.dto.IdxIdpCapability.id","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-idp-capability/id.html","searchKeys":["id","val id: String","com.okta.idx.kotlin.dto.IdxIdpCapability.id"]},{"name":"val id: String","description":"com.okta.idx.kotlin.dto.IdxUser.id","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/id.html","searchKeys":["id","val id: String","com.okta.idx.kotlin.dto.IdxUser.id"]},{"name":"val id: String?","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.id","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/id.html","searchKeys":["id","val id: String?","com.okta.idx.kotlin.dto.IdxAuthenticator.id"]},{"name":"val imageData: String","description":"com.okta.idx.kotlin.dto.IdxTotpCapability.imageData","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-totp-capability/image-data.html","searchKeys":["imageData","val imageData: String","com.okta.idx.kotlin.dto.IdxTotpCapability.imageData"]},{"name":"val instance: <Error class: unknown class>","description":"com.okta.authfoundation.client.DeviceTokenProvider.Companion.instance","location":"okta-idx-kotlin/com.okta.authfoundation.client/-device-token-provider/-companion/instance.html","searchKeys":["instance","val instance: <Error class: unknown class>","com.okta.authfoundation.client.DeviceTokenProvider.Companion.instance"]},{"name":"val intent: IdxResponse.Intent","description":"com.okta.idx.kotlin.dto.IdxResponse.intent","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/intent.html","searchKeys":["intent","val intent: IdxResponse.Intent","com.okta.idx.kotlin.dto.IdxResponse.intent"]},{"name":"val isLoginSuccessful: Boolean","description":"com.okta.idx.kotlin.dto.IdxResponse.isLoginSuccessful","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/is-login-successful.html","searchKeys":["isLoginSuccessful","val isLoginSuccessful: Boolean","com.okta.idx.kotlin.dto.IdxResponse.isLoginSuccessful"]},{"name":"val isMutable: Boolean","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isMutable","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/is-mutable.html","searchKeys":["isMutable","val isMutable: Boolean","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isMutable"]},{"name":"val isRequired: Boolean","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isRequired","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/is-required.html","searchKeys":["isRequired","val isRequired: Boolean","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isRequired"]},{"name":"val isSecret: Boolean","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isSecret","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/is-secret.html","searchKeys":["isSecret","val isSecret: Boolean","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.isSecret"]},{"name":"val key: String?","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.key","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/key.html","searchKeys":["key","val key: String?","com.okta.idx.kotlin.dto.IdxAuthenticator.key"]},{"name":"val label: String","description":"com.okta.idx.kotlin.dto.IdxApplication.label","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-application/label.html","searchKeys":["label","val label: String","com.okta.idx.kotlin.dto.IdxApplication.label"]},{"name":"val label: String?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.label","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/label.html","searchKeys":["label","val label: String?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.label"]},{"name":"val lastName: String?","description":"com.okta.idx.kotlin.dto.IdxUser.Profile.lastName","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/-profile/last-name.html","searchKeys":["lastName","val lastName: String?","com.okta.idx.kotlin.dto.IdxUser.Profile.lastName"]},{"name":"val locale: Locale?","description":"com.okta.idx.kotlin.dto.IdxUser.Profile.locale","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/-profile/locale.html","searchKeys":["locale","val locale: Locale?","com.okta.idx.kotlin.dto.IdxUser.Profile.locale"]},{"name":"val localizationKey: String?","description":"com.okta.idx.kotlin.dto.IdxMessage.localizationKey","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/localization-key.html","searchKeys":["localizationKey","val localizationKey: String?","com.okta.idx.kotlin.dto.IdxMessage.localizationKey"]},{"name":"val message: String","description":"com.okta.idx.kotlin.dto.IdxMessage.message","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/message.html","searchKeys":["message","val message: String","com.okta.idx.kotlin.dto.IdxMessage.message"]},{"name":"val messages: IdxMessageCollection","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.messages","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/messages.html","searchKeys":["messages","val messages: IdxMessageCollection","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.messages"]},{"name":"val messages: IdxMessageCollection","description":"com.okta.idx.kotlin.dto.IdxResponse.messages","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/messages.html","searchKeys":["messages","val messages: IdxMessageCollection","com.okta.idx.kotlin.dto.IdxResponse.messages"]},{"name":"val messages: List<IdxMessage>","description":"com.okta.idx.kotlin.dto.IdxMessageCollection.messages","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message-collection/messages.html","searchKeys":["messages","val messages: List<IdxMessage>","com.okta.idx.kotlin.dto.IdxMessageCollection.messages"]},{"name":"val methodNames: List<String>?","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.methodNames","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/method-names.html","searchKeys":["methodNames","val methodNames: List<String>?","com.okta.idx.kotlin.dto.IdxAuthenticator.methodNames"]},{"name":"val methods: List<IdxAuthenticator.Method>?","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.methods","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/methods.html","searchKeys":["methods","val methods: List<IdxAuthenticator.Method>?","com.okta.idx.kotlin.dto.IdxAuthenticator.methods"]},{"name":"val minAgeMinutes: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age.minAgeMinutes","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-age/min-age-minutes.html","searchKeys":["minAgeMinutes","val minAgeMinutes: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Age.minAgeMinutes"]},{"name":"val minLength: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minLength","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/min-length.html","searchKeys":["minLength","val minLength: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minLength"]},{"name":"val minLowerCase: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minLowerCase","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/min-lower-case.html","searchKeys":["minLowerCase","val minLowerCase: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minLowerCase"]},{"name":"val minNumber: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minNumber","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/min-number.html","searchKeys":["minNumber","val minNumber: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minNumber"]},{"name":"val minSymbol: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minSymbol","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/min-symbol.html","searchKeys":["minSymbol","val minSymbol: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minSymbol"]},{"name":"val minUpperCase: Int","description":"com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minUpperCase","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-password-settings-capability/-complexity/min-upper-case.html","searchKeys":["minUpperCase","val minUpperCase: Int","com.okta.idx.kotlin.dto.IdxPasswordSettingsCapability.Complexity.minUpperCase"]},{"name":"val name: String","description":"com.okta.idx.kotlin.dto.IdxApplication.name","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-application/name.html","searchKeys":["name","val name: String","com.okta.idx.kotlin.dto.IdxApplication.name"]},{"name":"val name: String","description":"com.okta.idx.kotlin.dto.IdxIdpCapability.name","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-idp-capability/name.html","searchKeys":["name","val name: String","com.okta.idx.kotlin.dto.IdxIdpCapability.name"]},{"name":"val name: String","description":"com.okta.idx.kotlin.dto.IdxRemediation.name","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/name.html","searchKeys":["name","val name: String","com.okta.idx.kotlin.dto.IdxRemediation.name"]},{"name":"val name: String?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.name","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/name.html","searchKeys":["name","val name: String?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.name"]},{"name":"val options: List<IdxRemediation.Form.Field>?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.options","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/options.html","searchKeys":["options","val options: List<IdxRemediation.Form.Field>?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.options"]},{"name":"val profile: IdxUser.Profile?","description":"com.okta.idx.kotlin.dto.IdxUser.profile","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/profile.html","searchKeys":["profile","val profile: IdxUser.Profile?","com.okta.idx.kotlin.dto.IdxUser.profile"]},{"name":"val profile: Map<String, String>","description":"com.okta.idx.kotlin.dto.IdxProfileCapability.profile","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-profile-capability/profile.html","searchKeys":["profile","val profile: Map<String, String>","com.okta.idx.kotlin.dto.IdxProfileCapability.profile"]},{"name":"val redirectUrl: HttpUrl","description":"com.okta.idx.kotlin.dto.IdxIdpCapability.redirectUrl","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-idp-capability/redirect-url.html","searchKeys":["redirectUrl","val redirectUrl: HttpUrl","com.okta.idx.kotlin.dto.IdxIdpCapability.redirectUrl"]},{"name":"val remediation: IdxRemediation","description":"com.okta.idx.kotlin.dto.IdxRecoverCapability.remediation","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-recover-capability/remediation.html","searchKeys":["remediation","val remediation: IdxRemediation","com.okta.idx.kotlin.dto.IdxRecoverCapability.remediation"]},{"name":"val remediation: IdxRemediation","description":"com.okta.idx.kotlin.dto.IdxResendCapability.remediation","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-resend-capability/remediation.html","searchKeys":["remediation","val remediation: IdxRemediation","com.okta.idx.kotlin.dto.IdxResendCapability.remediation"]},{"name":"val remediation: IdxRemediation","description":"com.okta.idx.kotlin.dto.IdxSendCapability.remediation","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-send-capability/remediation.html","searchKeys":["remediation","val remediation: IdxRemediation","com.okta.idx.kotlin.dto.IdxSendCapability.remediation"]},{"name":"val remediations: IdxRemediationCollection","description":"com.okta.idx.kotlin.dto.IdxResponse.remediations","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/remediations.html","searchKeys":["remediations","val remediations: IdxRemediationCollection","com.okta.idx.kotlin.dto.IdxResponse.remediations"]},{"name":"val response: IdxResponse","description":"com.okta.idx.kotlin.client.IdxRedirectResult.InteractionRequired.response","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-interaction-required/response.html","searchKeys":["response","val response: IdxResponse","com.okta.idx.kotlin.client.IdxRedirectResult.InteractionRequired.response"]},{"name":"val response: Token","description":"com.okta.idx.kotlin.client.IdxRedirectResult.Tokens.response","location":"okta-idx-kotlin/com.okta.idx.kotlin.client/-idx-redirect-result/-tokens/response.html","searchKeys":["response","val response: Token","com.okta.idx.kotlin.client.IdxRedirectResult.Tokens.response"]},{"name":"val sharedSecret: String?","description":"com.okta.idx.kotlin.dto.IdxTotpCapability.sharedSecret","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-totp-capability/shared-secret.html","searchKeys":["sharedSecret","val sharedSecret: String?","com.okta.idx.kotlin.dto.IdxTotpCapability.sharedSecret"]},{"name":"val state: IdxAuthenticator.State","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.state","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/state.html","searchKeys":["state","val state: IdxAuthenticator.State","com.okta.idx.kotlin.dto.IdxAuthenticator.state"]},{"name":"val timeZone: TimeZone?","description":"com.okta.idx.kotlin.dto.IdxUser.Profile.timeZone","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/-profile/time-zone.html","searchKeys":["timeZone","val timeZone: TimeZone?","com.okta.idx.kotlin.dto.IdxUser.Profile.timeZone"]},{"name":"val type: IdxAuthenticator.Kind","description":"com.okta.idx.kotlin.dto.IdxAuthenticator.type","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-authenticator/type.html","searchKeys":["type","val type: IdxAuthenticator.Kind","com.okta.idx.kotlin.dto.IdxAuthenticator.type"]},{"name":"val type: IdxMessage.Severity","description":"com.okta.idx.kotlin.dto.IdxMessage.type","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-message/type.html","searchKeys":["type","val type: IdxMessage.Severity","com.okta.idx.kotlin.dto.IdxMessage.type"]},{"name":"val type: IdxRemediation.Type","description":"com.okta.idx.kotlin.dto.IdxRemediation.type","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/type.html","searchKeys":["type","val type: IdxRemediation.Type","com.okta.idx.kotlin.dto.IdxRemediation.type"]},{"name":"val type: String","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.type","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/type.html","searchKeys":["type","val type: String","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.type"]},{"name":"val user: IdxUser?","description":"com.okta.idx.kotlin.dto.IdxResponse.user","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-response/user.html","searchKeys":["user","val user: IdxUser?","com.okta.idx.kotlin.dto.IdxResponse.user"]},{"name":"val username: String?","description":"com.okta.idx.kotlin.dto.IdxUser.username","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-user/username.html","searchKeys":["username","val username: String?","com.okta.idx.kotlin.dto.IdxUser.username"]},{"name":"val visibleFields: List<IdxRemediation.Form.Field>","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.visibleFields","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/visible-fields.html","searchKeys":["visibleFields","val visibleFields: List<IdxRemediation.Form.Field>","com.okta.idx.kotlin.dto.IdxRemediation.Form.visibleFields"]},{"name":"var selectedOption: IdxRemediation.Form.Field?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.selectedOption","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/selected-option.html","searchKeys":["selectedOption","var selectedOption: IdxRemediation.Form.Field?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.selectedOption"]},{"name":"var value: Any?","description":"com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.value","location":"okta-idx-kotlin/com.okta.idx.kotlin.dto/-idx-remediation/-form/-field/value.html","searchKeys":["value","var value: Any?","com.okta.idx.kotlin.dto.IdxRemediation.Form.Field.value"]},{"name":"class Error : LegacyTokenMigration.Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.Error","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-error/index.html","searchKeys":["Error","class Error : LegacyTokenMigration.Result","com.okta.legacytokenmigration.LegacyTokenMigration.Result.Error"]},{"name":"constructor(tokenId: String)","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated.PreviouslyMigrated","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-previously-migrated/-previously-migrated.html","searchKeys":["PreviouslyMigrated","constructor(tokenId: String)","com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated.PreviouslyMigrated"]},{"name":"constructor(tokenId: String)","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated.SuccessfullyMigrated","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-successfully-migrated/-successfully-migrated.html","searchKeys":["SuccessfullyMigrated","constructor(tokenId: String)","com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated.SuccessfullyMigrated"]},{"name":"data class PreviouslyMigrated(val tokenId: String) : LegacyTokenMigration.Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-previously-migrated/index.html","searchKeys":["PreviouslyMigrated","data class PreviouslyMigrated(val tokenId: String) : LegacyTokenMigration.Result","com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated"]},{"name":"data class SuccessfullyMigrated(val tokenId: String) : LegacyTokenMigration.Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-successfully-migrated/index.html","searchKeys":["SuccessfullyMigrated","data class SuccessfullyMigrated(val tokenId: String) : LegacyTokenMigration.Result","com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated"]},{"name":"object LegacyTokenMigration","description":"com.okta.legacytokenmigration.LegacyTokenMigration","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/index.html","searchKeys":["LegacyTokenMigration","object LegacyTokenMigration","com.okta.legacytokenmigration.LegacyTokenMigration"]},{"name":"object MissingLegacyToken : LegacyTokenMigration.Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.MissingLegacyToken","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-missing-legacy-token/index.html","searchKeys":["MissingLegacyToken","object MissingLegacyToken : LegacyTokenMigration.Result","com.okta.legacytokenmigration.LegacyTokenMigration.Result.MissingLegacyToken"]},{"name":"sealed class Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/index.html","searchKeys":["Result","sealed class Result","com.okta.legacytokenmigration.LegacyTokenMigration.Result"]},{"name":"suspend fun migrate(context: Context, sessionClient: SessionClient): LegacyTokenMigration.Result","description":"com.okta.legacytokenmigration.LegacyTokenMigration.migrate","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/migrate.html","searchKeys":["migrate","suspend fun migrate(context: Context, sessionClient: SessionClient): LegacyTokenMigration.Result","com.okta.legacytokenmigration.LegacyTokenMigration.migrate"]},{"name":"val exception: Exception","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.Error.exception","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-error/exception.html","searchKeys":["exception","val exception: Exception","com.okta.legacytokenmigration.LegacyTokenMigration.Result.Error.exception"]},{"name":"val tokenId: String","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated.tokenId","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-previously-migrated/token-id.html","searchKeys":["tokenId","val tokenId: String","com.okta.legacytokenmigration.LegacyTokenMigration.Result.PreviouslyMigrated.tokenId"]},{"name":"val tokenId: String","description":"com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated.tokenId","location":"legacy-token-migration/com.okta.legacytokenmigration/-legacy-token-migration/-result/-successfully-migrated/token-id.html","searchKeys":["tokenId","val tokenId: String","com.okta.legacytokenmigration.LegacyTokenMigration.Result.SuccessfullyMigrated.tokenId"]},{"name":"class AuthorizationCodeFlow(client: OAuth2Client)","description":"com.okta.oauth2.AuthorizationCodeFlow","location":"oauth2/com.okta.oauth2/-authorization-code-flow/index.html","searchKeys":["AuthorizationCodeFlow","class AuthorizationCodeFlow(client: OAuth2Client)","com.okta.oauth2.AuthorizationCodeFlow"]},{"name":"class Context","description":"com.okta.oauth2.AuthorizationCodeFlow.Context","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-context/index.html","searchKeys":["Context","class Context","com.okta.oauth2.AuthorizationCodeFlow.Context"]},{"name":"class Context","description":"com.okta.oauth2.DeviceAuthorizationFlow.Context","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-context/index.html","searchKeys":["Context","class Context","com.okta.oauth2.DeviceAuthorizationFlow.Context"]},{"name":"class Context","description":"com.okta.oauth2.RedirectEndSessionFlow.Context","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-context/index.html","searchKeys":["Context","class Context","com.okta.oauth2.RedirectEndSessionFlow.Context"]},{"name":"class DeviceAuthorizationFlow(client: OAuth2Client)","description":"com.okta.oauth2.DeviceAuthorizationFlow","location":"oauth2/com.okta.oauth2/-device-authorization-flow/index.html","searchKeys":["DeviceAuthorizationFlow","class DeviceAuthorizationFlow(client: OAuth2Client)","com.okta.oauth2.DeviceAuthorizationFlow"]},{"name":"class MissingResultCodeException : Exception","description":"com.okta.oauth2.AuthorizationCodeFlow.MissingResultCodeException","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-missing-result-code-exception/index.html","searchKeys":["MissingResultCodeException","class MissingResultCodeException : Exception","com.okta.oauth2.AuthorizationCodeFlow.MissingResultCodeException"]},{"name":"class RedirectEndSessionFlow(client: OAuth2Client)","description":"com.okta.oauth2.RedirectEndSessionFlow","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/index.html","searchKeys":["RedirectEndSessionFlow","class RedirectEndSessionFlow(client: OAuth2Client)","com.okta.oauth2.RedirectEndSessionFlow"]},{"name":"class RedirectSchemeMismatchException : Exception","description":"com.okta.oauth2.AuthorizationCodeFlow.RedirectSchemeMismatchException","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-redirect-scheme-mismatch-exception/index.html","searchKeys":["RedirectSchemeMismatchException","class RedirectSchemeMismatchException : Exception","com.okta.oauth2.AuthorizationCodeFlow.RedirectSchemeMismatchException"]},{"name":"class RedirectSchemeMismatchException : Exception","description":"com.okta.oauth2.RedirectEndSessionFlow.RedirectSchemeMismatchException","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-redirect-scheme-mismatch-exception/index.html","searchKeys":["RedirectSchemeMismatchException","class RedirectSchemeMismatchException : Exception","com.okta.oauth2.RedirectEndSessionFlow.RedirectSchemeMismatchException"]},{"name":"class ResourceOwnerFlow(client: OAuth2Client)","description":"com.okta.oauth2.ResourceOwnerFlow","location":"oauth2/com.okta.oauth2/-resource-owner-flow/index.html","searchKeys":["ResourceOwnerFlow","class ResourceOwnerFlow(client: OAuth2Client)","com.okta.oauth2.ResourceOwnerFlow"]},{"name":"class ResumeException : Exception","description":"com.okta.oauth2.AuthorizationCodeFlow.ResumeException","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-resume-exception/index.html","searchKeys":["ResumeException","class ResumeException : Exception","com.okta.oauth2.AuthorizationCodeFlow.ResumeException"]},{"name":"class ResumeException : Exception","description":"com.okta.oauth2.RedirectEndSessionFlow.ResumeException","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-resume-exception/index.html","searchKeys":["ResumeException","class ResumeException : Exception","com.okta.oauth2.RedirectEndSessionFlow.ResumeException"]},{"name":"class SessionTokenFlow(client: OAuth2Client)","description":"com.okta.oauth2.SessionTokenFlow","location":"oauth2/com.okta.oauth2/-session-token-flow/index.html","searchKeys":["SessionTokenFlow","class SessionTokenFlow(client: OAuth2Client)","com.okta.oauth2.SessionTokenFlow"]},{"name":"class TimeoutException : Exception","description":"com.okta.oauth2.DeviceAuthorizationFlow.TimeoutException","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-timeout-exception/index.html","searchKeys":["TimeoutException","class TimeoutException : Exception","com.okta.oauth2.DeviceAuthorizationFlow.TimeoutException"]},{"name":"class TokenExchangeFlow(client: OAuth2Client)","description":"com.okta.oauth2.TokenExchangeFlow","location":"oauth2/com.okta.oauth2/-token-exchange-flow/index.html","searchKeys":["TokenExchangeFlow","class TokenExchangeFlow(client: OAuth2Client)","com.okta.oauth2.TokenExchangeFlow"]},{"name":"constructor()","description":"com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-authorization-code-flow.html","searchKeys":["AuthorizationCodeFlow","constructor()","com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow"]},{"name":"constructor()","description":"com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-device-authorization-flow.html","searchKeys":["DeviceAuthorizationFlow","constructor()","com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow"]},{"name":"constructor()","description":"com.okta.oauth2.DeviceAuthorizationFlow.TimeoutException.TimeoutException","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-timeout-exception/-timeout-exception.html","searchKeys":["TimeoutException","constructor()","com.okta.oauth2.DeviceAuthorizationFlow.TimeoutException.TimeoutException"]},{"name":"constructor()","description":"com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-redirect-end-session-flow.html","searchKeys":["RedirectEndSessionFlow","constructor()","com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow"]},{"name":"constructor()","description":"com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow","location":"oauth2/com.okta.oauth2/-resource-owner-flow/-resource-owner-flow.html","searchKeys":["ResourceOwnerFlow","constructor()","com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow"]},{"name":"constructor()","description":"com.okta.oauth2.SessionTokenFlow.SessionTokenFlow","location":"oauth2/com.okta.oauth2/-session-token-flow/-session-token-flow.html","searchKeys":["SessionTokenFlow","constructor()","com.okta.oauth2.SessionTokenFlow.SessionTokenFlow"]},{"name":"constructor()","description":"com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow","location":"oauth2/com.okta.oauth2/-token-exchange-flow/-token-exchange-flow.html","searchKeys":["TokenExchangeFlow","constructor()","com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-authorization-code-flow.html","searchKeys":["AuthorizationCodeFlow","constructor(client: OAuth2Client)","com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-device-authorization-flow.html","searchKeys":["DeviceAuthorizationFlow","constructor(client: OAuth2Client)","com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-redirect-end-session-flow.html","searchKeys":["RedirectEndSessionFlow","constructor(client: OAuth2Client)","com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow","location":"oauth2/com.okta.oauth2/-resource-owner-flow/-resource-owner-flow.html","searchKeys":["ResourceOwnerFlow","constructor(client: OAuth2Client)","com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.SessionTokenFlow.SessionTokenFlow","location":"oauth2/com.okta.oauth2/-session-token-flow/-session-token-flow.html","searchKeys":["SessionTokenFlow","constructor(client: OAuth2Client)","com.okta.oauth2.SessionTokenFlow.SessionTokenFlow"]},{"name":"constructor(client: OAuth2Client)","description":"com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow","location":"oauth2/com.okta.oauth2/-token-exchange-flow/-token-exchange-flow.html","searchKeys":["TokenExchangeFlow","constructor(client: OAuth2Client)","com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-authorization-code-flow.html","searchKeys":["AuthorizationCodeFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.AuthorizationCodeFlow.AuthorizationCodeFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-device-authorization-flow.html","searchKeys":["DeviceAuthorizationFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.DeviceAuthorizationFlow.DeviceAuthorizationFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-redirect-end-session-flow.html","searchKeys":["RedirectEndSessionFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.RedirectEndSessionFlow.RedirectEndSessionFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow","location":"oauth2/com.okta.oauth2/-resource-owner-flow/-resource-owner-flow.html","searchKeys":["ResourceOwnerFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.ResourceOwnerFlow.ResourceOwnerFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.SessionTokenFlow.SessionTokenFlow","location":"oauth2/com.okta.oauth2/-session-token-flow/-session-token-flow.html","searchKeys":["SessionTokenFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.SessionTokenFlow.SessionTokenFlow"]},{"name":"constructor(oidcConfiguration: OidcConfiguration)","description":"com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow","location":"oauth2/com.okta.oauth2/-token-exchange-flow/-token-exchange-flow.html","searchKeys":["TokenExchangeFlow","constructor(oidcConfiguration: OidcConfiguration)","com.okta.oauth2.TokenExchangeFlow.TokenExchangeFlow"]},{"name":"fun resume(uri: Uri, flowContext: RedirectEndSessionFlow.Context): OAuth2ClientResult<Unit>","description":"com.okta.oauth2.RedirectEndSessionFlow.resume","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/resume.html","searchKeys":["resume","fun resume(uri: Uri, flowContext: RedirectEndSessionFlow.Context): OAuth2ClientResult<Unit>","com.okta.oauth2.RedirectEndSessionFlow.resume"]},{"name":"object Companion","description":"com.okta.oauth2.AuthorizationCodeFlow.Companion","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.oauth2.AuthorizationCodeFlow.Companion"]},{"name":"object Companion","description":"com.okta.oauth2.DeviceAuthorizationFlow.Companion","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.oauth2.DeviceAuthorizationFlow.Companion"]},{"name":"object Companion","description":"com.okta.oauth2.RedirectEndSessionFlow.Companion","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.oauth2.RedirectEndSessionFlow.Companion"]},{"name":"object Companion","description":"com.okta.oauth2.ResourceOwnerFlow.Companion","location":"oauth2/com.okta.oauth2/-resource-owner-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.oauth2.ResourceOwnerFlow.Companion"]},{"name":"object Companion","description":"com.okta.oauth2.TokenExchangeFlow.Companion","location":"oauth2/com.okta.oauth2/-token-exchange-flow/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.oauth2.TokenExchangeFlow.Companion"]},{"name":"suspend fun resume(flowContext: DeviceAuthorizationFlow.Context): OAuth2ClientResult<Token>","description":"com.okta.oauth2.DeviceAuthorizationFlow.resume","location":"oauth2/com.okta.oauth2/-device-authorization-flow/resume.html","searchKeys":["resume","suspend fun resume(flowContext: DeviceAuthorizationFlow.Context): OAuth2ClientResult<Token>","com.okta.oauth2.DeviceAuthorizationFlow.resume"]},{"name":"suspend fun resume(uri: Uri, flowContext: AuthorizationCodeFlow.Context): OAuth2ClientResult<Token>","description":"com.okta.oauth2.AuthorizationCodeFlow.resume","location":"oauth2/com.okta.oauth2/-authorization-code-flow/resume.html","searchKeys":["resume","suspend fun resume(uri: Uri, flowContext: AuthorizationCodeFlow.Context): OAuth2ClientResult<Token>","com.okta.oauth2.AuthorizationCodeFlow.resume"]},{"name":"suspend fun start(extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<DeviceAuthorizationFlow.Context>","description":"com.okta.oauth2.DeviceAuthorizationFlow.start","location":"oauth2/com.okta.oauth2/-device-authorization-flow/start.html","searchKeys":["start","suspend fun start(extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<DeviceAuthorizationFlow.Context>","com.okta.oauth2.DeviceAuthorizationFlow.start"]},{"name":"suspend fun start(idToken: String, deviceSecret: String, audience: String = \"api://default\", scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","description":"com.okta.oauth2.TokenExchangeFlow.start","location":"oauth2/com.okta.oauth2/-token-exchange-flow/start.html","searchKeys":["start","suspend fun start(idToken: String, deviceSecret: String, audience: String = \"api://default\", scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","com.okta.oauth2.TokenExchangeFlow.start"]},{"name":"suspend fun start(redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope, state: String = UUID.randomUUID().toString()): OAuth2ClientResult<AuthorizationCodeFlow.Context>","description":"com.okta.oauth2.AuthorizationCodeFlow.start","location":"oauth2/com.okta.oauth2/-authorization-code-flow/start.html","searchKeys":["start","suspend fun start(redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope, state: String = UUID.randomUUID().toString()): OAuth2ClientResult<AuthorizationCodeFlow.Context>","com.okta.oauth2.AuthorizationCodeFlow.start"]},{"name":"suspend fun start(redirectUrl: String, idToken: String): OAuth2ClientResult<RedirectEndSessionFlow.Context>","description":"com.okta.oauth2.RedirectEndSessionFlow.start","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/start.html","searchKeys":["start","suspend fun start(redirectUrl: String, idToken: String): OAuth2ClientResult<RedirectEndSessionFlow.Context>","com.okta.oauth2.RedirectEndSessionFlow.start"]},{"name":"suspend fun start(sessionToken: String, redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","description":"com.okta.oauth2.SessionTokenFlow.start","location":"oauth2/com.okta.oauth2/-session-token-flow/start.html","searchKeys":["start","suspend fun start(sessionToken: String, redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","com.okta.oauth2.SessionTokenFlow.start"]},{"name":"suspend fun start(username: String, password: String, scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","description":"com.okta.oauth2.ResourceOwnerFlow.start","location":"oauth2/com.okta.oauth2/-resource-owner-flow/start.html","searchKeys":["start","suspend fun start(username: String, password: String, scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","com.okta.oauth2.ResourceOwnerFlow.start"]},{"name":"val errorId: String","description":"com.okta.oauth2.AuthorizationCodeFlow.ResumeException.errorId","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-resume-exception/error-id.html","searchKeys":["errorId","val errorId: String","com.okta.oauth2.AuthorizationCodeFlow.ResumeException.errorId"]},{"name":"val expiresIn: Int","description":"com.okta.oauth2.DeviceAuthorizationFlow.Context.expiresIn","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-context/expires-in.html","searchKeys":["expiresIn","val expiresIn: Int","com.okta.oauth2.DeviceAuthorizationFlow.Context.expiresIn"]},{"name":"val url: HttpUrl","description":"com.okta.oauth2.AuthorizationCodeFlow.Context.url","location":"oauth2/com.okta.oauth2/-authorization-code-flow/-context/url.html","searchKeys":["url","val url: HttpUrl","com.okta.oauth2.AuthorizationCodeFlow.Context.url"]},{"name":"val url: HttpUrl","description":"com.okta.oauth2.RedirectEndSessionFlow.Context.url","location":"oauth2/com.okta.oauth2/-redirect-end-session-flow/-context/url.html","searchKeys":["url","val url: HttpUrl","com.okta.oauth2.RedirectEndSessionFlow.Context.url"]},{"name":"val userCode: String","description":"com.okta.oauth2.DeviceAuthorizationFlow.Context.userCode","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-context/user-code.html","searchKeys":["userCode","val userCode: String","com.okta.oauth2.DeviceAuthorizationFlow.Context.userCode"]},{"name":"val verificationUri: String","description":"com.okta.oauth2.DeviceAuthorizationFlow.Context.verificationUri","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-context/verification-uri.html","searchKeys":["verificationUri","val verificationUri: String","com.okta.oauth2.DeviceAuthorizationFlow.Context.verificationUri"]},{"name":"val verificationUriComplete: String?","description":"com.okta.oauth2.DeviceAuthorizationFlow.Context.verificationUriComplete","location":"oauth2/com.okta.oauth2/-device-authorization-flow/-context/verification-uri-complete.html","searchKeys":["verificationUriComplete","val verificationUriComplete: String?","com.okta.oauth2.DeviceAuthorizationFlow.Context.verificationUriComplete"]},{"name":"ACCESS_TOKEN","description":"com.okta.authfoundation.credential.RevokeTokenType.ACCESS_TOKEN","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/-a-c-c-e-s-s_-t-o-k-e-n/index.html","searchKeys":["ACCESS_TOKEN","ACCESS_TOKEN","com.okta.authfoundation.credential.RevokeTokenType.ACCESS_TOKEN"]},{"name":"ACCESS_TOKEN","description":"com.okta.authfoundation.credential.TokenType.ACCESS_TOKEN","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/-a-c-c-e-s-s_-t-o-k-e-n/index.html","searchKeys":["ACCESS_TOKEN","ACCESS_TOKEN","com.okta.authfoundation.credential.TokenType.ACCESS_TOKEN"]},{"name":"DEVICE_SECRET","description":"com.okta.authfoundation.credential.RevokeTokenType.DEVICE_SECRET","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/-d-e-v-i-c-e_-s-e-c-r-e-t/index.html","searchKeys":["DEVICE_SECRET","DEVICE_SECRET","com.okta.authfoundation.credential.RevokeTokenType.DEVICE_SECRET"]},{"name":"DEVICE_SECRET","description":"com.okta.authfoundation.credential.TokenType.DEVICE_SECRET","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/-d-e-v-i-c-e_-s-e-c-r-e-t/index.html","searchKeys":["DEVICE_SECRET","DEVICE_SECRET","com.okta.authfoundation.credential.TokenType.DEVICE_SECRET"]},{"name":"ID_TOKEN","description":"com.okta.authfoundation.credential.TokenType.ID_TOKEN","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/-i-d_-t-o-k-e-n/index.html","searchKeys":["ID_TOKEN","ID_TOKEN","com.okta.authfoundation.credential.TokenType.ID_TOKEN"]},{"name":"REFRESH_TOKEN","description":"com.okta.authfoundation.credential.RevokeTokenType.REFRESH_TOKEN","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/-r-e-f-r-e-s-h_-t-o-k-e-n/index.html","searchKeys":["REFRESH_TOKEN","REFRESH_TOKEN","com.okta.authfoundation.credential.RevokeTokenType.REFRESH_TOKEN"]},{"name":"REFRESH_TOKEN","description":"com.okta.authfoundation.credential.TokenType.REFRESH_TOKEN","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/-r-e-f-r-e-s-h_-t-o-k-e-n/index.html","searchKeys":["REFRESH_TOKEN","REFRESH_TOKEN","com.okta.authfoundation.credential.TokenType.REFRESH_TOKEN"]},{"name":"abstract class TokenDatabase : RoomDatabase","description":"com.okta.authfoundation.credential.storage.TokenDatabase","location":"auth-foundation/com.okta.authfoundation.credential.storage/-token-database/index.html","searchKeys":["TokenDatabase","abstract class TokenDatabase : RoomDatabase","com.okta.authfoundation.credential.storage.TokenDatabase"]},{"name":"abstract fun <T> deserializeClaim(claim: String, deserializationStrategy: DeserializationStrategy<T>): T?","description":"com.okta.authfoundation.claims.ClaimsProvider.deserializeClaim","location":"auth-foundation/com.okta.authfoundation.claims/-claims-provider/deserialize-claim.html","searchKeys":["deserializeClaim","abstract fun <T> deserializeClaim(claim: String, deserializationStrategy: DeserializationStrategy<T>): T?","com.okta.authfoundation.claims.ClaimsProvider.deserializeClaim"]},{"name":"abstract fun <T> deserializeClaims(deserializationStrategy: DeserializationStrategy<T>): T","description":"com.okta.authfoundation.claims.ClaimsProvider.deserializeClaims","location":"auth-foundation/com.okta.authfoundation.claims/-claims-provider/deserialize-claims.html","searchKeys":["deserializeClaims","abstract fun <T> deserializeClaims(deserializationStrategy: DeserializationStrategy<T>): T","com.okta.authfoundation.claims.ClaimsProvider.deserializeClaims"]},{"name":"abstract fun availableClaims(): Set<String>","description":"com.okta.authfoundation.claims.ClaimsProvider.availableClaims","location":"auth-foundation/com.okta.authfoundation.claims/-claims-provider/available-claims.html","searchKeys":["availableClaims","abstract fun availableClaims(): Set<String>","com.okta.authfoundation.claims.ClaimsProvider.availableClaims"]},{"name":"abstract fun currentTimeEpochSecond(): Long","description":"com.okta.authfoundation.client.OidcClock.currentTimeEpochSecond","location":"auth-foundation/com.okta.authfoundation.client/-oidc-clock/current-time-epoch-second.html","searchKeys":["currentTimeEpochSecond","abstract fun currentTimeEpochSecond(): Long","com.okta.authfoundation.client.OidcClock.currentTimeEpochSecond"]},{"name":"abstract fun generateKey(security: Credential.Security)","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.generateKey","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/generate-key.html","searchKeys":["generateKey","abstract fun generateKey(security: Credential.Security)","com.okta.authfoundation.credential.TokenEncryptionHandler.generateKey"]},{"name":"abstract fun get(key: String): String?","description":"com.okta.authfoundation.client.Cache.get","location":"auth-foundation/com.okta.authfoundation.client/-cache/get.html","searchKeys":["get","abstract fun get(key: String): String?","com.okta.authfoundation.client.Cache.get"]},{"name":"abstract fun onEvent(event: Event)","description":"com.okta.authfoundation.events.EventHandler.onEvent","location":"auth-foundation/com.okta.authfoundation.events/-event-handler/on-event.html","searchKeys":["onEvent","abstract fun onEvent(event: Event)","com.okta.authfoundation.events.EventHandler.onEvent"]},{"name":"abstract fun set(key: String, value: String)","description":"com.okta.authfoundation.client.Cache.set","location":"auth-foundation/com.okta.authfoundation.client/-cache/set.html","searchKeys":["set","abstract fun set(key: String, value: String)","com.okta.authfoundation.client.Cache.set"]},{"name":"abstract suspend fun add(id: String)","description":"com.okta.authfoundation.credential.LegacyTokenStorage.add","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/add.html","searchKeys":["add","abstract suspend fun add(id: String)","com.okta.authfoundation.credential.LegacyTokenStorage.add"]},{"name":"abstract suspend fun add(token: Token, metadata: Token.Metadata, security: Credential.Security = Credential.Security.standard)","description":"com.okta.authfoundation.credential.TokenStorage.add","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/add.html","searchKeys":["add","abstract suspend fun add(token: Token, metadata: Token.Metadata, security: Credential.Security = Credential.Security.standard)","com.okta.authfoundation.credential.TokenStorage.add"]},{"name":"abstract suspend fun allIds(): List<String>","description":"com.okta.authfoundation.credential.TokenStorage.allIds","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/all-ids.html","searchKeys":["allIds","abstract suspend fun allIds(): List<String>","com.okta.authfoundation.credential.TokenStorage.allIds"]},{"name":"abstract suspend fun decrypt(encryptedToken: ByteArray, encryptionExtras: Map<String, String>, security: Credential.Security, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Token","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.decrypt","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/decrypt.html","searchKeys":["decrypt","abstract suspend fun decrypt(encryptedToken: ByteArray, encryptionExtras: Map<String, String>, security: Credential.Security, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Token","com.okta.authfoundation.credential.TokenEncryptionHandler.decrypt"]},{"name":"abstract suspend fun encrypt(token: Token, security: Credential.Security): TokenEncryptionHandler.EncryptionResult","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.encrypt","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/encrypt.html","searchKeys":["encrypt","abstract suspend fun encrypt(token: Token, security: Credential.Security): TokenEncryptionHandler.EncryptionResult","com.okta.authfoundation.credential.TokenEncryptionHandler.encrypt"]},{"name":"abstract suspend fun entries(): List<LegacyTokenStorage.Entry>","description":"com.okta.authfoundation.credential.LegacyTokenStorage.entries","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/entries.html","searchKeys":["entries","abstract suspend fun entries(): List<LegacyTokenStorage.Entry>","com.okta.authfoundation.credential.LegacyTokenStorage.entries"]},{"name":"abstract suspend fun getToken(id: String, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Token","description":"com.okta.authfoundation.credential.TokenStorage.getToken","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/get-token.html","searchKeys":["getToken","abstract suspend fun getToken(id: String, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Token","com.okta.authfoundation.credential.TokenStorage.getToken"]},{"name":"abstract suspend fun metadata(id: String): Token.Metadata?","description":"com.okta.authfoundation.credential.TokenStorage.metadata","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/metadata.html","searchKeys":["metadata","abstract suspend fun metadata(id: String): Token.Metadata?","com.okta.authfoundation.credential.TokenStorage.metadata"]},{"name":"abstract suspend fun remove(id: String)","description":"com.okta.authfoundation.credential.LegacyTokenStorage.remove","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/remove.html","searchKeys":["remove","abstract suspend fun remove(id: String)","com.okta.authfoundation.credential.LegacyTokenStorage.remove"]},{"name":"abstract suspend fun remove(id: String)","description":"com.okta.authfoundation.credential.TokenStorage.remove","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/remove.html","searchKeys":["remove","abstract suspend fun remove(id: String)","com.okta.authfoundation.credential.TokenStorage.remove"]},{"name":"abstract suspend fun replace(token: Token)","description":"com.okta.authfoundation.credential.TokenStorage.replace","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/replace.html","searchKeys":["replace","abstract suspend fun replace(token: Token)","com.okta.authfoundation.credential.TokenStorage.replace"]},{"name":"abstract suspend fun replace(updatedEntry: LegacyTokenStorage.Entry)","description":"com.okta.authfoundation.credential.LegacyTokenStorage.replace","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/replace.html","searchKeys":["replace","abstract suspend fun replace(updatedEntry: LegacyTokenStorage.Entry)","com.okta.authfoundation.credential.LegacyTokenStorage.replace"]},{"name":"abstract suspend fun setMetadata(metadata: Token.Metadata)","description":"com.okta.authfoundation.credential.TokenStorage.setMetadata","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/set-metadata.html","searchKeys":["setMetadata","abstract suspend fun setMetadata(metadata: Token.Metadata)","com.okta.authfoundation.credential.TokenStorage.setMetadata"]},{"name":"abstract suspend fun validate(client: OAuth2Client, accessToken: String, idToken: Jwt)","description":"com.okta.authfoundation.client.AccessTokenValidator.validate","location":"auth-foundation/com.okta.authfoundation.client/-access-token-validator/validate.html","searchKeys":["validate","abstract suspend fun validate(client: OAuth2Client, accessToken: String, idToken: Jwt)","com.okta.authfoundation.client.AccessTokenValidator.validate"]},{"name":"abstract suspend fun validate(client: OAuth2Client, deviceSecret: String, idToken: Jwt)","description":"com.okta.authfoundation.client.DeviceSecretValidator.validate","location":"auth-foundation/com.okta.authfoundation.client/-device-secret-validator/validate.html","searchKeys":["validate","abstract suspend fun validate(client: OAuth2Client, deviceSecret: String, idToken: Jwt)","com.okta.authfoundation.client.DeviceSecretValidator.validate"]},{"name":"abstract suspend fun validate(client: OAuth2Client, idToken: Jwt, parameters: IdTokenValidator.Parameters)","description":"com.okta.authfoundation.client.IdTokenValidator.validate","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/validate.html","searchKeys":["validate","abstract suspend fun validate(client: OAuth2Client, idToken: Jwt, parameters: IdTokenValidator.Parameters)","com.okta.authfoundation.client.IdTokenValidator.validate"]},{"name":"abstract val keyAlias: String","description":"com.okta.authfoundation.credential.Credential.Security.keyAlias","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/key-alias.html","searchKeys":["keyAlias","abstract val keyAlias: String","com.okta.authfoundation.credential.Credential.Security.keyAlias"]},{"name":"annotation class InternalAuthFoundationApi","description":"com.okta.authfoundation.InternalAuthFoundationApi","location":"auth-foundation/com.okta.authfoundation/-internal-auth-foundation-api/index.html","searchKeys":["InternalAuthFoundationApi","annotation class InternalAuthFoundationApi","com.okta.authfoundation.InternalAuthFoundationApi"]},{"name":"class Active : OidcIntrospectInfo, ClaimsProvider","description":"com.okta.authfoundation.client.dto.OidcIntrospectInfo.Active","location":"auth-foundation/com.okta.authfoundation.client.dto/-oidc-introspect-info/-active/index.html","searchKeys":["Active","class Active : OidcIntrospectInfo, ClaimsProvider","com.okta.authfoundation.client.dto.OidcIntrospectInfo.Active"]},{"name":"class AesEncryptionHandler(encryptionKeySpec: KeyGenParameterSpec = defaultEncryptionKeySpec)","description":"com.okta.authfoundation.util.AesEncryptionHandler","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/index.html","searchKeys":["AesEncryptionHandler","class AesEncryptionHandler(encryptionKeySpec: KeyGenParameterSpec = defaultEncryptionKeySpec)","com.okta.authfoundation.util.AesEncryptionHandler"]},{"name":"class BiometricAuthenticationException(message: String, val biometricExceptionDetails: BiometricExceptionDetails) : GeneralSecurityException","description":"com.okta.authfoundation.BiometricAuthenticationException","location":"auth-foundation/com.okta.authfoundation/-biometric-authentication-exception/index.html","searchKeys":["BiometricAuthenticationException","class BiometricAuthenticationException(message: String, val biometricExceptionDetails: BiometricExceptionDetails) : GeneralSecurityException","com.okta.authfoundation.BiometricAuthenticationException"]},{"name":"class BiometricDecryptionActivity : AppCompatActivity","description":"com.okta.authfoundation.BiometricDecryptionActivity","location":"auth-foundation/com.okta.authfoundation/-biometric-decryption-activity/index.html","searchKeys":["BiometricDecryptionActivity","class BiometricDecryptionActivity : AppCompatActivity","com.okta.authfoundation.BiometricDecryptionActivity"]},{"name":"class BiometricInvocationException(val message: String?) : IllegalStateException","description":"com.okta.authfoundation.credential.BiometricInvocationException","location":"auth-foundation/com.okta.authfoundation.credential/-biometric-invocation-exception/index.html","searchKeys":["BiometricInvocationException","class BiometricInvocationException(val message: String?) : IllegalStateException","com.okta.authfoundation.credential.BiometricInvocationException"]},{"name":"class BiometricKeyInvalidatedEvent : Event","description":"com.okta.authfoundation.credential.events.BiometricKeyInvalidatedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-biometric-key-invalidated-event/index.html","searchKeys":["BiometricKeyInvalidatedEvent","class BiometricKeyInvalidatedEvent : Event","com.okta.authfoundation.credential.events.BiometricKeyInvalidatedEvent"]},{"name":"class BiometricTokenInvalidatedEvent : Event","description":"com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-biometric-token-invalidated-event/index.html","searchKeys":["BiometricTokenInvalidatedEvent","class BiometricTokenInvalidatedEvent : Event","com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent"]},{"name":"class CoalescingOrchestrator<T : Any>(factory: suspend () -> T, keepDataInMemory: (T) -> Boolean, awaitListener: () -> Unit? = null)","description":"com.okta.authfoundation.util.CoalescingOrchestrator","location":"auth-foundation/com.okta.authfoundation.util/-coalescing-orchestrator/index.html","searchKeys":["CoalescingOrchestrator","class CoalescingOrchestrator<T : Any>(factory: suspend () -> T, keepDataInMemory: (T) -> Boolean, awaitListener: () -> Unit? = null)","com.okta.authfoundation.util.CoalescingOrchestrator"]},{"name":"class Credential","description":"com.okta.authfoundation.credential.Credential","location":"auth-foundation/com.okta.authfoundation.credential/-credential/index.html","searchKeys":["Credential","class Credential","com.okta.authfoundation.credential.Credential"]},{"name":"class CredentialCreatedEvent : Event","description":"com.okta.authfoundation.credential.events.CredentialCreatedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-created-event/index.html","searchKeys":["CredentialCreatedEvent","class CredentialCreatedEvent : Event","com.okta.authfoundation.credential.events.CredentialCreatedEvent"]},{"name":"class CredentialDataSource(storage: TokenStorage)","description":"com.okta.authfoundation.credential.CredentialDataSource","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/index.html","searchKeys":["CredentialDataSource","class CredentialDataSource(storage: TokenStorage)","com.okta.authfoundation.credential.CredentialDataSource"]},{"name":"class CredentialDeletedEvent : Event","description":"com.okta.authfoundation.credential.events.CredentialDeletedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-deleted-event/index.html","searchKeys":["CredentialDeletedEvent","class CredentialDeletedEvent : Event","com.okta.authfoundation.credential.events.CredentialDeletedEvent"]},{"name":"class CredentialStoredAfterRemovedEvent : Event","description":"com.okta.authfoundation.credential.events.CredentialStoredAfterRemovedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-after-removed-event/index.html","searchKeys":["CredentialStoredAfterRemovedEvent","class CredentialStoredAfterRemovedEvent : Event","com.okta.authfoundation.credential.events.CredentialStoredAfterRemovedEvent"]},{"name":"class CredentialStoredEvent : Event","description":"com.okta.authfoundation.credential.events.CredentialStoredEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-event/index.html","searchKeys":["CredentialStoredEvent","class CredentialStoredEvent : Event","com.okta.authfoundation.credential.events.CredentialStoredEvent"]},{"name":"class DefaultCredentialChangedEvent : Event","description":"com.okta.authfoundation.credential.events.DefaultCredentialChangedEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-default-credential-changed-event/index.html","searchKeys":["DefaultCredentialChangedEvent","class DefaultCredentialChangedEvent : Event","com.okta.authfoundation.credential.events.DefaultCredentialChangedEvent"]},{"name":"class DefaultTokenEncryptionHandler(keyStore: KeyStore = AndroidKeystoreUtil.keyStore, keyPairGenerator: KeyPairGenerator = AndroidKeystoreUtil.getRsaKeyPairGenerator()) : TokenEncryptionHandler","description":"com.okta.authfoundation.credential.DefaultTokenEncryptionHandler","location":"auth-foundation/com.okta.authfoundation.credential/-default-token-encryption-handler/index.html","searchKeys":["DefaultTokenEncryptionHandler","class DefaultTokenEncryptionHandler(keyStore: KeyStore = AndroidKeystoreUtil.keyStore, keyPairGenerator: KeyPairGenerator = AndroidKeystoreUtil.getRsaKeyPairGenerator()) : TokenEncryptionHandler","com.okta.authfoundation.credential.DefaultTokenEncryptionHandler"]},{"name":"class EncryptionResult(val encryptedToken: ByteArray, val encryptionExtras: Map<String, String>)","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/index.html","searchKeys":["EncryptionResult","class EncryptionResult(val encryptedToken: ByteArray, val encryptionExtras: Map<String, String>)","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult"]},{"name":"class Entry(val identifier: String, val token: Token?, val tags: Map<String, String>)","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/index.html","searchKeys":["Entry","class Entry(val identifier: String, val token: Token?, val tags: Map<String, String>)","com.okta.authfoundation.credential.LegacyTokenStorage.Entry"]},{"name":"class Error(message: String) : IllegalStateException","description":"com.okta.authfoundation.client.AccessTokenValidator.Error","location":"auth-foundation/com.okta.authfoundation.client/-access-token-validator/-error/index.html","searchKeys":["Error","class Error(message: String) : IllegalStateException","com.okta.authfoundation.client.AccessTokenValidator.Error"]},{"name":"class Error(message: String) : IllegalStateException","description":"com.okta.authfoundation.client.DeviceSecretValidator.Error","location":"auth-foundation/com.okta.authfoundation.client/-device-secret-validator/-error/index.html","searchKeys":["Error","class Error(message: String) : IllegalStateException","com.okta.authfoundation.client.DeviceSecretValidator.Error"]},{"name":"class Error<T>(val exception: Exception) : OAuth2ClientResult<T> ","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/index.html","searchKeys":["Error","class Error<T>(val exception: Exception) : OAuth2ClientResult<T> ","com.okta.authfoundation.client.OAuth2ClientResult.Error"]},{"name":"class Error constructor(message: String, val identifier: String = \"\") : IllegalStateException","description":"com.okta.authfoundation.client.IdTokenValidator.Error","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/index.html","searchKeys":["Error","class Error constructor(message: String, val identifier: String = \"\") : IllegalStateException","com.okta.authfoundation.client.IdTokenValidator.Error"]},{"name":"class EventCoordinator(eventHandlers: List<EventHandler>)","description":"com.okta.authfoundation.events.EventCoordinator","location":"auth-foundation/com.okta.authfoundation.events/-event-coordinator/index.html","searchKeys":["EventCoordinator","class EventCoordinator(eventHandlers: List<EventHandler>)","com.okta.authfoundation.events.EventCoordinator"]},{"name":"class HttpResponseException : Exception","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-http-response-exception/index.html","searchKeys":["HttpResponseException","class HttpResponseException : Exception","com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException"]},{"name":"class JsonObjectTypeConverter","description":"com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-json-object-type-converter/index.html","searchKeys":["JsonObjectTypeConverter","class JsonObjectTypeConverter","com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter"]},{"name":"class Jwks","description":"com.okta.authfoundation.jwt.Jwks","location":"auth-foundation/com.okta.authfoundation.jwt/-jwks/index.html","searchKeys":["Jwks","class Jwks","com.okta.authfoundation.jwt.Jwks"]},{"name":"class Jwt : ClaimsProvider","description":"com.okta.authfoundation.jwt.Jwt","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/index.html","searchKeys":["Jwt","class Jwt : ClaimsProvider","com.okta.authfoundation.jwt.Jwt"]},{"name":"class JwtParser","description":"com.okta.authfoundation.jwt.JwtParser","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt-parser/index.html","searchKeys":["JwtParser","class JwtParser","com.okta.authfoundation.jwt.JwtParser"]},{"name":"class NoAccessTokenAvailableEvent : Event","description":"com.okta.authfoundation.credential.events.NoAccessTokenAvailableEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-no-access-token-available-event/index.html","searchKeys":["NoAccessTokenAvailableEvent","class NoAccessTokenAvailableEvent : Event","com.okta.authfoundation.credential.events.NoAccessTokenAvailableEvent"]},{"name":"class NoOpCache : Cache","description":"com.okta.authfoundation.client.NoOpCache","location":"auth-foundation/com.okta.authfoundation.client/-no-op-cache/index.html","searchKeys":["NoOpCache","class NoOpCache : Cache","com.okta.authfoundation.client.NoOpCache"]},{"name":"class OAuth2Client","description":"com.okta.authfoundation.client.OAuth2Client","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/index.html","searchKeys":["OAuth2Client","class OAuth2Client","com.okta.authfoundation.client.OAuth2Client"]},{"name":"class OidcConfiguration","description":"com.okta.authfoundation.client.OidcConfiguration","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/index.html","searchKeys":["OidcConfiguration","class OidcConfiguration","com.okta.authfoundation.client.OidcConfiguration"]},{"name":"class OidcEndpoints(val issuer: HttpUrl, val authorizationEndpoint: HttpUrl?, val tokenEndpoint: HttpUrl, val userInfoEndpoint: HttpUrl?, val jwksUri: HttpUrl?, val introspectionEndpoint: HttpUrl?, val revocationEndpoint: HttpUrl?, val endSessionEndpoint: HttpUrl?, val deviceAuthorizationEndpoint: HttpUrl?)","description":"com.okta.authfoundation.client.OidcEndpoints","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/index.html","searchKeys":["OidcEndpoints","class OidcEndpoints(val issuer: HttpUrl, val authorizationEndpoint: HttpUrl?, val tokenEndpoint: HttpUrl, val userInfoEndpoint: HttpUrl?, val jwksUri: HttpUrl?, val introspectionEndpoint: HttpUrl?, val revocationEndpoint: HttpUrl?, val endSessionEndpoint: HttpUrl?, val deviceAuthorizationEndpoint: HttpUrl?)","com.okta.authfoundation.client.OidcEndpoints"]},{"name":"class OidcEndpointsNotAvailableException : Exception","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.OidcEndpointsNotAvailableException","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-oidc-endpoints-not-available-exception/index.html","searchKeys":["OidcEndpointsNotAvailableException","class OidcEndpointsNotAvailableException : Exception","com.okta.authfoundation.client.OAuth2ClientResult.Error.OidcEndpointsNotAvailableException"]},{"name":"class OidcUserInfo : ClaimsProvider","description":"com.okta.authfoundation.client.dto.OidcUserInfo","location":"auth-foundation/com.okta.authfoundation.client.dto/-oidc-user-info/index.html","searchKeys":["OidcUserInfo","class OidcUserInfo : ClaimsProvider","com.okta.authfoundation.client.dto.OidcUserInfo"]},{"name":"class Parameters","description":"com.okta.authfoundation.client.IdTokenValidator.Parameters","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-parameters/index.html","searchKeys":["Parameters","class Parameters","com.okta.authfoundation.client.IdTokenValidator.Parameters"]},{"name":"class RateLimitExceededEvent : Event","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/index.html","searchKeys":["RateLimitExceededEvent","class RateLimitExceededEvent : Event","com.okta.authfoundation.client.events.RateLimitExceededEvent"]},{"name":"class RevokeAllException : Exception","description":"com.okta.authfoundation.credential.RevokeAllException","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-all-exception/index.html","searchKeys":["RevokeAllException","class RevokeAllException : Exception","com.okta.authfoundation.credential.RevokeAllException"]},{"name":"class RoomTokenStorage(tokenDatabase: TokenDatabase, tokenEncryptionHandler: TokenEncryptionHandler) : TokenStorage","description":"com.okta.authfoundation.credential.RoomTokenStorage","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/index.html","searchKeys":["RoomTokenStorage","class RoomTokenStorage(tokenDatabase: TokenDatabase, tokenEncryptionHandler: TokenEncryptionHandler) : TokenStorage","com.okta.authfoundation.credential.RoomTokenStorage"]},{"name":"class StringStringMapTypeConverter","description":"com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-string-string-map-type-converter/index.html","searchKeys":["StringStringMapTypeConverter","class StringStringMapTypeConverter","com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter"]},{"name":"class Success<T>(val result: T) : OAuth2ClientResult<T> ","description":"com.okta.authfoundation.client.OAuth2ClientResult.Success","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-success/index.html","searchKeys":["Success","class Success<T>(val result: T) : OAuth2ClientResult<T> ","com.okta.authfoundation.client.OAuth2ClientResult.Success"]},{"name":"class Token","description":"com.okta.authfoundation.credential.Token","location":"auth-foundation/com.okta.authfoundation.credential/-token/index.html","searchKeys":["Token","class Token","com.okta.authfoundation.credential.Token"]},{"name":"class TokenCreatedEvent : Event","description":"com.okta.authfoundation.client.events.TokenCreatedEvent","location":"auth-foundation/com.okta.authfoundation.client.events/-token-created-event/index.html","searchKeys":["TokenCreatedEvent","class TokenCreatedEvent : Event","com.okta.authfoundation.client.events.TokenCreatedEvent"]},{"name":"class TokenDatabase_Impl","description":"com.okta.authfoundation.credential.storage.TokenDatabase_Impl","location":"auth-foundation/com.okta.authfoundation.credential.storage/[android-jvm]-token-database_-impl/index.html","searchKeys":["TokenDatabase_Impl","class TokenDatabase_Impl","com.okta.authfoundation.credential.storage.TokenDatabase_Impl"]},{"name":"class TokenStorageAccessErrorEvent : Event","description":"com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent","location":"auth-foundation/com.okta.authfoundation.credential.events/-token-storage-access-error-event/index.html","searchKeys":["TokenStorageAccessErrorEvent","class TokenStorageAccessErrorEvent : Event","com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent"]},{"name":"class V1ToV2StorageMigrator","description":"com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator","location":"auth-foundation/com.okta.authfoundation.credential.storage.migration/-v1-to-v2-storage-migrator/index.html","searchKeys":["V1ToV2StorageMigrator","class V1ToV2StorageMigrator","com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator"]},{"name":"class ValidateIdTokenEvent : Event","description":"com.okta.authfoundation.client.events.ValidateIdTokenEvent","location":"auth-foundation/com.okta.authfoundation.client.events/-validate-id-token-event/index.html","searchKeys":["ValidateIdTokenEvent","class ValidateIdTokenEvent : Event","com.okta.authfoundation.client.events.ValidateIdTokenEvent"]},{"name":"const val EXPIRED: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.EXPIRED","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-e-x-p-i-r-e-d.html","searchKeys":["EXPIRED","const val EXPIRED: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.EXPIRED"]},{"name":"const val INVALID_AUDIENCE: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_AUDIENCE","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-n-v-a-l-i-d_-a-u-d-i-e-n-c-e.html","searchKeys":["INVALID_AUDIENCE","const val INVALID_AUDIENCE: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_AUDIENCE"]},{"name":"const val INVALID_ISSUER: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_ISSUER","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-n-v-a-l-i-d_-i-s-s-u-e-r.html","searchKeys":["INVALID_ISSUER","const val INVALID_ISSUER: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_ISSUER"]},{"name":"const val INVALID_JWT_ALGORITHM: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_JWT_ALGORITHM","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-n-v-a-l-i-d_-j-w-t_-a-l-g-o-r-i-t-h-m.html","searchKeys":["INVALID_JWT_ALGORITHM","const val INVALID_JWT_ALGORITHM: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_JWT_ALGORITHM"]},{"name":"const val INVALID_JWT_SIGNATURE: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_JWT_SIGNATURE","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-n-v-a-l-i-d_-j-w-t_-s-i-g-n-a-t-u-r-e.html","searchKeys":["INVALID_JWT_SIGNATURE","const val INVALID_JWT_SIGNATURE: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_JWT_SIGNATURE"]},{"name":"const val INVALID_SUBJECT: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_SUBJECT","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-n-v-a-l-i-d_-s-u-b-j-e-c-t.html","searchKeys":["INVALID_SUBJECT","const val INVALID_SUBJECT: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.INVALID_SUBJECT"]},{"name":"const val ISSUED_AT_THRESHOLD_NOT_SATISFIED: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.ISSUED_AT_THRESHOLD_NOT_SATISFIED","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-s-s-u-e-d_-a-t_-t-h-r-e-s-h-o-l-d_-n-o-t_-s-a-t-i-s-f-i-e-d.html","searchKeys":["ISSUED_AT_THRESHOLD_NOT_SATISFIED","const val ISSUED_AT_THRESHOLD_NOT_SATISFIED: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.ISSUED_AT_THRESHOLD_NOT_SATISFIED"]},{"name":"const val ISSUER_NOT_HTTPS: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.ISSUER_NOT_HTTPS","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-i-s-s-u-e-r_-n-o-t_-h-t-t-p-s.html","searchKeys":["ISSUER_NOT_HTTPS","const val ISSUER_NOT_HTTPS: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.ISSUER_NOT_HTTPS"]},{"name":"const val MAX_AGE_NOT_SATISFIED: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.MAX_AGE_NOT_SATISFIED","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-m-a-x_-a-g-e_-n-o-t_-s-a-t-i-s-f-i-e-d.html","searchKeys":["MAX_AGE_NOT_SATISFIED","const val MAX_AGE_NOT_SATISFIED: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.MAX_AGE_NOT_SATISFIED"]},{"name":"const val NONCE_MISMATCH: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion.NONCE_MISMATCH","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/-n-o-n-c-e_-m-i-s-m-a-t-c-h.html","searchKeys":["NONCE_MISMATCH","const val NONCE_MISMATCH: String","com.okta.authfoundation.client.IdTokenValidator.Error.Companion.NONCE_MISMATCH"]},{"name":"constructor()","description":"com.okta.authfoundation.BiometricDecryptionActivity.BiometricDecryptionActivity","location":"auth-foundation/com.okta.authfoundation/-biometric-decryption-activity/-biometric-decryption-activity.html","searchKeys":["BiometricDecryptionActivity","constructor()","com.okta.authfoundation.BiometricDecryptionActivity.BiometricDecryptionActivity"]},{"name":"constructor()","description":"com.okta.authfoundation.client.NoOpCache.NoOpCache","location":"auth-foundation/com.okta.authfoundation.client/-no-op-cache/-no-op-cache.html","searchKeys":["NoOpCache","constructor()","com.okta.authfoundation.client.NoOpCache.NoOpCache"]},{"name":"constructor()","description":"com.okta.authfoundation.credential.storage.TokenDatabase.TokenDatabase","location":"auth-foundation/com.okta.authfoundation.credential.storage/-token-database/-token-database.html","searchKeys":["TokenDatabase","constructor()","com.okta.authfoundation.credential.storage.TokenDatabase.TokenDatabase"]},{"name":"constructor()","description":"com.okta.authfoundation.credential.storage.TokenDatabase_Impl.TokenDatabase_Impl","location":"auth-foundation/com.okta.authfoundation.credential.storage/[android-jvm]-token-database_-impl/-token-database_-impl.html","searchKeys":["TokenDatabase_Impl","constructor()","com.okta.authfoundation.credential.storage.TokenDatabase_Impl.TokenDatabase_Impl"]},{"name":"constructor()","description":"com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.JsonObjectTypeConverter","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-json-object-type-converter/-json-object-type-converter.html","searchKeys":["JsonObjectTypeConverter","constructor()","com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.JsonObjectTypeConverter"]},{"name":"constructor()","description":"com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.StringStringMapTypeConverter","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-string-string-map-type-converter/-string-string-map-type-converter.html","searchKeys":["StringStringMapTypeConverter","constructor()","com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.StringStringMapTypeConverter"]},{"name":"constructor(clientId: String, defaultScope: String, issuer: String)","description":"com.okta.authfoundation.client.OidcConfiguration.OidcConfiguration","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/-oidc-configuration.html","searchKeys":["OidcConfiguration","constructor(clientId: String, defaultScope: String, issuer: String)","com.okta.authfoundation.client.OidcConfiguration.OidcConfiguration"]},{"name":"constructor(encryptedToken: ByteArray, encryptionExtras: Map<String, String>)","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.EncryptionResult","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/-encryption-result.html","searchKeys":["EncryptionResult","constructor(encryptedToken: ByteArray, encryptionExtras: Map<String, String>)","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.EncryptionResult"]},{"name":"constructor(encryptionKeySpec: KeyGenParameterSpec = defaultEncryptionKeySpec)","description":"com.okta.authfoundation.util.AesEncryptionHandler.AesEncryptionHandler","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/-aes-encryption-handler.html","searchKeys":["AesEncryptionHandler","constructor(encryptionKeySpec: KeyGenParameterSpec = defaultEncryptionKeySpec)","com.okta.authfoundation.util.AesEncryptionHandler.AesEncryptionHandler"]},{"name":"constructor(errorCode: Int, errString: CharSequence)","description":"com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.OnAuthenticationError","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/-on-authentication-error/-on-authentication-error.html","searchKeys":["OnAuthenticationError","constructor(errorCode: Int, errString: CharSequence)","com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.OnAuthenticationError"]},{"name":"constructor(eventHandler: EventHandler)","description":"com.okta.authfoundation.events.EventCoordinator.EventCoordinator","location":"auth-foundation/com.okta.authfoundation.events/-event-coordinator/-event-coordinator.html","searchKeys":["EventCoordinator","constructor(eventHandler: EventHandler)","com.okta.authfoundation.events.EventCoordinator.EventCoordinator"]},{"name":"constructor(eventHandlers: List<EventHandler>)","description":"com.okta.authfoundation.events.EventCoordinator.EventCoordinator","location":"auth-foundation/com.okta.authfoundation.events/-event-coordinator/-event-coordinator.html","searchKeys":["EventCoordinator","constructor(eventHandlers: List<EventHandler>)","com.okta.authfoundation.events.EventCoordinator.EventCoordinator"]},{"name":"constructor(exception: Exception)","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.Error","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-error.html","searchKeys":["Error","constructor(exception: Exception)","com.okta.authfoundation.client.OAuth2ClientResult.Error.Error"]},{"name":"constructor(factory: suspend () -> T, keepDataInMemory: (T) -> Boolean, awaitListener: () -> Unit? = null)","description":"com.okta.authfoundation.util.CoalescingOrchestrator.CoalescingOrchestrator","location":"auth-foundation/com.okta.authfoundation.util/-coalescing-orchestrator/-coalescing-orchestrator.html","searchKeys":["CoalescingOrchestrator","constructor(factory: suspend () -> T, keepDataInMemory: (T) -> Boolean, awaitListener: () -> Unit? = null)","com.okta.authfoundation.util.CoalescingOrchestrator.CoalescingOrchestrator"]},{"name":"constructor(id: String, tags: Map<String, String>, idToken: Jwt?)","description":"com.okta.authfoundation.credential.Token.Metadata.Metadata","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/-metadata.html","searchKeys":["Metadata","constructor(id: String, tags: Map<String, String>, idToken: Jwt?)","com.okta.authfoundation.credential.Token.Metadata.Metadata"]},{"name":"constructor(id: String, tags: Map<String, String>, payloadData: JsonObject?)","description":"com.okta.authfoundation.credential.Token.Metadata.Metadata","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/-metadata.html","searchKeys":["Metadata","constructor(id: String, tags: Map<String, String>, payloadData: JsonObject?)","com.okta.authfoundation.credential.Token.Metadata.Metadata"]},{"name":"constructor(id: String, tokenType: String, expiresIn: Int, accessToken: String, scope: String?, refreshToken: String?, idToken: String?, deviceSecret: String?, issuedTokenType: String?, oidcConfiguration: OidcConfiguration)","description":"com.okta.authfoundation.credential.Token.Token","location":"auth-foundation/com.okta.authfoundation.credential/-token/-token.html","searchKeys":["Token","constructor(id: String, tokenType: String, expiresIn: Int, accessToken: String, scope: String?, refreshToken: String?, idToken: String?, deviceSecret: String?, issuedTokenType: String?, oidcConfiguration: OidcConfiguration)","com.okta.authfoundation.credential.Token.Token"]},{"name":"constructor(identifier: String, token: Token?, tags: Map<String, String>)","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.Entry","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/-entry.html","searchKeys":["Entry","constructor(identifier: String, token: Token?, tags: Map<String, String>)","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.Entry"]},{"name":"constructor(issuer: HttpUrl, authorizationEndpoint: HttpUrl?, tokenEndpoint: HttpUrl, userInfoEndpoint: HttpUrl?, jwksUri: HttpUrl?, introspectionEndpoint: HttpUrl?, revocationEndpoint: HttpUrl?, endSessionEndpoint: HttpUrl?, deviceAuthorizationEndpoint: HttpUrl?)","description":"com.okta.authfoundation.client.OidcEndpoints.OidcEndpoints","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/-oidc-endpoints.html","searchKeys":["OidcEndpoints","constructor(issuer: HttpUrl, authorizationEndpoint: HttpUrl?, tokenEndpoint: HttpUrl, userInfoEndpoint: HttpUrl?, jwksUri: HttpUrl?, introspectionEndpoint: HttpUrl?, revocationEndpoint: HttpUrl?, endSessionEndpoint: HttpUrl?, deviceAuthorizationEndpoint: HttpUrl?)","com.okta.authfoundation.client.OidcEndpoints.OidcEndpoints"]},{"name":"constructor(keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias)","description":"com.okta.authfoundation.credential.Credential.Security.Default.Default","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-default/-default.html","searchKeys":["Default","constructor(keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias)","com.okta.authfoundation.credential.Credential.Security.Default.Default"]},{"name":"constructor(keyStore: KeyStore = AndroidKeystoreUtil.keyStore, keyPairGenerator: KeyPairGenerator = AndroidKeystoreUtil.getRsaKeyPairGenerator())","description":"com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.DefaultTokenEncryptionHandler","location":"auth-foundation/com.okta.authfoundation.credential/-default-token-encryption-handler/-default-token-encryption-handler.html","searchKeys":["DefaultTokenEncryptionHandler","constructor(keyStore: KeyStore = AndroidKeystoreUtil.keyStore, keyPairGenerator: KeyPairGenerator = AndroidKeystoreUtil.getRsaKeyPairGenerator())","com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.DefaultTokenEncryptionHandler"]},{"name":"constructor(message: String)","description":"com.okta.authfoundation.client.AccessTokenValidator.Error.Error","location":"auth-foundation/com.okta.authfoundation.client/-access-token-validator/-error/-error.html","searchKeys":["Error","constructor(message: String)","com.okta.authfoundation.client.AccessTokenValidator.Error.Error"]},{"name":"constructor(message: String)","description":"com.okta.authfoundation.client.DeviceSecretValidator.Error.Error","location":"auth-foundation/com.okta.authfoundation.client/-device-secret-validator/-error/-error.html","searchKeys":["Error","constructor(message: String)","com.okta.authfoundation.client.DeviceSecretValidator.Error.Error"]},{"name":"constructor(message: String, biometricExceptionDetails: BiometricExceptionDetails)","description":"com.okta.authfoundation.BiometricAuthenticationException.BiometricAuthenticationException","location":"auth-foundation/com.okta.authfoundation/-biometric-authentication-exception/-biometric-authentication-exception.html","searchKeys":["BiometricAuthenticationException","constructor(message: String, biometricExceptionDetails: BiometricExceptionDetails)","com.okta.authfoundation.BiometricAuthenticationException.BiometricAuthenticationException"]},{"name":"constructor(message: String, identifier: String = \"\")","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Error","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-error.html","searchKeys":["Error","constructor(message: String, identifier: String = \"\")","com.okta.authfoundation.client.IdTokenValidator.Error.Error"]},{"name":"constructor(message: String?)","description":"com.okta.authfoundation.credential.BiometricInvocationException.BiometricInvocationException","location":"auth-foundation/com.okta.authfoundation.credential/-biometric-invocation-exception/-biometric-invocation-exception.html","searchKeys":["BiometricInvocationException","constructor(message: String?)","com.okta.authfoundation.credential.BiometricInvocationException.BiometricInvocationException"]},{"name":"constructor(result: T)","description":"com.okta.authfoundation.client.OAuth2ClientResult.Success.Success","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-success/-success.html","searchKeys":["Success","constructor(result: T)","com.okta.authfoundation.client.OAuth2ClientResult.Success.Success"]},{"name":"constructor(storage: TokenStorage)","description":"com.okta.authfoundation.credential.CredentialDataSource.CredentialDataSource","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/-credential-data-source.html","searchKeys":["CredentialDataSource","constructor(storage: TokenStorage)","com.okta.authfoundation.credential.CredentialDataSource.CredentialDataSource"]},{"name":"constructor(tokenDatabase: TokenDatabase, tokenEncryptionHandler: TokenEncryptionHandler)","description":"com.okta.authfoundation.credential.RoomTokenStorage.RoomTokenStorage","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/-room-token-storage.html","searchKeys":["RoomTokenStorage","constructor(tokenDatabase: TokenDatabase, tokenEncryptionHandler: TokenEncryptionHandler)","com.okta.authfoundation.credential.RoomTokenStorage.RoomTokenStorage"]},{"name":"constructor(userAuthenticationTimeout: Int = 5, keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrong.timeout.$userAuthenticationTimeout\")","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrong.BiometricStrong","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong/-biometric-strong.html","searchKeys":["BiometricStrong","constructor(userAuthenticationTimeout: Int = 5, keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrong.timeout.$userAuthenticationTimeout\")","com.okta.authfoundation.credential.Credential.Security.BiometricStrong.BiometricStrong"]},{"name":"constructor(userAuthenticationTimeout: Int = 5, keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrongOrDeviceCredential.timeout.$userAuthenticationTimeout\")","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.BiometricStrongOrDeviceCredential","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong-or-device-credential/-biometric-strong-or-device-credential.html","searchKeys":["BiometricStrongOrDeviceCredential","constructor(userAuthenticationTimeout: Int = 5, keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrongOrDeviceCredential.timeout.$userAuthenticationTimeout\")","com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.BiometricStrongOrDeviceCredential"]},{"name":"data class BiometricStrong(val userAuthenticationTimeout: Int = 5, val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrong.timeout.$userAuthenticationTimeout\") : Credential.Security, Credential.BiometricSecurity","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrong","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong/index.html","searchKeys":["BiometricStrong","data class BiometricStrong(val userAuthenticationTimeout: Int = 5, val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrong.timeout.$userAuthenticationTimeout\") : Credential.Security, Credential.BiometricSecurity","com.okta.authfoundation.credential.Credential.Security.BiometricStrong"]},{"name":"data class BiometricStrongOrDeviceCredential(val userAuthenticationTimeout: Int = 5, val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrongOrDeviceCredential.timeout.$userAuthenticationTimeout\") : Credential.Security, Credential.BiometricSecurity","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong-or-device-credential/index.html","searchKeys":["BiometricStrongOrDeviceCredential","data class BiometricStrongOrDeviceCredential(val userAuthenticationTimeout: Int = 5, val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias + \".biometricStrongOrDeviceCredential.timeout.$userAuthenticationTimeout\") : Credential.Security, Credential.BiometricSecurity","com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential"]},{"name":"data class Default(val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias) : Credential.Security","description":"com.okta.authfoundation.credential.Credential.Security.Default","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-default/index.html","searchKeys":["Default","data class Default(val keyAlias: String = AuthFoundationDefaults.Encryption.keyAlias) : Credential.Security","com.okta.authfoundation.credential.Credential.Security.Default"]},{"name":"data class Metadata(val id: String, val tags: Map<String, String>, val payloadData: JsonObject?)","description":"com.okta.authfoundation.credential.Token.Metadata","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/index.html","searchKeys":["Metadata","data class Metadata(val id: String, val tags: Map<String, String>, val payloadData: JsonObject?)","com.okta.authfoundation.credential.Token.Metadata"]},{"name":"data class OnAuthenticationError(val errorCode: Int, val errString: CharSequence) : BiometricExceptionDetails","description":"com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/-on-authentication-error/index.html","searchKeys":["OnAuthenticationError","data class OnAuthenticationError(val errorCode: Int, val errString: CharSequence) : BiometricExceptionDetails","com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError"]},{"name":"data object OnAuthenticationFailed : BiometricExceptionDetails","description":"com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationFailed","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/-on-authentication-failed/index.html","searchKeys":["OnAuthenticationFailed","data object OnAuthenticationFailed : BiometricExceptionDetails","com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationFailed"]},{"name":"enum RevokeTokenType : Enum<RevokeTokenType> ","description":"com.okta.authfoundation.credential.RevokeTokenType","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/index.html","searchKeys":["RevokeTokenType","enum RevokeTokenType : Enum<RevokeTokenType> ","com.okta.authfoundation.credential.RevokeTokenType"]},{"name":"enum TokenType : Enum<TokenType> ","description":"com.okta.authfoundation.credential.TokenType","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/index.html","searchKeys":["TokenType","enum TokenType : Enum<TokenType> ","com.okta.authfoundation.credential.TokenType"]},{"name":"fun <T> endpointNotAvailableError(): OAuth2ClientResult.Error<T>","description":"com.okta.authfoundation.client.OAuth2Client.endpointNotAvailableError","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/endpoint-not-available-error.html","searchKeys":["endpointNotAvailableError","fun <T> endpointNotAvailableError(): OAuth2ClientResult.Error<T>","com.okta.authfoundation.client.OAuth2Client.endpointNotAvailableError"]},{"name":"fun accessTokenInterceptor(): Interceptor","description":"com.okta.authfoundation.credential.Credential.accessTokenInterceptor","location":"auth-foundation/com.okta.authfoundation.credential/-credential/access-token-interceptor.html","searchKeys":["accessTokenInterceptor","fun accessTokenInterceptor(): Interceptor","com.okta.authfoundation.credential.Credential.accessTokenInterceptor"]},{"name":"fun convertToJsonString(jsonObject: JsonObject?): String?","description":"com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.convertToJsonString","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-json-object-type-converter/convert-to-json-string.html","searchKeys":["convertToJsonString","fun convertToJsonString(jsonObject: JsonObject?): String?","com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.convertToJsonString"]},{"name":"fun convertToJsonString(stringStringMap: Map<String, String>?): String?","description":"com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.convertToJsonString","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-string-string-map-type-converter/convert-to-json-string.html","searchKeys":["convertToJsonString","fun convertToJsonString(stringStringMap: Map<String, String>?): String?","com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.convertToJsonString"]},{"name":"fun convertToObject(json: String?): JsonObject?","description":"com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.convertToObject","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-json-object-type-converter/convert-to-object.html","searchKeys":["convertToObject","fun convertToObject(json: String?): JsonObject?","com.okta.authfoundation.credential.storage.typeconverters.JsonObjectTypeConverter.convertToObject"]},{"name":"fun convertToObject(json: String?): Map<String, String>?","description":"com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.convertToObject","location":"auth-foundation/com.okta.authfoundation.credential.storage.typeconverters/-string-string-map-type-converter/convert-to-object.html","searchKeys":["convertToObject","fun convertToObject(json: String?): Map<String, String>?","com.okta.authfoundation.credential.storage.typeconverters.StringStringMapTypeConverter.convertToObject"]},{"name":"fun create(): JwtParser","description":"com.okta.authfoundation.jwt.JwtParser.Companion.create","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt-parser/-companion/create.html","searchKeys":["create","fun create(): JwtParser","com.okta.authfoundation.jwt.JwtParser.Companion.create"]},{"name":"fun create(configuration: OidcConfiguration, endpoints: OidcEndpoints): OAuth2Client","description":"com.okta.authfoundation.client.OAuth2Client.Companion.create","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/-companion/create.html","searchKeys":["create","fun create(configuration: OidcConfiguration, endpoints: OidcEndpoints): OAuth2Client","com.okta.authfoundation.client.OAuth2Client.Companion.create"]},{"name":"fun createFromConfiguration(configuration: OidcConfiguration): OAuth2Client","description":"com.okta.authfoundation.client.OAuth2Client.Companion.createFromConfiguration","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/-companion/create-from-configuration.html","searchKeys":["createFromConfiguration","fun createFromConfiguration(configuration: OidcConfiguration): OAuth2Client","com.okta.authfoundation.client.OAuth2Client.Companion.createFromConfiguration"]},{"name":"fun decryptString(encryptedString: String): Result<String>","description":"com.okta.authfoundation.util.AesEncryptionHandler.decryptString","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/decrypt-string.html","searchKeys":["decryptString","fun decryptString(encryptedString: String): Result<String>","com.okta.authfoundation.util.AesEncryptionHandler.decryptString"]},{"name":"fun delete()","description":"com.okta.authfoundation.credential.Credential.delete","location":"auth-foundation/com.okta.authfoundation.credential/-credential/delete.html","searchKeys":["delete","fun delete()","com.okta.authfoundation.credential.Credential.delete"]},{"name":"fun deleteKey(alias: String)","description":"com.okta.authfoundation.util.AndroidKeystoreUtil.deleteKey","location":"auth-foundation/com.okta.authfoundation.util/-android-keystore-util/delete-key.html","searchKeys":["deleteKey","fun deleteKey(alias: String)","com.okta.authfoundation.util.AndroidKeystoreUtil.deleteKey"]},{"name":"fun encryptString(string: String): String","description":"com.okta.authfoundation.util.AesEncryptionHandler.encryptString","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/encrypt-string.html","searchKeys":["encryptString","fun encryptString(string: String): String","com.okta.authfoundation.util.AesEncryptionHandler.encryptString"]},{"name":"fun find(promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","description":"com.okta.authfoundation.credential.Credential.Companion.find","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/find.html","searchKeys":["find","fun find(promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","com.okta.authfoundation.credential.Credential.Companion.find"]},{"name":"fun getAccessTokenIfValid(): String?","description":"com.okta.authfoundation.credential.Credential.getAccessTokenIfValid","location":"auth-foundation/com.okta.authfoundation.credential/-credential/get-access-token-if-valid.html","searchKeys":["getAccessTokenIfValid","fun getAccessTokenIfValid(): String?","com.okta.authfoundation.credential.Credential.getAccessTokenIfValid"]},{"name":"fun getOrCreateAesKey(keyGenParameterSpec: KeyGenParameterSpec): Key","description":"com.okta.authfoundation.util.AndroidKeystoreUtil.getOrCreateAesKey","location":"auth-foundation/com.okta.authfoundation.util/-android-keystore-util/get-or-create-aes-key.html","searchKeys":["getOrCreateAesKey","fun getOrCreateAesKey(keyGenParameterSpec: KeyGenParameterSpec): Key","com.okta.authfoundation.util.AndroidKeystoreUtil.getOrCreateAesKey"]},{"name":"fun getOrThrow(): T","description":"com.okta.authfoundation.client.OAuth2ClientResult.getOrThrow","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/get-or-throw.html","searchKeys":["getOrThrow","fun getOrThrow(): T","com.okta.authfoundation.client.OAuth2ClientResult.getOrThrow"]},{"name":"fun getRsaKeyPairGenerator(): KeyPairGenerator","description":"com.okta.authfoundation.util.AndroidKeystoreUtil.getRsaKeyPairGenerator","location":"auth-foundation/com.okta.authfoundation.util/-android-keystore-util/get-rsa-key-pair-generator.html","searchKeys":["getRsaKeyPairGenerator","fun getRsaKeyPairGenerator(): KeyPairGenerator","com.okta.authfoundation.util.AndroidKeystoreUtil.getRsaKeyPairGenerator"]},{"name":"fun getTokenFlow(): Flow<Token>","description":"com.okta.authfoundation.credential.Credential.getTokenFlow","location":"auth-foundation/com.okta.authfoundation.credential/-credential/get-token-flow.html","searchKeys":["getTokenFlow","fun getTokenFlow(): Flow<Token>","com.okta.authfoundation.credential.Credential.getTokenFlow"]},{"name":"fun idToken(): Jwt?","description":"com.okta.authfoundation.credential.Credential.idToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential/id-token.html","searchKeys":["idToken","fun idToken(): Jwt?","com.okta.authfoundation.credential.Credential.idToken"]},{"name":"fun initializeAndroidContext(context: Context)","description":"com.okta.authfoundation.AuthFoundation.initializeAndroidContext","location":"auth-foundation/com.okta.authfoundation/-auth-foundation/initialize-android-context.html","searchKeys":["initializeAndroidContext","fun initializeAndroidContext(context: Context)","com.okta.authfoundation.AuthFoundation.initializeAndroidContext"]},{"name":"fun interface AccessTokenValidator","description":"com.okta.authfoundation.client.AccessTokenValidator","location":"auth-foundation/com.okta.authfoundation.client/-access-token-validator/index.html","searchKeys":["AccessTokenValidator","fun interface AccessTokenValidator","com.okta.authfoundation.client.AccessTokenValidator"]},{"name":"fun interface DeviceSecretValidator","description":"com.okta.authfoundation.client.DeviceSecretValidator","location":"auth-foundation/com.okta.authfoundation.client/-device-secret-validator/index.html","searchKeys":["DeviceSecretValidator","fun interface DeviceSecretValidator","com.okta.authfoundation.client.DeviceSecretValidator"]},{"name":"fun interface IdTokenValidator","description":"com.okta.authfoundation.client.IdTokenValidator","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/index.html","searchKeys":["IdTokenValidator","fun interface IdTokenValidator","com.okta.authfoundation.client.IdTokenValidator"]},{"name":"fun interface OidcClock","description":"com.okta.authfoundation.client.OidcClock","location":"auth-foundation/com.okta.authfoundation.client/-oidc-clock/index.html","searchKeys":["OidcClock","fun interface OidcClock","com.okta.authfoundation.client.OidcClock"]},{"name":"fun metadata(id: String): Token.Metadata?","description":"com.okta.authfoundation.credential.Credential.Companion.metadata","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/metadata.html","searchKeys":["metadata","fun metadata(id: String): Token.Metadata?","com.okta.authfoundation.credential.Credential.Companion.metadata"]},{"name":"fun parse(rawValue: String): Jwt","description":"com.okta.authfoundation.jwt.JwtParser.parse","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt-parser/parse.html","searchKeys":["parse","fun parse(rawValue: String): Jwt","com.okta.authfoundation.jwt.JwtParser.parse"]},{"name":"fun register(sdkVersion: String)","description":"com.okta.authfoundation.client.internal.SdkVersionsRegistry.register","location":"auth-foundation/com.okta.authfoundation.client.internal/-sdk-versions-registry/register.html","searchKeys":["register","fun register(sdkVersion: String)","com.okta.authfoundation.client.internal.SdkVersionsRegistry.register"]},{"name":"fun resetEncryptionKey()","description":"com.okta.authfoundation.util.AesEncryptionHandler.resetEncryptionKey","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/reset-encryption-key.html","searchKeys":["resetEncryptionKey","fun resetEncryptionKey()","com.okta.authfoundation.util.AesEncryptionHandler.resetEncryptionKey"]},{"name":"fun scope(): String","description":"com.okta.authfoundation.credential.Credential.scope","location":"auth-foundation/com.okta.authfoundation.credential/-credential/scope.html","searchKeys":["scope","fun scope(): String","com.okta.authfoundation.credential.Credential.scope"]},{"name":"fun sendEvent(event: Event)","description":"com.okta.authfoundation.events.EventCoordinator.sendEvent","location":"auth-foundation/com.okta.authfoundation.events/-event-coordinator/send-event.html","searchKeys":["sendEvent","fun sendEvent(event: Event)","com.okta.authfoundation.events.EventCoordinator.sendEvent"]},{"name":"fun setApplicationContext(context: Context)","description":"com.okta.authfoundation.client.ApplicationContextHolder.setApplicationContext","location":"auth-foundation/com.okta.authfoundation.client/-application-context-holder/set-application-context.html","searchKeys":["setApplicationContext","fun setApplicationContext(context: Context)","com.okta.authfoundation.client.ApplicationContextHolder.setApplicationContext"]},{"name":"fun setMetadata(metadata: Token.Metadata)","description":"com.okta.authfoundation.credential.Credential.Companion.setMetadata","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/set-metadata.html","searchKeys":["setMetadata","fun setMetadata(metadata: Token.Metadata)","com.okta.authfoundation.credential.Credential.Companion.setMetadata"]},{"name":"fun setupDatabaseRecovery()","description":"com.okta.authfoundation.credential.TokenDbRecoveryUtil.setupDatabaseRecovery","location":"auth-foundation/com.okta.authfoundation.credential/-token-db-recovery-util/setup-database-recovery.html","searchKeys":["setupDatabaseRecovery","fun setupDatabaseRecovery()","com.okta.authfoundation.credential.TokenDbRecoveryUtil.setupDatabaseRecovery"]},{"name":"fun store(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Security.standard): Credential","description":"com.okta.authfoundation.credential.Credential.Companion.store","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/store.html","searchKeys":["store","fun store(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Security.standard): Credential","com.okta.authfoundation.credential.Credential.Companion.store"]},{"name":"fun toTokenTypeHint(): String","description":"com.okta.authfoundation.credential.TokenType.toTokenTypeHint","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/to-token-type-hint.html","searchKeys":["toTokenTypeHint","fun toTokenTypeHint(): String","com.okta.authfoundation.credential.TokenType.toTokenTypeHint"]},{"name":"fun valueOf(value: String): RevokeTokenType","description":"com.okta.authfoundation.credential.RevokeTokenType.valueOf","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevokeTokenType","com.okta.authfoundation.credential.RevokeTokenType.valueOf"]},{"name":"fun valueOf(value: String): TokenType","description":"com.okta.authfoundation.credential.TokenType.valueOf","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TokenType","com.okta.authfoundation.credential.TokenType.valueOf"]},{"name":"fun values(): Array<RevokeTokenType>","description":"com.okta.authfoundation.credential.RevokeTokenType.values","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/values.html","searchKeys":["values","fun values(): Array<RevokeTokenType>","com.okta.authfoundation.credential.RevokeTokenType.values"]},{"name":"fun values(): Array<TokenType>","description":"com.okta.authfoundation.credential.TokenType.values","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/values.html","searchKeys":["values","fun values(): Array<TokenType>","com.okta.authfoundation.credential.TokenType.values"]},{"name":"fun with(id: String, promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo): Credential?","description":"com.okta.authfoundation.credential.Credential.Companion.with","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/with.html","searchKeys":["with","fun with(id: String, promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo): Credential?","com.okta.authfoundation.credential.Credential.Companion.with"]},{"name":"interface Cache","description":"com.okta.authfoundation.client.Cache","location":"auth-foundation/com.okta.authfoundation.client/-cache/index.html","searchKeys":["Cache","interface Cache","com.okta.authfoundation.client.Cache"]},{"name":"interface ClaimsProvider","description":"com.okta.authfoundation.claims.ClaimsProvider","location":"auth-foundation/com.okta.authfoundation.claims/-claims-provider/index.html","searchKeys":["ClaimsProvider","interface ClaimsProvider","com.okta.authfoundation.claims.ClaimsProvider"]},{"name":"interface Event","description":"com.okta.authfoundation.events.Event","location":"auth-foundation/com.okta.authfoundation.events/-event/index.html","searchKeys":["Event","interface Event","com.okta.authfoundation.events.Event"]},{"name":"interface EventHandler","description":"com.okta.authfoundation.events.EventHandler","location":"auth-foundation/com.okta.authfoundation.events/-event-handler/index.html","searchKeys":["EventHandler","interface EventHandler","com.okta.authfoundation.events.EventHandler"]},{"name":"interface LegacyTokenStorage","description":"com.okta.authfoundation.credential.LegacyTokenStorage","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/index.html","searchKeys":["LegacyTokenStorage","interface LegacyTokenStorage","com.okta.authfoundation.credential.LegacyTokenStorage"]},{"name":"interface TokenEncryptionHandler","description":"com.okta.authfoundation.credential.TokenEncryptionHandler","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/index.html","searchKeys":["TokenEncryptionHandler","interface TokenEncryptionHandler","com.okta.authfoundation.credential.TokenEncryptionHandler"]},{"name":"interface TokenStorage","description":"com.okta.authfoundation.credential.TokenStorage","location":"auth-foundation/com.okta.authfoundation.credential/-token-storage/index.html","searchKeys":["TokenStorage","interface TokenStorage","com.okta.authfoundation.credential.TokenStorage"]},{"name":"lateinit var appContext: Context","description":"com.okta.authfoundation.client.ApplicationContextHolder.appContext","location":"auth-foundation/com.okta.authfoundation.client/-application-context-holder/app-context.html","searchKeys":["appContext","lateinit var appContext: Context","com.okta.authfoundation.client.ApplicationContextHolder.appContext"]},{"name":"object AndroidKeystoreUtil","description":"com.okta.authfoundation.util.AndroidKeystoreUtil","location":"auth-foundation/com.okta.authfoundation.util/-android-keystore-util/index.html","searchKeys":["AndroidKeystoreUtil","object AndroidKeystoreUtil","com.okta.authfoundation.util.AndroidKeystoreUtil"]},{"name":"object ApplicationContextHolder","description":"com.okta.authfoundation.client.ApplicationContextHolder","location":"auth-foundation/com.okta.authfoundation.client/-application-context-holder/index.html","searchKeys":["ApplicationContextHolder","object ApplicationContextHolder","com.okta.authfoundation.client.ApplicationContextHolder"]},{"name":"object AuthFoundation","description":"com.okta.authfoundation.AuthFoundation","location":"auth-foundation/com.okta.authfoundation/-auth-foundation/index.html","searchKeys":["AuthFoundation","object AuthFoundation","com.okta.authfoundation.AuthFoundation"]},{"name":"object AuthFoundationDefaults","description":"com.okta.authfoundation.AuthFoundationDefaults","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/index.html","searchKeys":["AuthFoundationDefaults","object AuthFoundationDefaults","com.okta.authfoundation.AuthFoundationDefaults"]},{"name":"object Companion","description":"com.okta.authfoundation.client.IdTokenValidator.Error.Companion","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.client.IdTokenValidator.Error.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.client.OAuth2Client.Companion","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.client.OAuth2Client.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.client.OidcConfiguration.Companion","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.client.OidcConfiguration.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.Credential.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.Credential.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.Credential.Security.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.Credential.Security.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.CredentialDataSource.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.CredentialDataSource.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.RoomTokenStorage.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.RoomTokenStorage.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.Token.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-token/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.Token.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.Companion","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.TokenEncryptionHandler.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.storage.TokenDatabase.Companion","location":"auth-foundation/com.okta.authfoundation.credential.storage/-token-database/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.storage.TokenDatabase.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion","location":"auth-foundation/com.okta.authfoundation.credential.storage.migration/-v1-to-v2-storage-migrator/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.jwt.JwtParser.Companion","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt-parser/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.jwt.JwtParser.Companion"]},{"name":"object Companion","description":"com.okta.authfoundation.util.AesEncryptionHandler.Companion","location":"auth-foundation/com.okta.authfoundation.util/-aes-encryption-handler/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.authfoundation.util.AesEncryptionHandler.Companion"]},{"name":"object Encryption","description":"com.okta.authfoundation.AuthFoundationDefaults.Encryption","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/-encryption/index.html","searchKeys":["Encryption","object Encryption","com.okta.authfoundation.AuthFoundationDefaults.Encryption"]},{"name":"object SdkDefaults","description":"com.okta.authfoundation.SdkDefaults","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/index.html","searchKeys":["SdkDefaults","object SdkDefaults","com.okta.authfoundation.SdkDefaults"]},{"name":"object SdkVersionsRegistry","description":"com.okta.authfoundation.client.internal.SdkVersionsRegistry","location":"auth-foundation/com.okta.authfoundation.client.internal/-sdk-versions-registry/index.html","searchKeys":["SdkVersionsRegistry","object SdkVersionsRegistry","com.okta.authfoundation.client.internal.SdkVersionsRegistry"]},{"name":"object TokenDbRecoveryUtil","description":"com.okta.authfoundation.credential.TokenDbRecoveryUtil","location":"auth-foundation/com.okta.authfoundation.credential/-token-db-recovery-util/index.html","searchKeys":["TokenDbRecoveryUtil","object TokenDbRecoveryUtil","com.okta.authfoundation.credential.TokenDbRecoveryUtil"]},{"name":"open fun clearAllTables()","description":"com.okta.authfoundation.credential.storage.TokenDatabase_Impl.clearAllTables","location":"auth-foundation/com.okta.authfoundation.credential.storage/[android-jvm]-token-database_-impl/clear-all-tables.html","searchKeys":["clearAllTables","open fun clearAllTables()","com.okta.authfoundation.credential.storage.TokenDatabase_Impl.clearAllTables"]},{"name":"open fun createAutoMigrations(autoMigrationSpecs: Map<KClass<out AutoMigrationSpec>, AutoMigrationSpec>): List<Migration>","description":"com.okta.authfoundation.credential.storage.TokenDatabase_Impl.createAutoMigrations","location":"auth-foundation/com.okta.authfoundation.credential.storage/[android-jvm]-token-database_-impl/create-auto-migrations.html","searchKeys":["createAutoMigrations","open fun createAutoMigrations(autoMigrationSpecs: Map<KClass<out AutoMigrationSpec>, AutoMigrationSpec>): List<Migration>","com.okta.authfoundation.credential.storage.TokenDatabase_Impl.createAutoMigrations"]},{"name":"open fun getRequiredAutoMigrationSpecClasses(): Set<KClass<out AutoMigrationSpec>>","description":"com.okta.authfoundation.credential.storage.TokenDatabase_Impl.getRequiredAutoMigrationSpecClasses","location":"auth-foundation/com.okta.authfoundation.credential.storage/[android-jvm]-token-database_-impl/get-required-auto-migration-spec-classes.html","searchKeys":["getRequiredAutoMigrationSpecClasses","open fun getRequiredAutoMigrationSpecClasses(): Set<KClass<out AutoMigrationSpec>>","com.okta.authfoundation.credential.storage.TokenDatabase_Impl.getRequiredAutoMigrationSpecClasses"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.okta.authfoundation.credential.Credential.equals","location":"auth-foundation/com.okta.authfoundation.credential/-credential/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.okta.authfoundation.credential.Credential.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.equals","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.okta.authfoundation.credential.Token.equals","location":"auth-foundation/com.okta.authfoundation.credential/-token/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.okta.authfoundation.credential.Token.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.okta.authfoundation.jwt.Jwt.equals","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.okta.authfoundation.jwt.Jwt.equals"]},{"name":"open override fun finish()","description":"com.okta.authfoundation.BiometricDecryptionActivity.finish","location":"auth-foundation/com.okta.authfoundation/-biometric-decryption-activity/finish.html","searchKeys":["finish","open override fun finish()","com.okta.authfoundation.BiometricDecryptionActivity.finish"]},{"name":"open override fun generateKey(security: Credential.Security)","description":"com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.generateKey","location":"auth-foundation/com.okta.authfoundation.credential/-default-token-encryption-handler/generate-key.html","searchKeys":["generateKey","open override fun generateKey(security: Credential.Security)","com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.generateKey"]},{"name":"open override fun get(key: String): String?","description":"com.okta.authfoundation.client.NoOpCache.get","location":"auth-foundation/com.okta.authfoundation.client/-no-op-cache/get.html","searchKeys":["get","open override fun get(key: String): String?","com.okta.authfoundation.client.NoOpCache.get"]},{"name":"open override fun hashCode(): Int","description":"com.okta.authfoundation.credential.Credential.hashCode","location":"auth-foundation/com.okta.authfoundation.credential/-credential/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.okta.authfoundation.credential.Credential.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.hashCode","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.okta.authfoundation.credential.Token.hashCode","location":"auth-foundation/com.okta.authfoundation.credential/-token/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.okta.authfoundation.credential.Token.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.okta.authfoundation.jwt.Jwt.hashCode","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.okta.authfoundation.jwt.Jwt.hashCode"]},{"name":"open override fun set(key: String, value: String)","description":"com.okta.authfoundation.client.NoOpCache.set","location":"auth-foundation/com.okta.authfoundation.client/-no-op-cache/set.html","searchKeys":["set","open override fun set(key: String, value: String)","com.okta.authfoundation.client.NoOpCache.set"]},{"name":"open override fun toString(): String","description":"com.okta.authfoundation.jwt.Jwt.toString","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/to-string.html","searchKeys":["toString","open override fun toString(): String","com.okta.authfoundation.jwt.Jwt.toString"]},{"name":"open override val keyAlias: String","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrong.keyAlias","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong/key-alias.html","searchKeys":["keyAlias","open override val keyAlias: String","com.okta.authfoundation.credential.Credential.Security.BiometricStrong.keyAlias"]},{"name":"open override val keyAlias: String","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.keyAlias","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong-or-device-credential/key-alias.html","searchKeys":["keyAlias","open override val keyAlias: String","com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.keyAlias"]},{"name":"open override val keyAlias: String","description":"com.okta.authfoundation.credential.Credential.Security.Default.keyAlias","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-default/key-alias.html","searchKeys":["keyAlias","open override val keyAlias: String","com.okta.authfoundation.credential.Credential.Security.Default.keyAlias"]},{"name":"open override val message: String?","description":"com.okta.authfoundation.credential.BiometricInvocationException.message","location":"auth-foundation/com.okta.authfoundation.credential/-biometric-invocation-exception/message.html","searchKeys":["message","open override val message: String?","com.okta.authfoundation.credential.BiometricInvocationException.message"]},{"name":"open override val userAuthenticationTimeout: Int = 5","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrong.userAuthenticationTimeout","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong/user-authentication-timeout.html","searchKeys":["userAuthenticationTimeout","open override val userAuthenticationTimeout: Int = 5","com.okta.authfoundation.credential.Credential.Security.BiometricStrong.userAuthenticationTimeout"]},{"name":"open override val userAuthenticationTimeout: Int = 5","description":"com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.userAuthenticationTimeout","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-biometric-strong-or-device-credential/user-authentication-timeout.html","searchKeys":["userAuthenticationTimeout","open override val userAuthenticationTimeout: Int = 5","com.okta.authfoundation.credential.Credential.Security.BiometricStrongOrDeviceCredential.userAuthenticationTimeout"]},{"name":"open suspend override fun add(token: Token, metadata: Token.Metadata, security: Credential.Security)","description":"com.okta.authfoundation.credential.RoomTokenStorage.add","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/add.html","searchKeys":["add","open suspend override fun add(token: Token, metadata: Token.Metadata, security: Credential.Security)","com.okta.authfoundation.credential.RoomTokenStorage.add"]},{"name":"open suspend override fun allIds(): List<String>","description":"com.okta.authfoundation.credential.RoomTokenStorage.allIds","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/all-ids.html","searchKeys":["allIds","open suspend override fun allIds(): List<String>","com.okta.authfoundation.credential.RoomTokenStorage.allIds"]},{"name":"open suspend override fun decrypt(encryptedToken: ByteArray, encryptionExtras: Map<String, String>, security: Credential.Security, promptInfo: BiometricPrompt.PromptInfo?): Token","description":"com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.decrypt","location":"auth-foundation/com.okta.authfoundation.credential/-default-token-encryption-handler/decrypt.html","searchKeys":["decrypt","open suspend override fun decrypt(encryptedToken: ByteArray, encryptionExtras: Map<String, String>, security: Credential.Security, promptInfo: BiometricPrompt.PromptInfo?): Token","com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.decrypt"]},{"name":"open suspend override fun encrypt(token: Token, security: Credential.Security): TokenEncryptionHandler.EncryptionResult","description":"com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.encrypt","location":"auth-foundation/com.okta.authfoundation.credential/-default-token-encryption-handler/encrypt.html","searchKeys":["encrypt","open suspend override fun encrypt(token: Token, security: Credential.Security): TokenEncryptionHandler.EncryptionResult","com.okta.authfoundation.credential.DefaultTokenEncryptionHandler.encrypt"]},{"name":"open suspend override fun getToken(id: String, promptInfo: BiometricPrompt.PromptInfo?): Token","description":"com.okta.authfoundation.credential.RoomTokenStorage.getToken","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/get-token.html","searchKeys":["getToken","open suspend override fun getToken(id: String, promptInfo: BiometricPrompt.PromptInfo?): Token","com.okta.authfoundation.credential.RoomTokenStorage.getToken"]},{"name":"open suspend override fun metadata(id: String): Token.Metadata?","description":"com.okta.authfoundation.credential.RoomTokenStorage.metadata","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/metadata.html","searchKeys":["metadata","open suspend override fun metadata(id: String): Token.Metadata?","com.okta.authfoundation.credential.RoomTokenStorage.metadata"]},{"name":"open suspend override fun remove(id: String)","description":"com.okta.authfoundation.credential.RoomTokenStorage.remove","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/remove.html","searchKeys":["remove","open suspend override fun remove(id: String)","com.okta.authfoundation.credential.RoomTokenStorage.remove"]},{"name":"open suspend override fun replace(token: Token)","description":"com.okta.authfoundation.credential.RoomTokenStorage.replace","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/replace.html","searchKeys":["replace","open suspend override fun replace(token: Token)","com.okta.authfoundation.credential.RoomTokenStorage.replace"]},{"name":"open suspend override fun setMetadata(metadata: Token.Metadata)","description":"com.okta.authfoundation.credential.RoomTokenStorage.setMetadata","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/set-metadata.html","searchKeys":["setMetadata","open suspend override fun setMetadata(metadata: Token.Metadata)","com.okta.authfoundation.credential.RoomTokenStorage.setMetadata"]},{"name":"operator fun component1(): ByteArray","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.component1","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/component1.html","searchKeys":["component1","operator fun component1(): ByteArray","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.component1"]},{"name":"operator fun component2(): Map<String, String>","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.component2","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/component2.html","searchKeys":["component2","operator fun component2(): Map<String, String>","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.component2"]},{"name":"sealed class OAuth2ClientResult<T>","description":"com.okta.authfoundation.client.OAuth2ClientResult","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/index.html","searchKeys":["OAuth2ClientResult","sealed class OAuth2ClientResult<T>","com.okta.authfoundation.client.OAuth2ClientResult"]},{"name":"sealed class OidcIntrospectInfo","description":"com.okta.authfoundation.client.dto.OidcIntrospectInfo","location":"auth-foundation/com.okta.authfoundation.client.dto/-oidc-introspect-info/index.html","searchKeys":["OidcIntrospectInfo","sealed class OidcIntrospectInfo","com.okta.authfoundation.client.dto.OidcIntrospectInfo"]},{"name":"sealed interface BiometricExceptionDetails","description":"com.okta.authfoundation.BiometricExceptionDetails","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/index.html","searchKeys":["BiometricExceptionDetails","sealed interface BiometricExceptionDetails","com.okta.authfoundation.BiometricExceptionDetails"]},{"name":"sealed interface Security","description":"com.okta.authfoundation.credential.Credential.Security","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/index.html","searchKeys":["Security","sealed interface Security","com.okta.authfoundation.credential.Credential.Security"]},{"name":"suspend fun <Raw, Dto> OAuth2Client.performRequest(deserializationStrategy: DeserializationStrategy<Raw>, request: Request, shouldAttemptJsonDeserialization: (Response) -> Boolean = { it.isSuccessful }, responseMapper: (Raw) -> Dto): OAuth2ClientResult<Dto>","description":"com.okta.authfoundation.client.internal.performRequest","location":"auth-foundation/com.okta.authfoundation.client.internal/perform-request.html","searchKeys":["performRequest","suspend fun <Raw, Dto> OAuth2Client.performRequest(deserializationStrategy: DeserializationStrategy<Raw>, request: Request, shouldAttemptJsonDeserialization: (Response) -> Boolean = { it.isSuccessful }, responseMapper: (Raw) -> Dto): OAuth2ClientResult<Dto>","com.okta.authfoundation.client.internal.performRequest"]},{"name":"suspend fun OAuth2Client.performRequest(request: Request): OAuth2ClientResult<Response>","description":"com.okta.authfoundation.client.internal.performRequest","location":"auth-foundation/com.okta.authfoundation.client.internal/perform-request.html","searchKeys":["performRequest","suspend fun OAuth2Client.performRequest(request: Request): OAuth2ClientResult<Response>","com.okta.authfoundation.client.internal.performRequest"]},{"name":"suspend fun allIds(): List<String>","description":"com.okta.authfoundation.credential.CredentialDataSource.allIds","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/all-ids.html","searchKeys":["allIds","suspend fun allIds(): List<String>","com.okta.authfoundation.credential.CredentialDataSource.allIds"]},{"name":"suspend fun allIdsAsync(): List<String>","description":"com.okta.authfoundation.credential.Credential.Companion.allIdsAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/all-ids-async.html","searchKeys":["allIdsAsync","suspend fun allIdsAsync(): List<String>","com.okta.authfoundation.credential.Credential.Companion.allIdsAsync"]},{"name":"suspend fun createCredential(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Credential.Security.standard): Credential","description":"com.okta.authfoundation.credential.CredentialDataSource.createCredential","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/create-credential.html","searchKeys":["createCredential","suspend fun createCredential(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Credential.Security.standard): Credential","com.okta.authfoundation.credential.CredentialDataSource.createCredential"]},{"name":"suspend fun deleteAsync()","description":"com.okta.authfoundation.credential.Credential.deleteAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/delete-async.html","searchKeys":["deleteAsync","suspend fun deleteAsync()","com.okta.authfoundation.credential.Credential.deleteAsync"]},{"name":"suspend fun endpointsOrNull(): OidcEndpoints?","description":"com.okta.authfoundation.client.OAuth2Client.endpointsOrNull","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/endpoints-or-null.html","searchKeys":["endpointsOrNull","suspend fun endpointsOrNull(): OidcEndpoints?","com.okta.authfoundation.client.OAuth2Client.endpointsOrNull"]},{"name":"suspend fun findAsync(promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","description":"com.okta.authfoundation.credential.Credential.Companion.findAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/find-async.html","searchKeys":["findAsync","suspend fun findAsync(promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","com.okta.authfoundation.credential.Credential.Companion.findAsync"]},{"name":"suspend fun findCredential(promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","description":"com.okta.authfoundation.credential.CredentialDataSource.findCredential","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/find-credential.html","searchKeys":["findCredential","suspend fun findCredential(promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo, where: (Token.Metadata) -> Boolean): List<Credential>","com.okta.authfoundation.credential.CredentialDataSource.findCredential"]},{"name":"suspend fun getCredential(id: String, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Credential?","description":"com.okta.authfoundation.credential.CredentialDataSource.getCredential","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/get-credential.html","searchKeys":["getCredential","suspend fun getCredential(id: String, promptInfo: BiometricPrompt.PromptInfo? = Credential.Security.promptInfo): Credential?","com.okta.authfoundation.credential.CredentialDataSource.getCredential"]},{"name":"suspend fun getDefaultAsync(): Credential?","description":"com.okta.authfoundation.credential.Credential.Companion.getDefaultAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/get-default-async.html","searchKeys":["getDefaultAsync","suspend fun getDefaultAsync(): Credential?","com.okta.authfoundation.credential.Credential.Companion.getDefaultAsync"]},{"name":"suspend fun getInstance(): CredentialDataSource","description":"com.okta.authfoundation.credential.CredentialDataSource.Companion.getInstance","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/-companion/get-instance.html","searchKeys":["getInstance","suspend fun getInstance(): CredentialDataSource","com.okta.authfoundation.credential.CredentialDataSource.Companion.getInstance"]},{"name":"suspend fun getInstance(): RoomTokenStorage","description":"com.okta.authfoundation.credential.RoomTokenStorage.Companion.getInstance","location":"auth-foundation/com.okta.authfoundation.credential/-room-token-storage/-companion/get-instance.html","searchKeys":["getInstance","suspend fun getInstance(): RoomTokenStorage","com.okta.authfoundation.credential.RoomTokenStorage.Companion.getInstance"]},{"name":"suspend fun getUserInfo(): OAuth2ClientResult<OidcUserInfo>","description":"com.okta.authfoundation.credential.Credential.getUserInfo","location":"auth-foundation/com.okta.authfoundation.credential/-credential/get-user-info.html","searchKeys":["getUserInfo","suspend fun getUserInfo(): OAuth2ClientResult<OidcUserInfo>","com.okta.authfoundation.credential.Credential.getUserInfo"]},{"name":"suspend fun getUserInfo(accessToken: String): OAuth2ClientResult<OidcUserInfo>","description":"com.okta.authfoundation.client.OAuth2Client.getUserInfo","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/get-user-info.html","searchKeys":["getUserInfo","suspend fun getUserInfo(accessToken: String): OAuth2ClientResult<OidcUserInfo>","com.okta.authfoundation.client.OAuth2Client.getUserInfo"]},{"name":"suspend fun getValidAccessToken(): String?","description":"com.okta.authfoundation.credential.Credential.getValidAccessToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential/get-valid-access-token.html","searchKeys":["getValidAccessToken","suspend fun getValidAccessToken(): String?","com.okta.authfoundation.credential.Credential.getValidAccessToken"]},{"name":"suspend fun hasValidSignature(jwks: Jwks): Boolean","description":"com.okta.authfoundation.jwt.Jwt.hasValidSignature","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/has-valid-signature.html","searchKeys":["hasValidSignature","suspend fun hasValidSignature(jwks: Jwks): Boolean","com.okta.authfoundation.jwt.Jwt.hasValidSignature"]},{"name":"suspend fun introspectToken(tokenType: TokenType): OAuth2ClientResult<OidcIntrospectInfo>","description":"com.okta.authfoundation.credential.Credential.introspectToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential/introspect-token.html","searchKeys":["introspectToken","suspend fun introspectToken(tokenType: TokenType): OAuth2ClientResult<OidcIntrospectInfo>","com.okta.authfoundation.credential.Credential.introspectToken"]},{"name":"suspend fun introspectToken(tokenType: TokenType, token: Token): OAuth2ClientResult<OidcIntrospectInfo>","description":"com.okta.authfoundation.client.OAuth2Client.introspectToken","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/introspect-token.html","searchKeys":["introspectToken","suspend fun introspectToken(tokenType: TokenType, token: Token): OAuth2ClientResult<OidcIntrospectInfo>","com.okta.authfoundation.client.OAuth2Client.introspectToken"]},{"name":"suspend fun jwks(): OAuth2ClientResult<Jwks>","description":"com.okta.authfoundation.client.OAuth2Client.jwks","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/jwks.html","searchKeys":["jwks","suspend fun jwks(): OAuth2ClientResult<Jwks>","com.okta.authfoundation.client.OAuth2Client.jwks"]},{"name":"suspend fun metadata(id: String): Token.Metadata?","description":"com.okta.authfoundation.credential.CredentialDataSource.metadata","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/metadata.html","searchKeys":["metadata","suspend fun metadata(id: String): Token.Metadata?","com.okta.authfoundation.credential.CredentialDataSource.metadata"]},{"name":"suspend fun metadataAsync(id: String): Token.Metadata?","description":"com.okta.authfoundation.credential.Credential.Companion.metadataAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/metadata-async.html","searchKeys":["metadataAsync","suspend fun metadataAsync(id: String): Token.Metadata?","com.okta.authfoundation.credential.Credential.Companion.metadataAsync"]},{"name":"suspend fun refreshToken(): OAuth2ClientResult<Token>","description":"com.okta.authfoundation.credential.Credential.refreshToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential/refresh-token.html","searchKeys":["refreshToken","suspend fun refreshToken(): OAuth2ClientResult<Token>","com.okta.authfoundation.credential.Credential.refreshToken"]},{"name":"suspend fun refreshToken(token: Token): OAuth2ClientResult<Token>","description":"com.okta.authfoundation.client.OAuth2Client.refreshToken","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/refresh-token.html","searchKeys":["refreshToken","suspend fun refreshToken(token: Token): OAuth2ClientResult<Token>","com.okta.authfoundation.client.OAuth2Client.refreshToken"]},{"name":"suspend fun remove(credential: Credential)","description":"com.okta.authfoundation.credential.CredentialDataSource.remove","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/remove.html","searchKeys":["remove","suspend fun remove(credential: Credential)","com.okta.authfoundation.credential.CredentialDataSource.remove"]},{"name":"suspend fun replaceToken(token: Token)","description":"com.okta.authfoundation.credential.CredentialDataSource.replaceToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/replace-token.html","searchKeys":["replaceToken","suspend fun replaceToken(token: Token)","com.okta.authfoundation.credential.CredentialDataSource.replaceToken"]},{"name":"suspend fun revokeAllTokens(): OAuth2ClientResult<Unit>","description":"com.okta.authfoundation.credential.Credential.revokeAllTokens","location":"auth-foundation/com.okta.authfoundation.credential/-credential/revoke-all-tokens.html","searchKeys":["revokeAllTokens","suspend fun revokeAllTokens(): OAuth2ClientResult<Unit>","com.okta.authfoundation.credential.Credential.revokeAllTokens"]},{"name":"suspend fun revokeToken(revokeTokenType: RevokeTokenType, token: Token): OAuth2ClientResult<Unit>","description":"com.okta.authfoundation.client.OAuth2Client.revokeToken","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/revoke-token.html","searchKeys":["revokeToken","suspend fun revokeToken(revokeTokenType: RevokeTokenType, token: Token): OAuth2ClientResult<Unit>","com.okta.authfoundation.client.OAuth2Client.revokeToken"]},{"name":"suspend fun revokeToken(tokenType: RevokeTokenType): OAuth2ClientResult<Unit>","description":"com.okta.authfoundation.credential.Credential.revokeToken","location":"auth-foundation/com.okta.authfoundation.credential/-credential/revoke-token.html","searchKeys":["revokeToken","suspend fun revokeToken(tokenType: RevokeTokenType): OAuth2ClientResult<Unit>","com.okta.authfoundation.credential.Credential.revokeToken"]},{"name":"suspend fun setDefaultAsync(credential: Credential?)","description":"com.okta.authfoundation.credential.Credential.Companion.setDefaultAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/set-default-async.html","searchKeys":["setDefaultAsync","suspend fun setDefaultAsync(credential: Credential?)","com.okta.authfoundation.credential.Credential.Companion.setDefaultAsync"]},{"name":"suspend fun setMetadata(metadata: Token.Metadata)","description":"com.okta.authfoundation.credential.CredentialDataSource.setMetadata","location":"auth-foundation/com.okta.authfoundation.credential/-credential-data-source/set-metadata.html","searchKeys":["setMetadata","suspend fun setMetadata(metadata: Token.Metadata)","com.okta.authfoundation.credential.CredentialDataSource.setMetadata"]},{"name":"suspend fun setMetadataAsync(metadata: Token.Metadata)","description":"com.okta.authfoundation.credential.Credential.Companion.setMetadataAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/set-metadata-async.html","searchKeys":["setMetadataAsync","suspend fun setMetadataAsync(metadata: Token.Metadata)","com.okta.authfoundation.credential.Credential.Companion.setMetadataAsync"]},{"name":"suspend fun setTagsAsync(tags: Map<String, String>)","description":"com.okta.authfoundation.credential.Credential.setTagsAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/set-tags-async.html","searchKeys":["setTagsAsync","suspend fun setTagsAsync(tags: Map<String, String>)","com.okta.authfoundation.credential.Credential.setTagsAsync"]},{"name":"suspend fun storeAsync(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Security.standard): Credential","description":"com.okta.authfoundation.credential.Credential.Companion.storeAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/store-async.html","searchKeys":["storeAsync","suspend fun storeAsync(token: Token, tags: Map<String, String> = emptyMap(), security: Credential.Security = Security.standard): Credential","com.okta.authfoundation.credential.Credential.Companion.storeAsync"]},{"name":"suspend fun tokenRequest(request: Request, nonce: String? = null, maxAge: Int? = null, requestToken: Token? = null): OAuth2ClientResult<Token>","description":"com.okta.authfoundation.client.OAuth2Client.tokenRequest","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/token-request.html","searchKeys":["tokenRequest","suspend fun tokenRequest(request: Request, nonce: String? = null, maxAge: Int? = null, requestToken: Token? = null): OAuth2ClientResult<Token>","com.okta.authfoundation.client.OAuth2Client.tokenRequest"]},{"name":"suspend fun withAsync(id: String, promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo): Credential?","description":"com.okta.authfoundation.credential.Credential.Companion.withAsync","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/with-async.html","searchKeys":["withAsync","suspend fun withAsync(id: String, promptInfo: BiometricPrompt.PromptInfo? = Security.promptInfo): Credential?","com.okta.authfoundation.credential.Credential.Companion.withAsync"]},{"name":"suspend tailrec fun get(): T","description":"com.okta.authfoundation.util.CoalescingOrchestrator.get","location":"auth-foundation/com.okta.authfoundation.util/-coalescing-orchestrator/get.html","searchKeys":["get","suspend tailrec fun get(): T","com.okta.authfoundation.util.CoalescingOrchestrator.get"]},{"name":"typealias OidcClient = OAuth2Client","description":"com.okta.authfoundation.client.OidcClient","location":"auth-foundation/com.okta.authfoundation.client/-oidc-client/index.html","searchKeys":["OidcClient","typealias OidcClient = OAuth2Client","com.okta.authfoundation.client.OidcClient"]},{"name":"val ClaimsProvider.active: Boolean?","description":"com.okta.authfoundation.claims.active","location":"auth-foundation/com.okta.authfoundation.claims/active.html","searchKeys":["active","val ClaimsProvider.active: Boolean?","com.okta.authfoundation.claims.active"]},{"name":"val ClaimsProvider.audience: String?","description":"com.okta.authfoundation.claims.audience","location":"auth-foundation/com.okta.authfoundation.claims/audience.html","searchKeys":["audience","val ClaimsProvider.audience: String?","com.okta.authfoundation.claims.audience"]},{"name":"val ClaimsProvider.authContextClassReference: String?","description":"com.okta.authfoundation.claims.authContextClassReference","location":"auth-foundation/com.okta.authfoundation.claims/auth-context-class-reference.html","searchKeys":["authContextClassReference","val ClaimsProvider.authContextClassReference: String?","com.okta.authfoundation.claims.authContextClassReference"]},{"name":"val ClaimsProvider.authMethodsReference: List<String>?","description":"com.okta.authfoundation.claims.authMethodsReference","location":"auth-foundation/com.okta.authfoundation.claims/auth-methods-reference.html","searchKeys":["authMethodsReference","val ClaimsProvider.authMethodsReference: List<String>?","com.okta.authfoundation.claims.authMethodsReference"]},{"name":"val ClaimsProvider.clientId: String?","description":"com.okta.authfoundation.claims.clientId","location":"auth-foundation/com.okta.authfoundation.claims/client-id.html","searchKeys":["clientId","val ClaimsProvider.clientId: String?","com.okta.authfoundation.claims.clientId"]},{"name":"val ClaimsProvider.deviceId: String?","description":"com.okta.authfoundation.claims.deviceId","location":"auth-foundation/com.okta.authfoundation.claims/device-id.html","searchKeys":["deviceId","val ClaimsProvider.deviceId: String?","com.okta.authfoundation.claims.deviceId"]},{"name":"val ClaimsProvider.email: String?","description":"com.okta.authfoundation.claims.email","location":"auth-foundation/com.okta.authfoundation.claims/email.html","searchKeys":["email","val ClaimsProvider.email: String?","com.okta.authfoundation.claims.email"]},{"name":"val ClaimsProvider.expirationTime: Int?","description":"com.okta.authfoundation.claims.expirationTime","location":"auth-foundation/com.okta.authfoundation.claims/expiration-time.html","searchKeys":["expirationTime","val ClaimsProvider.expirationTime: Int?","com.okta.authfoundation.claims.expirationTime"]},{"name":"val ClaimsProvider.familyName: String?","description":"com.okta.authfoundation.claims.familyName","location":"auth-foundation/com.okta.authfoundation.claims/family-name.html","searchKeys":["familyName","val ClaimsProvider.familyName: String?","com.okta.authfoundation.claims.familyName"]},{"name":"val ClaimsProvider.gender: String?","description":"com.okta.authfoundation.claims.gender","location":"auth-foundation/com.okta.authfoundation.claims/gender.html","searchKeys":["gender","val ClaimsProvider.gender: String?","com.okta.authfoundation.claims.gender"]},{"name":"val ClaimsProvider.givenName: String?","description":"com.okta.authfoundation.claims.givenName","location":"auth-foundation/com.okta.authfoundation.claims/given-name.html","searchKeys":["givenName","val ClaimsProvider.givenName: String?","com.okta.authfoundation.claims.givenName"]},{"name":"val ClaimsProvider.issuedAt: Int?","description":"com.okta.authfoundation.claims.issuedAt","location":"auth-foundation/com.okta.authfoundation.claims/issued-at.html","searchKeys":["issuedAt","val ClaimsProvider.issuedAt: Int?","com.okta.authfoundation.claims.issuedAt"]},{"name":"val ClaimsProvider.issuer: String?","description":"com.okta.authfoundation.claims.issuer","location":"auth-foundation/com.okta.authfoundation.claims/issuer.html","searchKeys":["issuer","val ClaimsProvider.issuer: String?","com.okta.authfoundation.claims.issuer"]},{"name":"val ClaimsProvider.jwtId: String?","description":"com.okta.authfoundation.claims.jwtId","location":"auth-foundation/com.okta.authfoundation.claims/jwt-id.html","searchKeys":["jwtId","val ClaimsProvider.jwtId: String?","com.okta.authfoundation.claims.jwtId"]},{"name":"val ClaimsProvider.middleName: String?","description":"com.okta.authfoundation.claims.middleName","location":"auth-foundation/com.okta.authfoundation.claims/middle-name.html","searchKeys":["middleName","val ClaimsProvider.middleName: String?","com.okta.authfoundation.claims.middleName"]},{"name":"val ClaimsProvider.name: String?","description":"com.okta.authfoundation.claims.name","location":"auth-foundation/com.okta.authfoundation.claims/name.html","searchKeys":["name","val ClaimsProvider.name: String?","com.okta.authfoundation.claims.name"]},{"name":"val ClaimsProvider.nickname: String?","description":"com.okta.authfoundation.claims.nickname","location":"auth-foundation/com.okta.authfoundation.claims/nickname.html","searchKeys":["nickname","val ClaimsProvider.nickname: String?","com.okta.authfoundation.claims.nickname"]},{"name":"val ClaimsProvider.notBefore: Int?","description":"com.okta.authfoundation.claims.notBefore","location":"auth-foundation/com.okta.authfoundation.claims/not-before.html","searchKeys":["notBefore","val ClaimsProvider.notBefore: Int?","com.okta.authfoundation.claims.notBefore"]},{"name":"val ClaimsProvider.phoneNumber: String?","description":"com.okta.authfoundation.claims.phoneNumber","location":"auth-foundation/com.okta.authfoundation.claims/phone-number.html","searchKeys":["phoneNumber","val ClaimsProvider.phoneNumber: String?","com.okta.authfoundation.claims.phoneNumber"]},{"name":"val ClaimsProvider.preferredUsername: String?","description":"com.okta.authfoundation.claims.preferredUsername","location":"auth-foundation/com.okta.authfoundation.claims/preferred-username.html","searchKeys":["preferredUsername","val ClaimsProvider.preferredUsername: String?","com.okta.authfoundation.claims.preferredUsername"]},{"name":"val ClaimsProvider.scope: String?","description":"com.okta.authfoundation.claims.scope","location":"auth-foundation/com.okta.authfoundation.claims/scope.html","searchKeys":["scope","val ClaimsProvider.scope: String?","com.okta.authfoundation.claims.scope"]},{"name":"val ClaimsProvider.subject: String?","description":"com.okta.authfoundation.claims.subject","location":"auth-foundation/com.okta.authfoundation.claims/subject.html","searchKeys":["subject","val ClaimsProvider.subject: String?","com.okta.authfoundation.claims.subject"]},{"name":"val ClaimsProvider.tokenType: String?","description":"com.okta.authfoundation.claims.tokenType","location":"auth-foundation/com.okta.authfoundation.claims/token-type.html","searchKeys":["tokenType","val ClaimsProvider.tokenType: String?","com.okta.authfoundation.claims.tokenType"]},{"name":"val ClaimsProvider.userId: String?","description":"com.okta.authfoundation.claims.userId","location":"auth-foundation/com.okta.authfoundation.claims/user-id.html","searchKeys":["userId","val ClaimsProvider.userId: String?","com.okta.authfoundation.claims.userId"]},{"name":"val ClaimsProvider.username: String?","description":"com.okta.authfoundation.claims.username","location":"auth-foundation/com.okta.authfoundation.claims/username.html","searchKeys":["username","val ClaimsProvider.username: String?","com.okta.authfoundation.claims.username"]},{"name":"val accessToken: String","description":"com.okta.authfoundation.credential.Token.accessToken","location":"auth-foundation/com.okta.authfoundation.credential/-token/access-token.html","searchKeys":["accessToken","val accessToken: String","com.okta.authfoundation.credential.Token.accessToken"]},{"name":"val accessTokenValidator: AccessTokenValidator","description":"com.okta.authfoundation.client.OidcConfiguration.accessTokenValidator","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/access-token-validator.html","searchKeys":["accessTokenValidator","val accessTokenValidator: AccessTokenValidator","com.okta.authfoundation.client.OidcConfiguration.accessTokenValidator"]},{"name":"val active: Boolean","description":"com.okta.authfoundation.client.dto.OidcIntrospectInfo.active","location":"auth-foundation/com.okta.authfoundation.client.dto/-oidc-introspect-info/active.html","searchKeys":["active","val active: Boolean","com.okta.authfoundation.client.dto.OidcIntrospectInfo.active"]},{"name":"val algorithm: String","description":"com.okta.authfoundation.jwt.Jwt.algorithm","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/algorithm.html","searchKeys":["algorithm","val algorithm: String","com.okta.authfoundation.jwt.Jwt.algorithm"]},{"name":"val allIds: List<String>","description":"com.okta.authfoundation.credential.Credential.Companion.allIds","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/all-ids.html","searchKeys":["allIds","val allIds: List<String>","com.okta.authfoundation.credential.Credential.Companion.allIds"]},{"name":"val authorizationEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.authorizationEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/authorization-endpoint.html","searchKeys":["authorizationEndpoint","val authorizationEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.authorizationEndpoint"]},{"name":"val biometricExceptionDetails: BiometricExceptionDetails","description":"com.okta.authfoundation.BiometricAuthenticationException.biometricExceptionDetails","location":"auth-foundation/com.okta.authfoundation/-biometric-authentication-exception/biometric-exception-details.html","searchKeys":["biometricExceptionDetails","val biometricExceptionDetails: BiometricExceptionDetails","com.okta.authfoundation.BiometricAuthenticationException.biometricExceptionDetails"]},{"name":"val cacheFactory: suspend () -> Cache","description":"com.okta.authfoundation.client.OidcConfiguration.cacheFactory","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/cache-factory.html","searchKeys":["cacheFactory","val cacheFactory: suspend () -> Cache","com.okta.authfoundation.client.OidcConfiguration.cacheFactory"]},{"name":"val claimsProvider: ClaimsProvider?","description":"com.okta.authfoundation.credential.Token.Metadata.claimsProvider","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/claims-provider.html","searchKeys":["claimsProvider","val claimsProvider: ClaimsProvider?","com.okta.authfoundation.credential.Token.Metadata.claimsProvider"]},{"name":"val clientId: String","description":"com.okta.authfoundation.client.OidcConfiguration.clientId","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/client-id.html","searchKeys":["clientId","val clientId: String","com.okta.authfoundation.client.OidcConfiguration.clientId"]},{"name":"val clock: OidcClock","description":"com.okta.authfoundation.client.OidcConfiguration.clock","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/clock.html","searchKeys":["clock","val clock: OidcClock","com.okta.authfoundation.client.OidcConfiguration.clock"]},{"name":"val computeDispatcher: CoroutineContext","description":"com.okta.authfoundation.client.OidcConfiguration.computeDispatcher","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/compute-dispatcher.html","searchKeys":["computeDispatcher","val computeDispatcher: CoroutineContext","com.okta.authfoundation.client.OidcConfiguration.computeDispatcher"]},{"name":"val configuration: OidcConfiguration","description":"com.okta.authfoundation.client.OAuth2Client.configuration","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/configuration.html","searchKeys":["configuration","val configuration: OidcConfiguration","com.okta.authfoundation.client.OAuth2Client.configuration"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.CredentialCreatedEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-created-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.CredentialCreatedEvent.credential"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.CredentialDeletedEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-deleted-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.CredentialDeletedEvent.credential"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.CredentialStoredAfterRemovedEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-after-removed-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.CredentialStoredAfterRemovedEvent.credential"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.CredentialStoredEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.CredentialStoredEvent.credential"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.DefaultCredentialChangedEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-default-credential-changed-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.DefaultCredentialChangedEvent.credential"]},{"name":"val credential: Credential","description":"com.okta.authfoundation.credential.events.NoAccessTokenAvailableEvent.credential","location":"auth-foundation/com.okta.authfoundation.credential.events/-no-access-token-available-event/credential.html","searchKeys":["credential","val credential: Credential","com.okta.authfoundation.credential.events.NoAccessTokenAvailableEvent.credential"]},{"name":"val default: OAuth2Client","description":"com.okta.authfoundation.client.OAuth2Client.Companion.default","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client/-companion/default.html","searchKeys":["default","val default: OAuth2Client","com.okta.authfoundation.client.OAuth2Client.Companion.default"]},{"name":"val defaultScope: String","description":"com.okta.authfoundation.client.OidcConfiguration.defaultScope","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/default-scope.html","searchKeys":["defaultScope","val defaultScope: String","com.okta.authfoundation.client.OidcConfiguration.defaultScope"]},{"name":"val deviceAuthorizationEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.deviceAuthorizationEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/device-authorization-endpoint.html","searchKeys":["deviceAuthorizationEndpoint","val deviceAuthorizationEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.deviceAuthorizationEndpoint"]},{"name":"val deviceSecret: String?","description":"com.okta.authfoundation.credential.Token.deviceSecret","location":"auth-foundation/com.okta.authfoundation.credential/-token/device-secret.html","searchKeys":["deviceSecret","val deviceSecret: String?","com.okta.authfoundation.credential.Token.deviceSecret"]},{"name":"val deviceSecretValidator: DeviceSecretValidator","description":"com.okta.authfoundation.client.OidcConfiguration.deviceSecretValidator","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/device-secret-validator.html","searchKeys":["deviceSecretValidator","val deviceSecretValidator: DeviceSecretValidator","com.okta.authfoundation.client.OidcConfiguration.deviceSecretValidator"]},{"name":"val discoveryUrl: String","description":"com.okta.authfoundation.client.OidcConfiguration.discoveryUrl","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/discovery-url.html","searchKeys":["discoveryUrl","val discoveryUrl: String","com.okta.authfoundation.client.OidcConfiguration.discoveryUrl"]},{"name":"val encryptedToken: ByteArray","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.encryptedToken","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/encrypted-token.html","searchKeys":["encryptedToken","val encryptedToken: ByteArray","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.encryptedToken"]},{"name":"val encryptionExtras: Map<String, String>","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.encryptionExtras","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-encryption-result/encryption-extras.html","searchKeys":["encryptionExtras","val encryptionExtras: Map<String, String>","com.okta.authfoundation.credential.TokenEncryptionHandler.EncryptionResult.encryptionExtras"]},{"name":"val endSessionEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.endSessionEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/end-session-endpoint.html","searchKeys":["endSessionEndpoint","val endSessionEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.endSessionEndpoint"]},{"name":"val entries: EnumEntries<RevokeTokenType>","description":"com.okta.authfoundation.credential.RevokeTokenType.entries","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-token-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevokeTokenType>","com.okta.authfoundation.credential.RevokeTokenType.entries"]},{"name":"val entries: EnumEntries<TokenType>","description":"com.okta.authfoundation.credential.TokenType.entries","location":"auth-foundation/com.okta.authfoundation.credential/-token-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TokenType>","com.okta.authfoundation.credential.TokenType.entries"]},{"name":"val errString: CharSequence","description":"com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.errString","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/-on-authentication-error/err-string.html","searchKeys":["errString","val errString: CharSequence","com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.errString"]},{"name":"val error: String?","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.error","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-http-response-exception/error.html","searchKeys":["error","val error: String?","com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.error"]},{"name":"val errorCode: Int","description":"com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.errorCode","location":"auth-foundation/com.okta.authfoundation/-biometric-exception-details/-on-authentication-error/error-code.html","searchKeys":["errorCode","val errorCode: Int","com.okta.authfoundation.BiometricExceptionDetails.OnAuthenticationError.errorCode"]},{"name":"val errorDescription: String?","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.errorDescription","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-http-response-exception/error-description.html","searchKeys":["errorDescription","val errorDescription: String?","com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.errorDescription"]},{"name":"val eventCoordinator: EventCoordinator","description":"com.okta.authfoundation.client.OidcConfiguration.eventCoordinator","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/event-coordinator.html","searchKeys":["eventCoordinator","val eventCoordinator: EventCoordinator","com.okta.authfoundation.client.OidcConfiguration.eventCoordinator"]},{"name":"val exception: Exception","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.exception","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/exception.html","searchKeys":["exception","val exception: Exception","com.okta.authfoundation.client.OAuth2ClientResult.Error.exception"]},{"name":"val exception: Exception","description":"com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent.exception","location":"auth-foundation/com.okta.authfoundation.credential.events/-token-storage-access-error-event/exception.html","searchKeys":["exception","val exception: Exception","com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent.exception"]},{"name":"val expiresIn: Int","description":"com.okta.authfoundation.credential.Token.expiresIn","location":"auth-foundation/com.okta.authfoundation.credential/-token/expires-in.html","searchKeys":["expiresIn","val expiresIn: Int","com.okta.authfoundation.credential.Token.expiresIn"]},{"name":"val failures: Map<RevokeTokenType, Exception>","description":"com.okta.authfoundation.credential.RevokeAllException.failures","location":"auth-foundation/com.okta.authfoundation.credential/-revoke-all-exception/failures.html","searchKeys":["failures","val failures: Map<RevokeTokenType, Exception>","com.okta.authfoundation.credential.RevokeAllException.failures"]},{"name":"val id: String","description":"com.okta.authfoundation.credential.Credential.id","location":"auth-foundation/com.okta.authfoundation.credential/-credential/id.html","searchKeys":["id","val id: String","com.okta.authfoundation.credential.Credential.id"]},{"name":"val id: String","description":"com.okta.authfoundation.credential.Token.Metadata.id","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/id.html","searchKeys":["id","val id: String","com.okta.authfoundation.credential.Token.Metadata.id"]},{"name":"val idToken: String?","description":"com.okta.authfoundation.credential.Token.idToken","location":"auth-foundation/com.okta.authfoundation.credential/-token/id-token.html","searchKeys":["idToken","val idToken: String?","com.okta.authfoundation.credential.Token.idToken"]},{"name":"val idTokenValidator: IdTokenValidator","description":"com.okta.authfoundation.client.OidcConfiguration.idTokenValidator","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/id-token-validator.html","searchKeys":["idTokenValidator","val idTokenValidator: IdTokenValidator","com.okta.authfoundation.client.OidcConfiguration.idTokenValidator"]},{"name":"val identifier: String","description":"com.okta.authfoundation.client.IdTokenValidator.Error.identifier","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-error/identifier.html","searchKeys":["identifier","val identifier: String","com.okta.authfoundation.client.IdTokenValidator.Error.identifier"]},{"name":"val identifier: String","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.identifier","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/identifier.html","searchKeys":["identifier","val identifier: String","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.identifier"]},{"name":"val introspectionEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.introspectionEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/introspection-endpoint.html","searchKeys":["introspectionEndpoint","val introspectionEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.introspectionEndpoint"]},{"name":"val ioDispatcher: CoroutineContext","description":"com.okta.authfoundation.client.OidcConfiguration.ioDispatcher","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/io-dispatcher.html","searchKeys":["ioDispatcher","val ioDispatcher: CoroutineContext","com.okta.authfoundation.client.OidcConfiguration.ioDispatcher"]},{"name":"val issuedTokenType: String?","description":"com.okta.authfoundation.credential.Token.issuedTokenType","location":"auth-foundation/com.okta.authfoundation.credential/-token/issued-token-type.html","searchKeys":["issuedTokenType","val issuedTokenType: String?","com.okta.authfoundation.credential.Token.issuedTokenType"]},{"name":"val issuer: HttpUrl","description":"com.okta.authfoundation.client.OidcEndpoints.issuer","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/issuer.html","searchKeys":["issuer","val issuer: HttpUrl","com.okta.authfoundation.client.OidcEndpoints.issuer"]},{"name":"val json: Json","description":"com.okta.authfoundation.client.OidcConfiguration.json","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/json.html","searchKeys":["json","val json: Json","com.okta.authfoundation.client.OidcConfiguration.json"]},{"name":"val jwksUri: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.jwksUri","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/jwks-uri.html","searchKeys":["jwksUri","val jwksUri: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.jwksUri"]},{"name":"val keyAlias: String","description":"com.okta.authfoundation.credential.events.BiometricKeyInvalidatedEvent.keyAlias","location":"auth-foundation/com.okta.authfoundation.credential.events/-biometric-key-invalidated-event/key-alias.html","searchKeys":["keyAlias","val keyAlias: String","com.okta.authfoundation.credential.events.BiometricKeyInvalidatedEvent.keyAlias"]},{"name":"val keyId: String","description":"com.okta.authfoundation.jwt.Jwt.keyId","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/key-id.html","searchKeys":["keyId","val keyId: String","com.okta.authfoundation.jwt.Jwt.keyId"]},{"name":"val keyStore: KeyStore","description":"com.okta.authfoundation.util.AndroidKeystoreUtil.keyStore","location":"auth-foundation/com.okta.authfoundation.util/-android-keystore-util/key-store.html","searchKeys":["keyStore","val keyStore: KeyStore","com.okta.authfoundation.util.AndroidKeystoreUtil.keyStore"]},{"name":"val maxAge: Int?","description":"com.okta.authfoundation.client.IdTokenValidator.Parameters.maxAge","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-parameters/max-age.html","searchKeys":["maxAge","val maxAge: Int?","com.okta.authfoundation.client.IdTokenValidator.Parameters.maxAge"]},{"name":"val nonce: String?","description":"com.okta.authfoundation.client.IdTokenValidator.Parameters.nonce","location":"auth-foundation/com.okta.authfoundation.client/-id-token-validator/-parameters/nonce.html","searchKeys":["nonce","val nonce: String?","com.okta.authfoundation.client.IdTokenValidator.Parameters.nonce"]},{"name":"val oidcConfiguration: OidcConfiguration","description":"com.okta.authfoundation.credential.Token.oidcConfiguration","location":"auth-foundation/com.okta.authfoundation.credential/-token/oidc-configuration.html","searchKeys":["oidcConfiguration","val oidcConfiguration: OidcConfiguration","com.okta.authfoundation.credential.Token.oidcConfiguration"]},{"name":"val okHttpClient: Call.Factory","description":"com.okta.authfoundation.client.OidcConfiguration.okHttpClient","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/ok-http-client.html","searchKeys":["okHttpClient","val okHttpClient: Call.Factory","com.okta.authfoundation.client.OidcConfiguration.okHttpClient"]},{"name":"val okHttpClientFactory: () -> Call.Factory","description":"com.okta.authfoundation.client.OidcConfiguration.okHttpClientFactory","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/ok-http-client-factory.html","searchKeys":["okHttpClientFactory","val okHttpClientFactory: () -> Call.Factory","com.okta.authfoundation.client.OidcConfiguration.okHttpClientFactory"]},{"name":"val payloadData: JsonObject?","description":"com.okta.authfoundation.credential.Token.Metadata.payloadData","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/payload-data.html","searchKeys":["payloadData","val payloadData: JsonObject?","com.okta.authfoundation.credential.Token.Metadata.payloadData"]},{"name":"val rawValue: String","description":"com.okta.authfoundation.jwt.Jwt.rawValue","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/raw-value.html","searchKeys":["rawValue","val rawValue: String","com.okta.authfoundation.jwt.Jwt.rawValue"]},{"name":"val refreshToken: String?","description":"com.okta.authfoundation.credential.Token.refreshToken","location":"auth-foundation/com.okta.authfoundation.credential/-token/refresh-token.html","searchKeys":["refreshToken","val refreshToken: String?","com.okta.authfoundation.credential.Token.refreshToken"]},{"name":"val request: Request","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent.request","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/request.html","searchKeys":["request","val request: Request","com.okta.authfoundation.client.events.RateLimitExceededEvent.request"]},{"name":"val response: Response","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent.response","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/response.html","searchKeys":["response","val response: Response","com.okta.authfoundation.client.events.RateLimitExceededEvent.response"]},{"name":"val responseCode: Int","description":"com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.responseCode","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-error/-http-response-exception/response-code.html","searchKeys":["responseCode","val responseCode: Int","com.okta.authfoundation.client.OAuth2ClientResult.Error.HttpResponseException.responseCode"]},{"name":"val result: T","description":"com.okta.authfoundation.client.OAuth2ClientResult.Success.result","location":"auth-foundation/com.okta.authfoundation.client/-o-auth2-client-result/-success/result.html","searchKeys":["result","val result: T","com.okta.authfoundation.client.OAuth2ClientResult.Success.result"]},{"name":"val retryCount: Int","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent.retryCount","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/retry-count.html","searchKeys":["retryCount","val retryCount: Int","com.okta.authfoundation.client.events.RateLimitExceededEvent.retryCount"]},{"name":"val revocationEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.revocationEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/revocation-endpoint.html","searchKeys":["revocationEndpoint","val revocationEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.revocationEndpoint"]},{"name":"val scope: String?","description":"com.okta.authfoundation.credential.Token.scope","location":"auth-foundation/com.okta.authfoundation.credential/-token/scope.html","searchKeys":["scope","val scope: String?","com.okta.authfoundation.credential.Token.scope"]},{"name":"val signature: String","description":"com.okta.authfoundation.jwt.Jwt.signature","location":"auth-foundation/com.okta.authfoundation.jwt/-jwt/signature.html","searchKeys":["signature","val signature: String","com.okta.authfoundation.jwt.Jwt.signature"]},{"name":"val tags: Map<String, String>","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.tags","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.tags"]},{"name":"val tags: Map<String, String>","description":"com.okta.authfoundation.credential.Token.Metadata.tags","location":"auth-foundation/com.okta.authfoundation.credential/-token/-metadata/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.okta.authfoundation.credential.Token.Metadata.tags"]},{"name":"val tags: Map<String, String>","description":"com.okta.authfoundation.credential.events.CredentialStoredEvent.tags","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-event/tags.html","searchKeys":["tags","val tags: Map<String, String>","com.okta.authfoundation.credential.events.CredentialStoredEvent.tags"]},{"name":"val token: Token","description":"com.okta.authfoundation.client.events.TokenCreatedEvent.token","location":"auth-foundation/com.okta.authfoundation.client.events/-token-created-event/token.html","searchKeys":["token","val token: Token","com.okta.authfoundation.client.events.TokenCreatedEvent.token"]},{"name":"val token: Token?","description":"com.okta.authfoundation.credential.LegacyTokenStorage.Entry.token","location":"auth-foundation/com.okta.authfoundation.credential/-legacy-token-storage/-entry/token.html","searchKeys":["token","val token: Token?","com.okta.authfoundation.credential.LegacyTokenStorage.Entry.token"]},{"name":"val token: Token?","description":"com.okta.authfoundation.credential.events.CredentialStoredEvent.token","location":"auth-foundation/com.okta.authfoundation.credential.events/-credential-stored-event/token.html","searchKeys":["token","val token: Token?","com.okta.authfoundation.credential.events.CredentialStoredEvent.token"]},{"name":"val tokenEndpoint: HttpUrl","description":"com.okta.authfoundation.client.OidcEndpoints.tokenEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/token-endpoint.html","searchKeys":["tokenEndpoint","val tokenEndpoint: HttpUrl","com.okta.authfoundation.client.OidcEndpoints.tokenEndpoint"]},{"name":"val tokenId: String","description":"com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent.tokenId","location":"auth-foundation/com.okta.authfoundation.credential.events/-biometric-token-invalidated-event/token-id.html","searchKeys":["tokenId","val tokenId: String","com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent.tokenId"]},{"name":"val tokenType: String","description":"com.okta.authfoundation.credential.Token.tokenType","location":"auth-foundation/com.okta.authfoundation.credential/-token/token-type.html","searchKeys":["tokenType","val tokenType: String","com.okta.authfoundation.credential.Token.tokenType"]},{"name":"val userInfoEndpoint: HttpUrl?","description":"com.okta.authfoundation.client.OidcEndpoints.userInfoEndpoint","location":"auth-foundation/com.okta.authfoundation.client/-oidc-endpoints/user-info-endpoint.html","searchKeys":["userInfoEndpoint","val userInfoEndpoint: HttpUrl?","com.okta.authfoundation.client.OidcEndpoints.userInfoEndpoint"]},{"name":"var accessTokenValidator: AccessTokenValidator","description":"com.okta.authfoundation.AuthFoundationDefaults.accessTokenValidator","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/access-token-validator.html","searchKeys":["accessTokenValidator","var accessTokenValidator: AccessTokenValidator","com.okta.authfoundation.AuthFoundationDefaults.accessTokenValidator"]},{"name":"var cacheFactory: suspend () -> Cache","description":"com.okta.authfoundation.AuthFoundationDefaults.cacheFactory","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/cache-factory.html","searchKeys":["cacheFactory","var cacheFactory: suspend () -> Cache","com.okta.authfoundation.AuthFoundationDefaults.cacheFactory"]},{"name":"var clock: OidcClock","description":"com.okta.authfoundation.AuthFoundationDefaults.clock","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/clock.html","searchKeys":["clock","var clock: OidcClock","com.okta.authfoundation.AuthFoundationDefaults.clock"]},{"name":"var computeDispatcher: CoroutineContext","description":"com.okta.authfoundation.AuthFoundationDefaults.computeDispatcher","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/compute-dispatcher.html","searchKeys":["computeDispatcher","var computeDispatcher: CoroutineContext","com.okta.authfoundation.AuthFoundationDefaults.computeDispatcher"]},{"name":"var cookieJar: CookieJar","description":"com.okta.authfoundation.AuthFoundationDefaults.cookieJar","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/cookie-jar.html","searchKeys":["cookieJar","var cookieJar: CookieJar","com.okta.authfoundation.AuthFoundationDefaults.cookieJar"]},{"name":"var default: Credential?","description":"com.okta.authfoundation.credential.Credential.Companion.default","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-companion/default.html","searchKeys":["default","var default: Credential?","com.okta.authfoundation.credential.Credential.Companion.default"]},{"name":"var default: OidcConfiguration","description":"com.okta.authfoundation.client.OidcConfiguration.Companion.default","location":"auth-foundation/com.okta.authfoundation.client/-oidc-configuration/-companion/default.html","searchKeys":["default","var default: OidcConfiguration","com.okta.authfoundation.client.OidcConfiguration.Companion.default"]},{"name":"var deleteInvalidatedToken: Boolean","description":"com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent.deleteInvalidatedToken","location":"auth-foundation/com.okta.authfoundation.credential.events/-biometric-token-invalidated-event/delete-invalidated-token.html","searchKeys":["deleteInvalidatedToken","var deleteInvalidatedToken: Boolean","com.okta.authfoundation.credential.events.BiometricTokenInvalidatedEvent.deleteInvalidatedToken"]},{"name":"var deviceSecretValidator: DeviceSecretValidator","description":"com.okta.authfoundation.AuthFoundationDefaults.deviceSecretValidator","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/device-secret-validator.html","searchKeys":["deviceSecretValidator","var deviceSecretValidator: DeviceSecretValidator","com.okta.authfoundation.AuthFoundationDefaults.deviceSecretValidator"]},{"name":"var eventCoordinator: EventCoordinator","description":"com.okta.authfoundation.AuthFoundationDefaults.eventCoordinator","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/event-coordinator.html","searchKeys":["eventCoordinator","var eventCoordinator: EventCoordinator","com.okta.authfoundation.AuthFoundationDefaults.eventCoordinator"]},{"name":"var getAccessTokenValidator: () -> AccessTokenValidator","description":"com.okta.authfoundation.SdkDefaults.getAccessTokenValidator","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-access-token-validator.html","searchKeys":["getAccessTokenValidator","var getAccessTokenValidator: () -> AccessTokenValidator","com.okta.authfoundation.SdkDefaults.getAccessTokenValidator"]},{"name":"var getCacheFactory: () -> suspend () -> Cache","description":"com.okta.authfoundation.SdkDefaults.getCacheFactory","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-cache-factory.html","searchKeys":["getCacheFactory","var getCacheFactory: () -> suspend () -> Cache","com.okta.authfoundation.SdkDefaults.getCacheFactory"]},{"name":"var getClock: () -> OidcClock","description":"com.okta.authfoundation.SdkDefaults.getClock","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-clock.html","searchKeys":["getClock","var getClock: () -> OidcClock","com.okta.authfoundation.SdkDefaults.getClock"]},{"name":"var getComputeDispatcher: () -> CoroutineContext","description":"com.okta.authfoundation.SdkDefaults.getComputeDispatcher","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-compute-dispatcher.html","searchKeys":["getComputeDispatcher","var getComputeDispatcher: () -> CoroutineContext","com.okta.authfoundation.SdkDefaults.getComputeDispatcher"]},{"name":"var getCookieJar: () -> CookieJar","description":"com.okta.authfoundation.SdkDefaults.getCookieJar","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-cookie-jar.html","searchKeys":["getCookieJar","var getCookieJar: () -> CookieJar","com.okta.authfoundation.SdkDefaults.getCookieJar"]},{"name":"var getDeviceSecretValidator: () -> DeviceSecretValidator","description":"com.okta.authfoundation.SdkDefaults.getDeviceSecretValidator","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-device-secret-validator.html","searchKeys":["getDeviceSecretValidator","var getDeviceSecretValidator: () -> DeviceSecretValidator","com.okta.authfoundation.SdkDefaults.getDeviceSecretValidator"]},{"name":"var getEventCoordinator: () -> EventCoordinator","description":"com.okta.authfoundation.SdkDefaults.getEventCoordinator","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-event-coordinator.html","searchKeys":["getEventCoordinator","var getEventCoordinator: () -> EventCoordinator","com.okta.authfoundation.SdkDefaults.getEventCoordinator"]},{"name":"var getIdTokenValidator: () -> IdTokenValidator","description":"com.okta.authfoundation.SdkDefaults.getIdTokenValidator","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-id-token-validator.html","searchKeys":["getIdTokenValidator","var getIdTokenValidator: () -> IdTokenValidator","com.okta.authfoundation.SdkDefaults.getIdTokenValidator"]},{"name":"var getIoDispatcher: () -> CoroutineContext","description":"com.okta.authfoundation.SdkDefaults.getIoDispatcher","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-io-dispatcher.html","searchKeys":["getIoDispatcher","var getIoDispatcher: () -> CoroutineContext","com.okta.authfoundation.SdkDefaults.getIoDispatcher"]},{"name":"var getLoginCancellationDebounceTime: () -> Duration","description":"com.okta.authfoundation.SdkDefaults.getLoginCancellationDebounceTime","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-login-cancellation-debounce-time.html","searchKeys":["getLoginCancellationDebounceTime","var getLoginCancellationDebounceTime: () -> Duration","com.okta.authfoundation.SdkDefaults.getLoginCancellationDebounceTime"]},{"name":"var getOkHttpClientFactory: () -> () -> Call.Factory","description":"com.okta.authfoundation.SdkDefaults.getOkHttpClientFactory","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-ok-http-client-factory.html","searchKeys":["getOkHttpClientFactory","var getOkHttpClientFactory: () -> () -> Call.Factory","com.okta.authfoundation.SdkDefaults.getOkHttpClientFactory"]},{"name":"var getTokenEncryptionHandler: () -> TokenEncryptionHandler","description":"com.okta.authfoundation.SdkDefaults.getTokenEncryptionHandler","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-token-encryption-handler.html","searchKeys":["getTokenEncryptionHandler","var getTokenEncryptionHandler: () -> TokenEncryptionHandler","com.okta.authfoundation.SdkDefaults.getTokenEncryptionHandler"]},{"name":"var getTokenStorageFactory: () -> suspend () -> TokenStorage","description":"com.okta.authfoundation.SdkDefaults.getTokenStorageFactory","location":"auth-foundation/com.okta.authfoundation/-sdk-defaults/get-token-storage-factory.html","searchKeys":["getTokenStorageFactory","var getTokenStorageFactory: () -> suspend () -> TokenStorage","com.okta.authfoundation.SdkDefaults.getTokenStorageFactory"]},{"name":"var idTokenValidator: IdTokenValidator","description":"com.okta.authfoundation.AuthFoundationDefaults.idTokenValidator","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/id-token-validator.html","searchKeys":["idTokenValidator","var idTokenValidator: IdTokenValidator","com.okta.authfoundation.AuthFoundationDefaults.idTokenValidator"]},{"name":"var ioDispatcher: CoroutineContext","description":"com.okta.authfoundation.AuthFoundationDefaults.ioDispatcher","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/io-dispatcher.html","searchKeys":["ioDispatcher","var ioDispatcher: CoroutineContext","com.okta.authfoundation.AuthFoundationDefaults.ioDispatcher"]},{"name":"var isSyncDecryptionContext: Boolean","description":"com.okta.authfoundation.credential.TokenEncryptionHandler.Companion.isSyncDecryptionContext","location":"auth-foundation/com.okta.authfoundation.credential/-token-encryption-handler/-companion/is-sync-decryption-context.html","searchKeys":["isSyncDecryptionContext","var isSyncDecryptionContext: Boolean","com.okta.authfoundation.credential.TokenEncryptionHandler.Companion.isSyncDecryptionContext"]},{"name":"var issuedAtGracePeriodInSeconds: Int","description":"com.okta.authfoundation.client.events.ValidateIdTokenEvent.issuedAtGracePeriodInSeconds","location":"auth-foundation/com.okta.authfoundation.client.events/-validate-id-token-event/issued-at-grace-period-in-seconds.html","searchKeys":["issuedAtGracePeriodInSeconds","var issuedAtGracePeriodInSeconds: Int","com.okta.authfoundation.client.events.ValidateIdTokenEvent.issuedAtGracePeriodInSeconds"]},{"name":"var keyAlias: String","description":"com.okta.authfoundation.AuthFoundationDefaults.Encryption.keyAlias","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/-encryption/key-alias.html","searchKeys":["keyAlias","var keyAlias: String","com.okta.authfoundation.AuthFoundationDefaults.Encryption.keyAlias"]},{"name":"var legacyKeyGenParameterSpec: KeyGenParameterSpec","description":"com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion.legacyKeyGenParameterSpec","location":"auth-foundation/com.okta.authfoundation.credential.storage.migration/-v1-to-v2-storage-migrator/-companion/legacy-key-gen-parameter-spec.html","searchKeys":["legacyKeyGenParameterSpec","var legacyKeyGenParameterSpec: KeyGenParameterSpec","com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion.legacyKeyGenParameterSpec"]},{"name":"var legacyStorage: LegacyTokenStorage","description":"com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion.legacyStorage","location":"auth-foundation/com.okta.authfoundation.credential.storage.migration/-v1-to-v2-storage-migrator/-companion/legacy-storage.html","searchKeys":["legacyStorage","var legacyStorage: LegacyTokenStorage","com.okta.authfoundation.credential.storage.migration.V1ToV2StorageMigrator.Companion.legacyStorage"]},{"name":"var loginCancellationDebounceTime: Duration","description":"com.okta.authfoundation.AuthFoundationDefaults.loginCancellationDebounceTime","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/login-cancellation-debounce-time.html","searchKeys":["loginCancellationDebounceTime","var loginCancellationDebounceTime: Duration","com.okta.authfoundation.AuthFoundationDefaults.loginCancellationDebounceTime"]},{"name":"var maxRetries: Int","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent.maxRetries","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/max-retries.html","searchKeys":["maxRetries","var maxRetries: Int","com.okta.authfoundation.client.events.RateLimitExceededEvent.maxRetries"]},{"name":"var minDelaySeconds: Long","description":"com.okta.authfoundation.client.events.RateLimitExceededEvent.minDelaySeconds","location":"auth-foundation/com.okta.authfoundation.client.events/-rate-limit-exceeded-event/min-delay-seconds.html","searchKeys":["minDelaySeconds","var minDelaySeconds: Long","com.okta.authfoundation.client.events.RateLimitExceededEvent.minDelaySeconds"]},{"name":"var okHttpClientFactory: () -> Call.Factory","description":"com.okta.authfoundation.AuthFoundationDefaults.okHttpClientFactory","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/ok-http-client-factory.html","searchKeys":["okHttpClientFactory","var okHttpClientFactory: () -> Call.Factory","com.okta.authfoundation.AuthFoundationDefaults.okHttpClientFactory"]},{"name":"var promptInfo: BiometricPrompt.PromptInfo?","description":"com.okta.authfoundation.credential.Credential.Security.Companion.promptInfo","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-companion/prompt-info.html","searchKeys":["promptInfo","var promptInfo: BiometricPrompt.PromptInfo?","com.okta.authfoundation.credential.Credential.Security.Companion.promptInfo"]},{"name":"var shouldClearStorageAndTryAgain: Boolean","description":"com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent.shouldClearStorageAndTryAgain","location":"auth-foundation/com.okta.authfoundation.credential.events/-token-storage-access-error-event/should-clear-storage-and-try-again.html","searchKeys":["shouldClearStorageAndTryAgain","var shouldClearStorageAndTryAgain: Boolean","com.okta.authfoundation.credential.events.TokenStorageAccessErrorEvent.shouldClearStorageAndTryAgain"]},{"name":"var standard: Credential.Security","description":"com.okta.authfoundation.credential.Credential.Security.Companion.standard","location":"auth-foundation/com.okta.authfoundation.credential/-credential/-security/-companion/standard.html","searchKeys":["standard","var standard: Credential.Security","com.okta.authfoundation.credential.Credential.Security.Companion.standard"]},{"name":"var tags: Map<String, String>","description":"com.okta.authfoundation.credential.Credential.tags","location":"auth-foundation/com.okta.authfoundation.credential/-credential/tags.html","searchKeys":["tags","var tags: Map<String, String>","com.okta.authfoundation.credential.Credential.tags"]},{"name":"var token: Token","description":"com.okta.authfoundation.credential.Credential.token","location":"auth-foundation/com.okta.authfoundation.credential/-credential/token.html","searchKeys":["token","var token: Token","com.okta.authfoundation.credential.Credential.token"]},{"name":"var tokenEncryptionHandler: TokenEncryptionHandler","description":"com.okta.authfoundation.AuthFoundationDefaults.tokenEncryptionHandler","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/token-encryption-handler.html","searchKeys":["tokenEncryptionHandler","var tokenEncryptionHandler: TokenEncryptionHandler","com.okta.authfoundation.AuthFoundationDefaults.tokenEncryptionHandler"]},{"name":"var tokenStorageFactory: suspend () -> TokenStorage","description":"com.okta.authfoundation.AuthFoundationDefaults.tokenStorageFactory","location":"auth-foundation/com.okta.authfoundation/-auth-foundation-defaults/token-storage-factory.html","searchKeys":["tokenStorageFactory","var tokenStorageFactory: suspend () -> TokenStorage","com.okta.authfoundation.AuthFoundationDefaults.tokenStorageFactory"]},{"name":"abstract fun launch(context: Context, url: HttpUrl): Exception?","description":"com.okta.webauthenticationui.WebAuthenticationProvider.launch","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication-provider/launch.html","searchKeys":["launch","abstract fun launch(context: Context, url: HttpUrl): Exception?","com.okta.webauthenticationui.WebAuthenticationProvider.launch"]},{"name":"class CustomizeBrowserEvent : Event","description":"com.okta.webauthenticationui.events.CustomizeBrowserEvent","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-browser-event/index.html","searchKeys":["CustomizeBrowserEvent","class CustomizeBrowserEvent : Event","com.okta.webauthenticationui.events.CustomizeBrowserEvent"]},{"name":"class CustomizeCustomTabsEvent : Event","description":"com.okta.webauthenticationui.events.CustomizeCustomTabsEvent","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-custom-tabs-event/index.html","searchKeys":["CustomizeCustomTabsEvent","class CustomizeCustomTabsEvent : Event","com.okta.webauthenticationui.events.CustomizeCustomTabsEvent"]},{"name":"class FlowCancelledException : Exception","description":"com.okta.webauthenticationui.WebAuthentication.FlowCancelledException","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/-flow-cancelled-exception/index.html","searchKeys":["FlowCancelledException","class FlowCancelledException : Exception","com.okta.webauthenticationui.WebAuthentication.FlowCancelledException"]},{"name":"class WebAuthentication(client: OAuth2Client, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(client.configuration.eventCoordinator))","description":"com.okta.webauthenticationui.WebAuthentication","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/index.html","searchKeys":["WebAuthentication","class WebAuthentication(client: OAuth2Client, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(client.configuration.eventCoordinator))","com.okta.webauthenticationui.WebAuthentication"]},{"name":"constructor(client: OAuth2Client, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(client.configuration.eventCoordinator))","description":"com.okta.webauthenticationui.WebAuthentication.WebAuthentication","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/-web-authentication.html","searchKeys":["WebAuthentication","constructor(client: OAuth2Client, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(client.configuration.eventCoordinator))","com.okta.webauthenticationui.WebAuthentication.WebAuthentication"]},{"name":"constructor(oidcConfiguration: OidcConfiguration, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(oidcConfiguration.eventCoordinator))","description":"com.okta.webauthenticationui.WebAuthentication.WebAuthentication","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/-web-authentication.html","searchKeys":["WebAuthentication","constructor(oidcConfiguration: OidcConfiguration, webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(oidcConfiguration.eventCoordinator))","com.okta.webauthenticationui.WebAuthentication.WebAuthentication"]},{"name":"constructor(webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(OidcConfiguration.default.eventCoordinator))","description":"com.okta.webauthenticationui.WebAuthentication.WebAuthentication","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/-web-authentication.html","searchKeys":["WebAuthentication","constructor(webAuthenticationProvider: WebAuthenticationProvider = DefaultWebAuthenticationProvider(OidcConfiguration.default.eventCoordinator))","com.okta.webauthenticationui.WebAuthentication.WebAuthentication"]},{"name":"data object OnBackPressed : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnBackPressed","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-back-pressed/index.html","searchKeys":["OnBackPressed","data object OnBackPressed : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnBackPressed"]},{"name":"data object OnCreate : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnCreate","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-create/index.html","searchKeys":["OnCreate","data object OnCreate : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnCreate"]},{"name":"data object OnDestroy : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnDestroy","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-destroy/index.html","searchKeys":["OnDestroy","data object OnDestroy : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnDestroy"]},{"name":"data object OnNewIntent : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnNewIntent","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-new-intent/index.html","searchKeys":["OnNewIntent","data object OnNewIntent : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnNewIntent"]},{"name":"data object OnPause : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnPause","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-pause/index.html","searchKeys":["OnPause","data object OnPause : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnPause"]},{"name":"data object OnResume : ForegroundActivityEvent","description":"com.okta.webauthenticationui.ForegroundActivityEvent.OnResume","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/-on-resume/index.html","searchKeys":["OnResume","data object OnResume : ForegroundActivityEvent","com.okta.webauthenticationui.ForegroundActivityEvent.OnResume"]},{"name":"interface WebAuthenticationProvider","description":"com.okta.webauthenticationui.WebAuthenticationProvider","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication-provider/index.html","searchKeys":["WebAuthenticationProvider","interface WebAuthenticationProvider","com.okta.webauthenticationui.WebAuthenticationProvider"]},{"name":"object Companion","description":"com.okta.webauthenticationui.WebAuthentication.Companion","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/-companion/index.html","searchKeys":["Companion","object Companion","com.okta.webauthenticationui.WebAuthentication.Companion"]},{"name":"sealed interface ForegroundActivityEvent : Event","description":"com.okta.webauthenticationui.ForegroundActivityEvent","location":"web-authentication-ui/com.okta.webauthenticationui/-foreground-activity-event/index.html","searchKeys":["ForegroundActivityEvent","sealed interface ForegroundActivityEvent : Event","com.okta.webauthenticationui.ForegroundActivityEvent"]},{"name":"suspend fun login(context: Context, redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","description":"com.okta.webauthenticationui.WebAuthentication.login","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/login.html","searchKeys":["login","suspend fun login(context: Context, redirectUrl: String, extraRequestParameters: Map<String, String> = emptyMap(), scope: String = client.configuration.defaultScope): OAuth2ClientResult<Token>","com.okta.webauthenticationui.WebAuthentication.login"]},{"name":"suspend fun logoutOfBrowser(context: Context, redirectUrl: String, idToken: String): OAuth2ClientResult<Unit>","description":"com.okta.webauthenticationui.WebAuthentication.logoutOfBrowser","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/logout-of-browser.html","searchKeys":["logoutOfBrowser","suspend fun logoutOfBrowser(context: Context, redirectUrl: String, idToken: String): OAuth2ClientResult<Unit>","com.okta.webauthenticationui.WebAuthentication.logoutOfBrowser"]},{"name":"typealias WebAuthenticationClient = WebAuthentication","description":"com.okta.webauthenticationui.WebAuthenticationClient","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication-client/index.html","searchKeys":["WebAuthenticationClient","typealias WebAuthenticationClient = WebAuthentication","com.okta.webauthenticationui.WebAuthenticationClient"]},{"name":"val context: Context","description":"com.okta.webauthenticationui.events.CustomizeCustomTabsEvent.context","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-custom-tabs-event/context.html","searchKeys":["context","val context: Context","com.okta.webauthenticationui.events.CustomizeCustomTabsEvent.context"]},{"name":"val intentBuilder: CustomTabsIntent.Builder","description":"com.okta.webauthenticationui.events.CustomizeCustomTabsEvent.intentBuilder","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-custom-tabs-event/intent-builder.html","searchKeys":["intentBuilder","val intentBuilder: CustomTabsIntent.Builder","com.okta.webauthenticationui.events.CustomizeCustomTabsEvent.intentBuilder"]},{"name":"val preferredBrowsers: MutableList<String>","description":"com.okta.webauthenticationui.events.CustomizeBrowserEvent.preferredBrowsers","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-browser-event/preferred-browsers.html","searchKeys":["preferredBrowsers","val preferredBrowsers: MutableList<String>","com.okta.webauthenticationui.events.CustomizeBrowserEvent.preferredBrowsers"]},{"name":"var authorizationCodeFlow: AuthorizationCodeFlow","description":"com.okta.webauthenticationui.WebAuthentication.authorizationCodeFlow","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/authorization-code-flow.html","searchKeys":["authorizationCodeFlow","var authorizationCodeFlow: AuthorizationCodeFlow","com.okta.webauthenticationui.WebAuthentication.authorizationCodeFlow"]},{"name":"var queryIntentServicesFlags: Int","description":"com.okta.webauthenticationui.events.CustomizeBrowserEvent.queryIntentServicesFlags","location":"web-authentication-ui/com.okta.webauthenticationui.events/-customize-browser-event/query-intent-services-flags.html","searchKeys":["queryIntentServicesFlags","var queryIntentServicesFlags: Int","com.okta.webauthenticationui.events.CustomizeBrowserEvent.queryIntentServicesFlags"]},{"name":"var redirectEndSessionFlow: RedirectEndSessionFlow","description":"com.okta.webauthenticationui.WebAuthentication.redirectEndSessionFlow","location":"web-authentication-ui/com.okta.webauthenticationui/-web-authentication/redirect-end-session-flow.html","searchKeys":["redirectEndSessionFlow","var redirectEndSessionFlow: RedirectEndSessionFlow","com.okta.webauthenticationui.WebAuthentication.redirectEndSessionFlow"]}]