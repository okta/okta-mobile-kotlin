plugins {
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-parcelize")
}

apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.vanniktech.maven.publish.base'
apply plugin: 'binary-compatibility-validator'

def copyKotlinTemplates = tasks.register('copyKotlinTemplates', Copy) {
    from("src/main/kotlinTemplates")
    into("$buildDir/generated/sources/kotlinTemplates")
    expand(projectVersion: project.version)
}

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += ["-Xopt-in=com.okta.authfoundation.InternalAuthFoundationApi"]
    }
    buildFeatures {
        buildConfig = false
    }

    testVariants.all {
        it.mergedFlavor.manifestPlaceholders = [webAuthenticationRedirectScheme: "unitTest"]
    }

    unitTestVariants.all {
        it.mergedFlavor.manifestPlaceholders = [webAuthenticationRedirectScheme: "unitTest"]
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        main {
            kotlin.srcDir(copyKotlinTemplates.get().outputs)
        }
    }
    namespace 'com.okta.webauthenticationui'
}

dependencies {
    coreLibraryDesugaring libs.core.library.desugaring

    api libs.kotlin.stdlib
    api libs.okhttp.core
    api libs.okio.core
    api libs.coroutines.android
    api libs.kotlin.serialization.json
    api project(':auth-foundation')
    api project(':oauth2')
    api libs.androidx.browser

    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.androidx.activity.ktx
    implementation libs.app.compat
    implementation libs.okio.jvm

    testImplementation libs.junit
    testImplementation libs.truth
    testImplementation libs.kotlin.test
    testImplementation libs.coroutines.test
    testImplementation libs.robolectric
    testImplementation libs.bcprov.jdk18on
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.core.ktx
    testImplementation libs.mockito.core
    testImplementation libs.mockito.kotlin
    testImplementation libs.mockk.android
    testImplementation libs.mockk.agent
    testImplementation project(':test-helpers')
}

preBuild.dependsOn(copyKotlinTemplates)
