def versions = [:]
versions.androidx_activity = '1.5.1'
versions.androidx_annotation = '1.4.0'
versions.androidx_biometric = '1.1.0'
versions.androidx_browser = '1.5.0'
versions.androidx_constraintlayout = '2.1.4'
versions.androidx_datastore_preferences = '1.0.0'
versions.androidx_sqlite = '2.2.0'
versions.androidx_test = '1.5.0'
versions.androidx_test_runner = '1.5.2'
versions.androidx_test_ext = '1.1.5'
versions.androidx_test_orchestrator = '1.4.2'
versions.androidx_text_uiautomator = '2.2.0'
versions.android_gradle_plugin = '8.1.2'
versions.appcompat = '1.4.2'
versions.core_library_desugaring = '2.0.3'
versions.core_ktx = '1.8.0'
versions.coroutines = '1.7.3'
versions.dokka = '1.9.10'
versions.espresso = '3.5.1'
versions.fragment = '1.5.1'
versions.gradle_maven_publish = '0.25.2'
versions.jackson = '2.15.2'
versions.jsoup = '1.16.1'
versions.junit = '4.13.2'
versions.kotlin = '1.9.10'
versions.kotlin_binary_compatibility = '0.13.2'
versions.kotlin_serialization = '1.6.0'
versions.leakcanary = '2.12'
versions.lifecycle = '2.5.1'
versions.material = '1.6.1'
versions.mockito_core = '4.6.1'
versions.mockito_kotlin = '4.0.0'
versions.mockk = '1.13.7'
versions.navigation = '2.5.1'
versions.okhttp = '4.11.0'
versions.okio = '3.5.0'
versions.okta_authn = '2.0.11'
versions.okta_legacy_oidc = '1.3.2'
versions.okta_management = '13.0.2'
versions.robolectric = '4.11'
versions.room = '2.6.1'
versions.security_crypto = '1.0.0'
versions.snakeyaml = '2.0'
versions.spotless = '6.7.0'
versions.sqlcipher_android = '4.5.6'
versions.startup_runtime = '1.1.1'
versions.timber = '5.0.1'
versions.truth = '1.1.5'
versions.turbine = '0.9.0'
ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 23
build_versions.compile_sdk = 34
build_versions.target_sdk = 34
ext.build_versions = build_versions

def deps = [:]

deps.androidx_activity_ktx = "androidx.activity:activity-ktx:$versions.androidx_activity"
deps.androidx_annotation = "androidx.annotation:annotation:$versions.androidx_annotation"

deps.androidx_biometric = "androidx.biometric:biometric:$versions.androidx_biometric"

deps.androidx_browser = "androidx.browser:browser:$versions.androidx_browser"

deps.androidx_constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"

deps.androidx_datastore_preferences = "androidx.datastore:datastore-preferences:$versions.androidx_datastore_preferences"

deps.androidx_sqlite = "androidx.sqlite:sqlite:$versions.androidx_sqlite"

def androidx_test = [:]
androidx_test.core = "androidx.test:core:$versions.androidx_test"
androidx_test.core_ktx = "androidx.test:core-ktx:$versions.androidx_test"
androidx_test.ext_junit = "androidx.test.ext:junit:$versions.androidx_test_ext"
androidx_test.fragment = "androidx.fragment:fragment-testing:$versions.fragment"
androidx_test.navigation = "androidx.navigation:navigation-testing:$versions.navigation"
androidx_test.orchestrator = "androidx.test:orchestrator:$versions.androidx_test_orchestrator"
androidx_test.runner = "androidx.test:runner:$versions.androidx_test_runner"
androidx_test.rules = "androidx.test:rules:$versions.androidx_test"
androidx_test.uiautomator = "androidx.test.uiautomator:uiautomator:$versions.androidx_text_uiautomator"
deps.androidx_test = androidx_test

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"

deps.core_library_desugaring = "com.android.tools:desugar_jdk_libs:$versions.core_library_desugaring"

deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines

deps.desugar_libs = "com.android.tools:desugar_jdk_libs:$versions.core_library_desugaring"

deps.dokka_gradle_plugin = "org.jetbrains.dokka:dokka-gradle-plugin:$versions.dokka"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.gradle_maven_publish = "com.vanniktech:gradle-maven-publish-plugin:$versions.gradle_maven_publish"

deps.jackson_databind = "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
deps.jackson_yaml = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$versions.jackson"

deps.jsoup = "org.jsoup:jsoup:$versions.jsoup"

deps.junit = "junit:junit:$versions.junit"

def kotlin = [:]
kotlin.binary_compatibility_plugin = "org.jetbrains.kotlinx:binary-compatibility-validator:$versions.kotlin_binary_compatibility"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.serialization_json = "org.jetbrains.kotlinx:kotlinx-serialization-json:$versions.kotlin_serialization"
kotlin.serialization_okio = "org.jetbrains.kotlinx:kotlinx-serialization-json-okio:$versions.kotlin_serialization"
kotlin.serialization_plugin = "org.jetbrains.kotlin:kotlin-serialization:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
deps.kotlin = kotlin

def leakcanary = [:]
leakcanary.android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.instrumentation = "com.squareup.leakcanary:leakcanary-android-instrumentation:$versions.leakcanary"
deps.leakcanary = leakcanary

def lifecycle = [:]
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

deps.material = "com.google.android.material:material:$versions.material"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito_core"
mockito.kotlin = "org.mockito.kotlin:mockito-kotlin:$versions.mockito_kotlin"
deps.mockito = mockito

def mockk = [:]
mockk.android = "io.mockk:mockk-android:$versions.mockk"
mockk.agent = "io.mockk:mockk-agent:$versions.mockk"
deps.mockk = mockk

def navigation = [:]
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def okhttp = [:]
okhttp.core = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
okhttp.tls = "com.squareup.okhttp3:okhttp-tls:$versions.okhttp"
deps.okhttp = okhttp

def okio = [:]
okio.core = "com.squareup.okio:okio:$versions.okio"
okio.jvm = "com.squareup.okio:okio-jvm:$versions.okio"
deps.okio = okio

def okta = [:]
okta.authn_impl = "com.okta.authn.sdk:okta-authn-sdk-impl:$versions.okta_authn"
okta.authn_api = "com.okta.authn.sdk:okta-authn-sdk-api:$versions.okta_authn"
okta.legacy_oidc = "com.okta.android:okta-oidc-android:$versions.okta_legacy_oidc"
okta.management_sdk = "com.okta.sdk:okta-sdk-impl:$versions.okta_management"
deps.okta = okta

deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

deps.security_crypto = "androidx.security:security-crypto:$versions.security_crypto"
deps.spotless = "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotless"

deps.sqlcipher_android = "net.zetetic:sqlcipher-android:$versions.sqlcipher_android@aar"

deps.startup_runtime = "androidx.startup:startup-runtime:$versions.startup_runtime"

deps.snakeyaml = "org.yaml:snakeyaml:$versions.snakeyaml"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.truth = "com.google.truth:truth:$versions.truth"
deps.turbine = "app.cash.turbine:turbine:$versions.turbine"

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.mavenLocal()
    handler.google()
    handler.mavenCentral()
}

def forceVersions(ConfigurationContainer configurations) {
    configurations.configureEach { configuration ->
        configuration.resolutionStrategy {
            force deps.jackson_databind // Vulnerability fix: OKTA-609904
        }
    }
}

def configureSpotless(Project project) {
    project.apply plugin: 'com.diffplug.spotless'

    project.spotless {
        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/.gitignore', '**/*.xml', '**/*.json', '**/*.properties', '**/*.yml', '**/*.kt'
            targetExclude '.idea/*', '**/build/*', '.gradle/*'

            trimTrailingWhitespace()
            endWithNewline()
        }
    }

    project.plugins.withId('kotlin-android') {
        project.spotless {
            kotlin {
                target '**/*.kt'
                ktlint()
                licenseHeaderFile rootProject.file('licenseTemplate.txt')
            }
        }
    }
}

ext.addRepos = this.&addRepos
ext.forceVersions = this.&forceVersions
ext.configureSpotless = this.&configureSpotless
